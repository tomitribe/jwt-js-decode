{"version":3,"file":"jwt-js-decode.umd.js","sources":["../src/int10.ts","../src/util.ts","../src/asn1.ts","../src/jwt-js-decode.ts"],"sourcesContent":["const max = 10000000000000; // biggest 10^n integer that can still fit 2^53 when multiplied by 256\n\nexport default class Int10 {\n    buf: any[];\n\n    constructor(value?) {\n        this.buf = [+value || 0];\n    }\n\n    mulAdd(m, c) {\n        // assert(m <= 256)\n        const b = this.buf,\n            l = b.length;\n        let i, t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] * m + c;\n            if (t < max) c = 0;\n            else {\n                c = 0 | (t / max);\n                t -= c * max;\n            }\n            b[i] = t;\n        }\n        if (c > 0) b[i] = c;\n    }\n\n    sub(c) {\n        // assert(m <= 256)\n        const b = this.buf,\n            l = b.length;\n        let i, t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] - c;\n            if (t < 0) {\n                t += max;\n                c = 1;\n            } else c = 0;\n            b[i] = t;\n        }\n        while (b[b.length - 1] === 0) b.pop();\n    }\n\n    toString(base?: number) {\n        if ((base || 10) != 10) throw 'only base 10 is supported';\n        const b = this.buf;\n        let s = b[b.length - 1].toString();\n        for (let i = b.length - 2; i >= 0; --i) s += (max + b[i]).toString().substring(1);\n        return s;\n    }\n\n    valueOf() {\n        const b = this.buf;\n        let v = 0;\n        for (let i = b.length - 1; i >= 0; --i) v = v * max + b[i];\n        return v;\n    }\n\n    simplify() {\n        const b = this.buf;\n        return b.length == 1 ? b[0] : this;\n    }\n}\n\nexport { Int10 };\n","export const UNSUPPORTED_ALGORITHM =\n    'Unsupported algorithm name specified! Supported algorithms: \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\" and \"none\".';\nexport const ILLEGAL_ARGUMENT = 'Illegal argument specified!';\nexport const CRYPTO_NOT_FOUND = \"Could not find 'crypto'.\";\nexport const PAKO_NOT_FOUND = \"Could not find 'pako'.\";\nexport const UNSUPPORTED_ZIP_TYPE = 'Unsupported zip type.';\n\nexport function generateErrorMessage(value, callee, argumentName = 'argument', defaultType = 'string') {\n    let message = `Invalid argument passed to ${callee}.`;\n    if (typeof value !== defaultType) {\n        message += ` Expected type '${defaultType}', received '${typeof value}'.`;\n    } else if (!value) {\n        message += ` Provided ${argumentName} is empty.`;\n    } else if (argumentName !== 'argument') {\n        message += ` Provided ${argumentName} is invalid.`;\n    }\n    return message;\n}\n\nexport function num2hex(memo: string, i: number): string {\n    return memo + ('0' + i.toString(16)).slice(-2);\n}\n\n// clean leading zeros\nexport function cleanZeros(b) {\n    return b[0] === 0 ? cleanZeros(b.slice(1)) : b;\n}\n\nexport function hex2AB(hex: string): ArrayBuffer | Uint8Array {\n    if (!hex) throw new Error(ILLEGAL_ARGUMENT);\n    const match = hex.match(/[0-9A-F]{2}/gi);\n    if (!match) throw new Error(ILLEGAL_ARGUMENT);\n    return new Uint8Array(match.map((i) => parseInt(i, 16)));\n}\n\nexport function AB2hex(buff: ArrayBuffer | Uint8Array): string {\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    return (buff as Uint8Array).reduce(num2hex, '');\n}\n","import { Int10 } from './int10';\nimport { cleanZeros, hex2AB } from './util';\n\nconst ellipsis = '\\u2026',\n    reTimeS =\n        /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/,\n    reTimeL =\n        /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\n\nfunction stringCut(str, len) {\n    if (str.length > len) str = str.substring(0, len) + ellipsis;\n    return str;\n}\n\nexport class Stream {\n    enc: any;\n    pos: any;\n\n    constructor(enc, pos = 0) {\n        if (enc instanceof Stream) {\n            this.enc = enc.enc;\n            this.pos = enc.pos;\n        } else {\n            this.enc = enc;\n            this.pos = pos;\n        }\n    }\n\n    get(pos) {\n        if (pos === undefined) pos = this.pos++;\n        if (pos >= this.enc.length) throw 'Requesting byte offset ' + pos + ' on a stream of length ' + this.enc.length;\n        return typeof this.enc == 'string' ? this.enc.charCodeAt(pos) : this.enc[pos];\n    }\n\n    hexDigits = '0123456789ABCDEF';\n\n    hexByte(b) {\n        return this.hexDigits.charAt((b >> 4) & 0xf) + this.hexDigits.charAt(b & 0xf);\n    }\n\n    hexDump(start, end, raw) {\n        let s = '';\n        for (let i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n            if (raw !== true)\n                switch (i & 0xf) {\n                    case 0x7:\n                        s += '  ';\n                        break;\n                    case 0xf:\n                        s += '\\n';\n                        break;\n                    default:\n                        s += ' ';\n                }\n        }\n        return s;\n    }\n\n    isASCII(start, end) {\n        for (let i = start; i < end; ++i) {\n            const c = this.get(i);\n            if (c < 32 || c > 176) return false;\n        }\n        return true;\n    }\n\n    parseStringISO(start, end) {\n        let s = '';\n        for (let i = start; i < end; ++i) s += String.fromCharCode(this.get(i));\n        return s;\n    }\n\n    parseStringUTF(start, end) {\n        let s = '';\n        for (let i = start; i < end; ) {\n            const c = this.get(i++);\n            if (c < 128) s += String.fromCharCode(c);\n            else if (c > 191 && c < 224) s += String.fromCharCode(((c & 0x1f) << 6) | (this.get(i++) & 0x3f));\n            else s += String.fromCharCode(((c & 0x0f) << 12) | ((this.get(i++) & 0x3f) << 6) | (this.get(i++) & 0x3f));\n        }\n        return s;\n    }\n\n    parseStringBMP(start, end) {\n        let str = '',\n            hi,\n            lo;\n        for (let i = start; i < end; ) {\n            hi = this.get(i++);\n            lo = this.get(i++);\n            str += String.fromCharCode((hi << 8) | lo);\n        }\n        return str;\n    }\n\n    parseTime(start, end, shortYear) {\n        let s = this.parseStringISO(start, end);\n        const m = (shortYear ? reTimeS : reTimeL).exec(s);\n        if (!m) return 'Unrecognized time: ' + s;\n        if (shortYear) {\n            const t = +m[1],\n                y = t < 70 ? 2000 : 1900;\n            m[1] = y + '';\n        }\n        s = m[1] + '-' + m[2] + '-' + m[3] + ' ' + m[4];\n        if (m[5]) {\n            s += ':' + m[5];\n            if (m[6]) {\n                s += ':' + m[6];\n                if (m[7]) s += '.' + m[7];\n            }\n        }\n        if (m[8]) {\n            s += ' UTC';\n            if (m[8] != 'Z') {\n                s += m[8];\n                if (m[9]) s += ':' + m[9];\n            }\n        }\n        return s;\n    }\n\n    parseInteger(start, end) {\n        let v = this.get(start),\n            len,\n            s = '';\n        const neg = v > 127,\n            pad = neg ? 255 : 0;\n        while (v == pad && ++start < end) v = this.get(start);\n        len = end - start;\n        if (len === 0) return neg ? -1 : 0;\n        if (len > 4) {\n            let t = +v;\n            len <<= 3;\n            while (((t ^ pad) & 0x80) === 0) {\n                t <<= 1;\n                --len;\n            }\n            s = '(' + len + ' bit)\\n';\n        }\n        if (neg) v = v - 256;\n        const n = new Int10(v);\n        for (let i = start + 1; i < end; ++i) n.mulAdd(256, this.get(i));\n        return s + n.toString();\n    }\n\n    parseBitString(start, end, maxLength) {\n        const unusedBit = this.get(start),\n            lenBit = ((end - start - 1) << 3) - unusedBit,\n            intro = '(' + lenBit + ' bit)\\n';\n        let s = '';\n        for (let i = start + 1; i < end; ++i) {\n            const b = this.get(i),\n                skip = i == end - 1 ? unusedBit : 0;\n            for (let j = 7; j >= skip; --j) s += (b >> j) & 1 ? '1' : '0';\n            if (s.length > maxLength) return intro + stringCut(s, maxLength);\n        }\n        return intro + s;\n    }\n\n    parseOctetString(start, end, maxLength) {\n        if (this.isASCII(start, end)) return stringCut(this.parseStringISO(start, end), maxLength);\n        const len = end - start;\n        let s = '(' + len + ' byte)\\n';\n        maxLength /= 2;\n        if (len > maxLength) end = start + maxLength;\n        for (let i = start; i < end; ++i) s += this.hexByte(this.get(i));\n        if (len > maxLength) s += ellipsis;\n        return s;\n    }\n\n    parseOID(start, end, maxLength) {\n        let s = '',\n            n = new Int10(),\n            bits = 0;\n        for (let i = start; i < end; ++i) {\n            const v = this.get(i);\n            n.mulAdd(128, v & 0x7f);\n            bits += 7;\n            if (!(v & 0x80)) {\n                if (s === '') {\n                    n = n.simplify();\n                    if (n instanceof Int10) {\n                        n.sub(80);\n                        s = '2.' + n.toString();\n                    } else {\n                        const m = n < 80 ? (n < 40 ? 0 : 1) : 2;\n                        s = m + '.' + (n - m * 40);\n                    }\n                } else s += '.' + n.toString();\n                if (s.length > maxLength) return stringCut(s, maxLength);\n                n = new Int10();\n                bits = 0;\n            }\n        }\n        if (bits > 0) s += '.incomplete';\n        return s;\n    }\n}\n\nexport class ASN1 {\n    stream: any;\n    header: any;\n    length: any;\n    tag: any;\n    sub: any;\n\n    constructor(stream, header, length, tag, sub) {\n        if (!(tag instanceof ASN1Tag)) throw 'Invalid tag value.';\n        this.stream = stream;\n        this.header = header;\n        this.length = length;\n        this.tag = tag;\n        this.sub = sub;\n    }\n\n    typeName() {\n        switch (this.tag.tagClass) {\n            case 0:\n                switch (this.tag.tagNumber) {\n                    case 0x00:\n                        return 'EOC';\n                    case 0x01:\n                        return 'BOOLEAN';\n                    case 0x02:\n                        return 'INTEGER';\n                    case 0x03:\n                        return 'BIT_STRING';\n                    case 0x04:\n                        return 'OCTET_STRING';\n                    case 0x05:\n                        return 'NULL';\n                    case 0x06:\n                        return 'OBJECT_IDENTIFIER';\n                    case 0x07:\n                        return 'ObjectDescriptor';\n                    case 0x08:\n                        return 'EXTERNAL';\n                    case 0x09:\n                        return 'REAL';\n                    case 0x0a:\n                        return 'ENUMERATED';\n                    case 0x0b:\n                        return 'EMBEDDED_PDV';\n                    case 0x0c:\n                        return 'UTF8String';\n                    case 0x10:\n                        return 'SEQUENCE';\n                    case 0x11:\n                        return 'SET';\n                    case 0x12:\n                        return 'NumericString';\n                    case 0x13:\n                        return 'PrintableString';\n                    case 0x14:\n                        return 'TeletexString';\n                    case 0x15:\n                        return 'VideotexString';\n                    case 0x16:\n                        return 'IA5String';\n                    case 0x17:\n                        return 'UTCTime';\n                    case 0x18:\n                        return 'GeneralizedTime';\n                    case 0x19:\n                        return 'GraphicString';\n                    case 0x1a:\n                        return 'VisibleString';\n                    case 0x1b:\n                        return 'GeneralString';\n                    case 0x1c:\n                        return 'UniversalString';\n                    case 0x1e:\n                        return 'BMPString';\n                }\n                return 'Universal_' + this.tag.tagNumber.toString();\n            case 1:\n                return 'Application_' + this.tag.tagNumber.toString();\n            case 2:\n                return '[' + this.tag.tagNumber.toString() + ']';\n            case 3:\n                return 'Private_' + this.tag.tagNumber.toString();\n        }\n    }\n\n    content(maxLength?) {\n        if (this.tag === undefined) return null;\n        if (maxLength === undefined) maxLength = Infinity;\n        const content = this.posContent(),\n            len = Math.abs(this.length);\n        if (!this.tag.isUniversal()) {\n            if (this.sub !== null) return '(' + this.sub.length + ' elem)';\n            return this.stream.parseOctetString(content, content + len, maxLength);\n        }\n        switch (this.tag.tagNumber) {\n            case 0x01:\n                return this.stream.get(content) === 0 ? 'false' : 'true';\n            case 0x02:\n                return this.stream.parseInteger(content, content + len);\n            case 0x03:\n                return this.sub\n                    ? '(' + this.sub.length + ' elem)'\n                    : this.stream.parseBitString(content, content + len, maxLength);\n            case 0x04:\n                return this.sub\n                    ? '(' + this.sub.length + ' elem)'\n                    : this.stream.parseOctetString(content, content + len, maxLength);\n\n            case 0x06:\n                return this.stream.parseOID(content, content + len, maxLength);\n\n            case 0x10:\n            case 0x11:\n                if (this.sub !== null) return '(' + this.sub.length + ' elem)';\n                else return '(no elem)';\n            case 0x0c:\n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x1a:\n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\n            case 0x1e:\n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\n            case 0x17:\n            case 0x18:\n                return this.stream.parseTime(content, content + len, this.tag.tagNumber == 0x17);\n        }\n        return null;\n    }\n\n    toString() {\n        return (\n            this.typeName() +\n            '@' +\n            this.stream.pos +\n            '[header:' +\n            this.header +\n            ',length:' +\n            this.length +\n            ',sub:' +\n            (this.sub === null ? 'null' : this.sub.length) +\n            ']'\n        );\n    }\n\n    posStart() {\n        return this.stream.pos;\n    }\n\n    posContent() {\n        return this.stream.pos + this.header;\n    }\n\n    posEnd() {\n        return this.stream.pos + this.header + Math.abs(this.length);\n    }\n\n    toHexString() {\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\n    }\n\n    getHex() {\n        return this.stream.hexDump(this.posContent(), this.posEnd(), true);\n    }\n\n    getAB(clean = true) {\n        return clean ? cleanZeros(hex2AB(this.getHex())) : hex2AB(this.getHex());\n    }\n\n    static decodeLength(stream) {\n        let buf = stream.get();\n        const len = buf & 0x7f;\n        if (len == buf) return len;\n        if (len > 6) throw 'Length over 48 bits not supported at position ' + (stream.pos - 1);\n        if (len === 0) return null;\n        buf = 0;\n        for (let i = 0; i < len; ++i) buf = buf * 256 + stream.get();\n        return buf;\n    }\n\n    static decode(stream) {\n        if (!(stream instanceof Stream)) stream = new Stream(stream, 0);\n        const streamStart = new Stream(stream);\n        const tag = new ASN1Tag(stream);\n        let len = ASN1.decodeLength(stream),\n            sub: any = null;\n        const start = stream.pos;\n        const header = start - streamStart.pos;\n        const getSub = function () {\n            sub = [];\n            if (len !== null) {\n                const end = start + len;\n                while (stream.pos < end) sub[sub.length] = ASN1.decode(stream);\n                if (stream.pos != end) throw 'Content size is not correct for container starting at offset ' + start;\n            } else {\n                try {\n                    for (;;) {\n                        const s = ASN1.decode(stream);\n                        if (s.tag.isEOC()) break;\n                        sub[sub.length] = s;\n                    }\n                    len = start - stream.pos;\n                } catch (e) {\n                    throw 'Exception while decoding undefined length content: ' + e;\n                }\n            }\n        };\n        if (tag.tagConstructed) {\n            getSub();\n        } else if (tag.isUniversal() && (tag.tagNumber == 0x03 || tag.tagNumber == 0x04)) {\n            try {\n                if (tag.tagNumber == 0x03)\n                    if (stream.get() != 0) throw 'BIT STRINGs with unused bits cannot encapsulate.';\n                getSub();\n                for (let i = 0; i < sub.length; ++i)\n                    if (sub[i].tag.isEOC()) throw 'EOC is not supposed to be actual content.';\n            } catch (e) {\n                sub = null;\n            }\n        }\n        if (sub === null) {\n            if (len === null) throw \"We can't skip over an invalid tag with undefined length at offset \" + start;\n            stream.pos = start + Math.abs(len);\n        }\n        return new ASN1(streamStart, header, len, tag, sub);\n    }\n}\n\nclass ASN1Tag {\n    tagClass: any;\n    tagConstructed: any;\n    tagNumber: any;\n\n    constructor(stream) {\n        let buf = stream.get();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = (buf & 0x20) !== 0;\n        this.tagNumber = buf & 0x1f;\n        if (this.tagNumber == 0x1f) {\n            const n = new Int10();\n            do {\n                buf = stream.get();\n                n.mulAdd(128, buf & 0x7f);\n            } while (buf & 0x80);\n            this.tagNumber = n.simplify();\n        }\n    }\n\n    isUniversal() {\n        return this.tagClass === 0x00;\n    }\n\n    isEOC() {\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\n    }\n}\n","import pako from 'pako';\n/* Issue3: Works, but ASN1 adds 14kb of code to this lib\nimport ASN1 from \"asn1js\";\n*/\n// Simplified/improved version of\n// \"asn1js\": \"git+https://github.com/lapo-luchini/asn1js.git\",\nimport { ASN1 } from './asn1';\nimport {\n    AB2hex,\n    cleanZeros,\n    CRYPTO_NOT_FOUND,\n    generateErrorMessage,\n    hex2AB,\n    ILLEGAL_ARGUMENT,\n    num2hex,\n    PAKO_NOT_FOUND,\n    UNSUPPORTED_ALGORITHM,\n    UNSUPPORTED_ZIP_TYPE,\n} from './util';\n/*\n//crypto-browserify:\nimport { createHmac, createSign, createVerify } from \"crypto-browserify\";\n//or browserify hmac/sign\nimport { createHmac } from \"create-hmac\";\nimport { createSign, createVerify } from \"browserify-sign\";\n\n//node.js\nimport { createHmac, createSign, createVerify } from \"crypto\";\n*/\nexport const webCrypto = typeof window === 'object' && (window.crypto || window['msCrypto']);\nexport const webCryptoSubtle = webCrypto && (webCrypto.subtle || webCrypto['webkitSubtle'] || webCrypto['Subtle']);\n\n/**\n * Class for creating a JwtSplit object with three parts of JWT Token as strings\n *\n * @class  JwtSplit\n */\nexport class JwtSplit {\n    /**\n     * Header (first) part of JWT Token\n     *\n     * @name  header\n     * @type {string}\n     */\n    public header: string = '';\n\n    /**\n     * Payload (second) part of JWT Token\n     *\n     * @name  payload\n     * @type {string}\n     */\n    public payload: string = '';\n\n    /**\n     * Signature (third) part of JWT Token\n     *\n     * @name  signature\n     * @type {string}\n     */\n    public signature: string = '';\n\n    constructor(str: string, callee = 'JwtSplit') {\n        if (typeof str !== 'string') {\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\n        }\n        this.fromString(str, callee);\n    }\n\n    public fromString(str: string, callee = 'JwtSplit.fromString') {\n        const jwtArr = str.split('.');\n        if (jwtArr.length !== 3) {\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\n        }\n\n        const [header, payload, signature] = jwtArr;\n        this.header = header;\n        this.payload = payload;\n        this.signature = signature;\n    }\n\n    public toString(): string {\n        return this.header + '.' + this.payload + '.' + this.signature;\n    }\n}\n\n/** JwtPart interface basically object type definition used as a placeholder */\ninterface JwtPart {\n    [key: string]: any;\n}\n\n/**\n * Class for creating a JwtDecode object with three parts of JWT Token, header and payload decoded and parsed, signature in initial form\n *\n * @class  JwtDecode\n */\nexport class JwtDecode {\n    /**\n     * Header (first) part of JWT Token\n     *\n     * @name  header\n     * @type {JwtPart}\n     */\n    public header: JwtPart = {};\n\n    /**\n     * Payload (second) part of JWT Token\n     *\n     * @name  payload\n     * @type {JwtPart}\n     */\n    public payload: JwtPart = {};\n\n    /**\n     * Signature (third) part of JWT Token\n     *\n     * @name  signature\n     * @type {string}\n     */\n    public signature: string = '';\n\n    constructor(str: string, callee = 'JwtDecode') {\n        if (typeof str !== 'string') {\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\n        }\n        this.fromString(str, callee);\n    }\n\n    public isGzip(): boolean {\n        return isGzip(this.header);\n    }\n\n    public fromString(str, callee = 'JwtDecode.fromString'): void {\n        const jwtObj: JwtSplit = jwtSplit(str, callee);\n        if (jwtObj) {\n            this.header = jwtObj.header ? s2J(bu2s(jwtObj.header)) : {};\n            this.payload = jwtObj.payload\n                ? this.isGzip()\n                    ? s2J(zbu2s(jwtObj.payload))\n                    : s2J(bu2s(jwtObj.payload))\n                : {};\n            this.signature = jwtObj.signature || '';\n        }\n    }\n\n    public toString(): string {\n        return (\n            s2bu(J2s(this.header)) +\n            '.' +\n            (this.isGzip() ? s2zbu(J2s(this.payload)) : s2bu(J2s(this.payload))) +\n            '.' +\n            this.signature\n        );\n    }\n}\n\n/**\n * Try running function and replace it's response as Promise.resolve/reject\n *\n * @param {function} fn - fn to call in for response\n *\n * @returns {Promise<any>} resulting Promise\n */\nexport function tryPromise(fn) {\n    try {\n        return Promise.resolve(fn());\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\n/**\n * Converts string to JSON object\n *\n * @param {string} str - data string to convert\n *\n * @returns {object} resulting object\n */\nexport function s2J(str: string): any {\n    return JSON.parse(str);\n}\n\n/**\n * Converts JSON object to string\n *\n * @param {object} obj - JSON object to convert\n *\n * @returns {string} resulting string\n */\nexport function J2s(obj: any): string {\n    return JSON.stringify(obj);\n}\n\n/**\n * Converts string to base64 string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} decoded data string\n */\nexport function b2s(str: string): string {\n    if (typeof Buffer !== 'undefined') {\n        return textDecode(Buffer.from(str, 'base64'));\n    } else if (typeof atob !== 'undefined') {\n        return textDecode(atob(str));\n    } else throw new Error(ILLEGAL_ARGUMENT);\n}\n\n/**\n * Converts base64 string to base64url string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64url string\n */\nexport function b2bu(str: string): string {\n    if (typeof str !== 'string' || str.length % 4 !== 0) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\n/**\n *\n * Converts base64url string to base64 string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64 string\n */\nexport function bu2b(str: string): string {\n    if (typeof str !== 'string' || str.length % 4 === 1) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    for (; str.length % 4 !== 0; ) {\n        str += '=';\n    }\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n}\n\n/**\n * Converts base64url string to string\n *\n * @param {string} str - base64url string to convert\n *\n * @returns {string} decoded data string\n */\nexport function bu2s(str: string): string {\n    return b2s(bu2b(str));\n}\n\n/**\n * Check if header has zip property (and it is equal to 'GZIP', ignorecase)\n *\n * @param {string} header - object to check\n *\n * @returns {boolean} does it have gzip in zip property\n */\nexport function isGzip(header: JwtPart): boolean {\n    return typeof header === 'object' && typeof header.zip === 'string' && header.zip.toUpperCase() === 'GZIP';\n}\n\n/**\n * Decode jwtToken header and payload\n *\n * @param {string} str - data string to decode\n *\n * @returns {JwtDecode} object with decoded header and body, and signature untouched\n */\nexport function jwtDecode(str: string, callee = 'jwtDecode'): JwtDecode {\n    return new JwtDecode(str, callee);\n}\n\nexport const decodeJwt = jwtDecode;\nexport const decode = jwtDecode;\n\n/**\n * Split jwtToken into object {header, payload, signature}\n *\n * @param {string} str - data string to split\n *\n * @returns {JwtSplit} jwt split object of three strings\n */\nexport function jwtSplit(str: string, callee = 'jwtSplit'): JwtSplit {\n    return new JwtSplit(str, callee);\n}\n\nexport const splitJwt = jwtSplit;\nexport const split = jwtSplit;\n\n/**\n * Converts base64 string to string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64 string\n */\nexport function s2b(str: string): string {\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(textEncode(str)).toString('base64');\n    } else if (typeof btoa !== 'undefined') {\n        return btoa(AB2s(textEncode(str)));\n    } else throw new Error(ILLEGAL_ARGUMENT);\n}\n\n/**\n * Converts string to base64url string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64url string\n */\nexport function s2bu(str: string): string {\n    return b2bu(s2b(str));\n}\n\n/**\n * Zip and encode data string to base64url string\n *\n * @param {string} str - data string to encode\n * @param {string} type - type of zip type: \"zlib\", \"gzip\". default: \"zlib\"\n *\n * @returns {string} base64url string\n */\nexport function s2zbu(str: string, type = 'zlib'): string {\n    return s2bu(zip(str, type));\n}\n\n/**\n * Converts from zip data string to string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} decoded data string\n */\nexport function unzip(str: string): string {\n    if (typeof str !== 'string') {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    if (!!pako && (pako.inflate || pako.ungzip)) {\n        const buffer = s2U8A(str);\n        let inflated;\n        try {\n            inflated = pako.inflate(buffer, { raw: false });\n        } catch {\n            try {\n                inflated = pako.ungzip(buffer, { raw: false });\n            } catch {\n                throw new Error(UNSUPPORTED_ZIP_TYPE);\n            }\n        }\n\n        return AB2s(inflated);\n    } else {\n        throw new Error(PAKO_NOT_FOUND);\n    }\n}\n\n/**\n * Decode from base64url and unzip data string\n *\n * @param {string} str - data string to decode\n *\n * @returns {string} decoded data string\n */\nexport function zbu2s(str: string): string {\n    return textDecode(unzip(bu2s(str)));\n}\n\n/**\n * Converts string to zip data string\n *\n * @param {string} str - data string to convert\n * @param {string} type - type of zip type: \"zlib\", \"gzip\". default: \"zlib\"\n *\n * @returns {string} zip data string\n */\nexport function zip(str: string, type = 'zlib'): string {\n    if (typeof str !== 'string') {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    if (!!pako && (pako.deflate || pako.gzip)) {\n        let deflated;\n        if (type === 'gzip') {\n            deflated = pako.gzip(str, {\n                raw: false,\n            });\n        } else if (type === 'zlib') {\n            deflated = pako.deflate(str, {\n                raw: false,\n            });\n        } else throw new Error(UNSUPPORTED_ZIP_TYPE);\n        return AB2s(deflated);\n    } else {\n        throw new Error(PAKO_NOT_FOUND);\n    }\n}\n\n/**\n * Converts string to ArrayBuffer\n *\n * @param {string} str - data string to convert\n *\n * @returns {ArrayBuffer} charCode ArrayBuffer\n */\nexport function s2AB(str: string): ArrayBuffer {\n    const buff = new ArrayBuffer(str.length);\n    const view = new Uint8Array(buff);\n    for (let i = 0; i < str.length; i++) view[i] = str.charCodeAt(i);\n    return buff;\n}\n\n/**\n * Converts string to Uint8Array\n *\n * @param {string} str - data string to convert\n *\n * @returns {Uint8Array} charCode Uint8Array\n */\nexport function s2U8A(str: string): ArrayBuffer {\n    const buff = new ArrayBuffer(str.length);\n    const view = new Uint8Array(buff);\n    for (let i = 0; i < str.length; i++) view[i] = str.charCodeAt(i);\n    return view;\n}\n\n/**\n * Converts ArrayBuffer to string\n *\n * @param {ArrayBuffer | Uint8Array} buff - charCode ArrayBuffer to convert\n *\n * @returns {string} data string\n */\nexport function AB2s(buff: ArrayBuffer | Uint8Array): string {\n    if (!(buff instanceof Uint8Array)) buff = new Uint8Array(buff);\n    return String.fromCharCode(...Array.from(buff as Uint8Array));\n}\n\n/**\n * Async function inspired by createHmac in crypto (used WebCrypto Api supported by most browsers)\n *\n */\n\nexport async function createHmac(name: string, secret: string): Promise<any> {\n    if (webCryptoSubtle) {\n        const keyData = s2U8A(secret);\n        return await webCryptoSubtle\n            .importKey('raw', keyData, { name: 'HMAC', hash: { name: name } }, true, ['sign'])\n            .then((key) => {\n                return {\n                    update: async function (thing): Promise<ArrayBuffer> {\n                        return await webCryptoSubtle.sign('HMAC', key, s2U8A(thing));\n                    },\n                };\n            });\n    } else {\n        const crypto = await import('crypto');\n        return !!crypto && crypto.createHmac\n            ? Promise.resolve(crypto.createHmac(name.replace('SHA-', 'sha'), secret))\n            : Promise.reject(webCrypto);\n    }\n}\n\n/**\n * Algorithm HMAC sign generator\n *\n */\nexport function algHSsign(bits: number) {\n    /**\n     * Algorithm HMAC signer\n     *\n     */\n    return async function sign(thing: string, secret: string): Promise<string> {\n        const hmac = await createHmac('SHA-' + bits, secret);\n        if (webCryptoSubtle) {\n            if (!hmac) return Promise.reject(ILLEGAL_ARGUMENT);\n            return Promise.resolve(s2bu(AB2s(await hmac.update(thing))));\n        }\n        return Promise.resolve(b2bu(hmac.update(thing).digest('base64')));\n    };\n}\n\n/**\n * Algorithm HMAC verify generator\n *\n */\nexport function algHSverify(bits: number) {\n    /**\n     * Algorithm HMAC verifier\n     *\n     */\n    return async function verify(thing: string, signature: string, secret: string): Promise<boolean> {\n        return (await algHSsign(bits)(thing, secret)) === signature;\n    };\n}\n\nexport interface PEM {\n    body: ArrayBuffer | Uint8Array;\n    type: 'private' | 'public';\n}\n\nexport function s2pem(secret: string): PEM {\n    if (typeof secret !== 'string') {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    let type = 'public';\n\n    function ignore(line: string): boolean {\n        if (ignoreLinesPriv.some((ign) => line.toUpperCase().indexOf(ign) > -1)) {\n            type = 'private';\n            return false;\n        }\n        return !ignoreLinesPub.some((ign) => line.toUpperCase().indexOf(ign) > -1);\n    }\n\n    const lines = secret.split('\\n'),\n        ignoreLinesPriv = ['-BEGIN RSA PRIVATE KEY-', '-END RSA PRIVATE KEY-'],\n        ignoreLinesPub = ['-BEGIN RSA PUBLIC KEY-', '-BEGIN PUBLIC KEY-', '-END PUBLIC KEY-', '-END RSA PUBLIC KEY-'],\n        body = lines\n            .map((line) => line.trim())\n            .filter((line) => line.length && ignore(line))\n            .join('');\n    if (body.length) {\n        return { body: s2U8A(b2s(bu2b(body))), type: <'private' | 'public'>type };\n    } else {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n}\n\n/* Issue2: not universal does not work with structured PEM keys\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array, type: 'private' | 'public'): any {\n    if (!buff || !type) throw new Error(ILLEGAL_ARGUMENT);\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    let data = new DataView(buff.buffer);\n\n    let res = {};\n    let offset = {\n        private: buff[1] & 0x80 ? buff[1] - 0x80 + 5 : 7,\n        public: buff[1] & 0x80 ? buff[1] - 0x80 + 2 : 2,\n    }[type.toLowerCase()];\n\n    function read() {\n        if ((offset + 1) < buff.byteLength) {\n            let s = data.getUint8(offset + 1);\n            if (s & 0x80) {\n                let n = s - 0x80;\n                s = data[[\n                    'getUint8', 'getInt16'\n                ][n - 1]](offset + 2, false);\n                offset += n;\n            }\n            offset += 2;\n            let b = (<Uint8Array>buff).slice(offset, offset + s);\n            offset += s;\n            return cleanZeros(b);\n        }\n        return new Uint8Array();\n    }\n\n    res['modulus'] = read();\n    res['bits'] = (res['modulus'].length - 1) * 8 + Math.ceil(\n        Math.log(res['modulus'][0] + 1) / Math.log(2)\n    );\n    if (!res['bits']) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    res['publicExponent'] = parseInt(AB2hex(read()), 16);\n    if (type === 'private') {\n        res['privateExponent'] = read();\n        res['prime1'] = read();\n        res['prime2'] = read();\n        res['exponent1'] = read();\n        res['exponent2'] = read();\n        res['coefficient'] = read();\n    }\n    return res;\n}\n\nexport function asn12jwk(asn1: any, type: string, extra?: any): any {\n    const pemTypes = ['public', 'private'];\n    if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\n\n    type = ((typeof type === 'string') && type.toLowerCase())\n        || pemTypes[!!asn1.privateExponent ? 1 : 0];\n    if ((type === 'private' && !asn1.privateExponent)\n        || pemTypes.indexOf(type) < 0) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    let v = asn1.publicExponent;\n    const expSize = Math.ceil(Math.log(v) / Math.log(256));\n    const exp = new Uint8Array(expSize).map(function (el) {\n        el = v % 256;\n        v = Math.floor(v / 256);\n        return el\n    }).reverse();\n\n    let jwk = Object.assign({ kty: 'RSA' }, extra, {\n        n: s2bu(AB2s(asn1.modulus)),\n        e: s2bu(AB2s(exp)),\n    });\n\n    if (type === 'private') {\n        Object.assign(jwk, {\n            d: s2bu(AB2s(asn1.privateExponent)),\n            p: s2bu(AB2s(asn1.prime1)),\n            q: s2bu(AB2s(asn1.prime2)),\n            dp: s2bu(AB2s(asn1.exponent1)),\n            dq: s2bu(AB2s(asn1.exponent2)),\n            qi: s2bu(AB2s(asn1.coefficient))\n        });\n    }\n    return jwk;\n}\n*/\n\n/* Issue3: Works, but ASN1 adds 14kb of code to this lib\nASN1.prototype.getAB = function() {\n    return cleanZeros(hex2AB(this.getHex()));\n};\n\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array): any {\n    if (!buff) throw new Error(ILLEGAL_ARGUMENT);\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    let asn1 = ASN1.decode(buff), res = {};\n\n    // add different PEM key structures and use sub.structure for ordering\n    if (asn1.sub.length === 3) {\n        asn1 = asn1.sub[2].sub[0];\n    }\n    if (asn1.sub.length === 9) {\n        // Parse the private key.\n        res['modulus'] = asn1.sub[1].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[2].getHex(), 16); // int\n        res['privateExponent'] = asn1.sub[3].getAB(); // ArrayBuffer\n        res['prime1'] = asn1.sub[4].getAB(); // ArrayBuffer\n        res['prime2'] = asn1.sub[5].getAB(); // ArrayBuffer\n        res['exponent1'] = asn1.sub[6].getAB(); // ArrayBuffer\n        res['exponent2'] = asn1.sub[7].getAB(); // ArrayBuffer\n        res['coefficient'] = asn1.sub[8].getAB(); // ArrayBuffer\n\n    } else if (asn1.sub.length === 2) {\n        // Parse the public key.\n        asn1 = asn1.sub[1].sub[0];\n\n        res['modulus'] = asn1.sub[0].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[1].getHex(), 16); // int\n    }\n    return res;\n}\n*/\nexport class Asn1Tag {\n    tagClass: number = 0;\n    tagConstructed: boolean = false;\n    tagNumber: number = 0;\n\n    constructor(stream) {\n        const buf = stream.read();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = (buf & 0x20) !== 0;\n        this.tagNumber = buf & 0x1f;\n    }\n}\n\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array): any {\n    if (!buff) throw new Error(ILLEGAL_ARGUMENT);\n\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    let asn1 = ASN1.decode(buff);\n    const res = {};\n\n    if (asn1.sub.length === 3) {\n        asn1 = asn1.sub[2].sub[0];\n    }\n    if (asn1.sub.length === 9) {\n        // Parse the private key.\n        res['modulus'] = asn1.sub[1].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[2].getHex(), 16); // int\n        res['privateExponent'] = asn1.sub[3].getAB(); // ArrayBuffer\n        res['prime1'] = asn1.sub[4].getAB(); // ArrayBuffer\n        res['prime2'] = asn1.sub[5].getAB(); // ArrayBuffer\n        res['exponent1'] = asn1.sub[6].getAB(); // ArrayBuffer\n        res['exponent2'] = asn1.sub[7].getAB(); // ArrayBuffer\n        res['coefficient'] = asn1.sub[8].getAB(); // ArrayBuffer\n    } else if (asn1.sub.length === 2) {\n        // Parse the public key.\n        asn1 = asn1.sub[1].sub[0];\n\n        res['modulus'] = asn1.sub[0].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[1].getHex(), 16); // int\n    }\n\n    res['bits'] = (res['modulus'].length - 1) * 8 + Math.ceil(Math.log(res['modulus'][0] + 1) / Math.log(2));\n\n    if (!res['bits']) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    return res;\n}\n\nexport function asn12jwk(asn1: any, type?: string, extra?: any): any {\n    const pemTypes = ['public', 'private'];\n    if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\n\n    type = (typeof type === 'string' && type.toLowerCase()) || pemTypes[!!asn1.privateExponent ? 1 : 0];\n\n    if (type === 'private' && !asn1.privateExponent) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    let v = asn1.publicExponent;\n    const expSize = Math.ceil(Math.log(v) / Math.log(256));\n    const exp = new Uint8Array(expSize)\n        .map(function (el) {\n            el = v % 256;\n            v = Math.floor(v / 256);\n            return el;\n        })\n        .reverse();\n\n    const jwk = Object.assign({ kty: 'RSA' }, extra, {\n        n: s2bu(AB2s(asn1.modulus)),\n        e: s2bu(AB2s(exp)),\n    });\n\n    if (type === 'private') {\n        Object.assign(jwk, {\n            d: s2bu(AB2s(asn1.privateExponent)),\n            p: s2bu(AB2s(asn1.prime1)),\n            q: s2bu(AB2s(asn1.prime2)),\n            dp: s2bu(AB2s(asn1.exponent1)),\n            dq: s2bu(AB2s(asn1.exponent2)),\n            qi: s2bu(AB2s(asn1.coefficient)),\n        });\n    }\n    return jwk;\n}\n\nexport function pem2jwk(secret: string, type?: 'public' | 'private', extra?): Promise<any> {\n    return tryPromise(() => {\n        const pem = s2pem(secret);\n        return asn12jwk(pem2asn1(pem.body), type, extra);\n    });\n}\n\n/* Issue1: does not work with all versions of PEM keys...\nexport function parsePem(secret: string, concType?: \"public\" | \"private\", extra?): Promise<PEM> {\n    return tryPromise(() => {\n            const pem = s2pem(secret);\n            if (!concType) concType = pem.type;\n            if (concType !== pem.type) throw new Error(ILLEGAL_ARGUMENT);\n            return pem\n        })\n}\n*/\n\nexport async function createSign(name: string): Promise<any> {\n    if (webCryptoSubtle) {\n        return {\n            update: function (thing: string): any {\n                return {\n                    sign: async function (secret: string): Promise<any> {\n                        return await pem2jwk(secret, 'private', {\n                            key_ops: ['sign'],\n                            alg: name.replace('SHA-', 'RS'),\n                        }).then(async (keyData) => {\n                            return await webCryptoSubtle\n                                .importKey('jwk', keyData, { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } }, true, [\n                                    'sign',\n                                ])\n                                .then(async (key) => {\n                                    return await webCryptoSubtle\n                                        .sign({ name: 'RSASSA-PKCS1-v1_5', hash: { name: name } }, key, s2U8A(thing))\n                                        .then(AB2s)\n                                        .then(s2b);\n                                });\n                        });\n\n                        /* Issue1: does not work with all versions of PEM keys...\n                        return await parsePem(secret, 'private').then(async pem => {\n                            return await webCryptoSubtle.importKey(\n                                'pkcs8',\n                                pem.body,\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                true,\n                                ['sign']\n                            ).then(async key => {\n                                return await webCryptoSubtle.sign(\n                                    'RSASSA-PKCS1-v1_5',\n                                    key,\n                                    s2U8A(thing)\n                                ).then(AB2s).then(s2b)\n                            })\n                        })\n                        */\n                    },\n                };\n            },\n        };\n    } else {\n        const crypto = await import('crypto');\n        if (!!crypto && crypto.createSign) {\n            return crypto.createSign(name.replace('SHA-', 'RSA-SHA'));\n        } else {\n            throw new Error(CRYPTO_NOT_FOUND);\n        }\n    }\n}\n\nexport function algRSsign(bits: number) {\n    return async function sign(thing: string, privateKey: string): Promise<string> {\n        try {\n            const res = await createSign('SHA-' + bits);\n            return b2bu(await res.update(thing).sign(privateKey, 'base64'));\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    };\n}\n\nexport async function createVerify(name: string): Promise<any> {\n    if (webCryptoSubtle) {\n        return {\n            update: function (thing: string): any {\n                return {\n                    verify: async function (secret: string, signature: string): Promise<boolean> {\n                        return await pem2jwk(secret, 'public', {\n                            key_ops: ['verify'],\n                            alg: name.replace('SHA-', 'RS'),\n                        }).then(async ({ kty, n, e }) => {\n                            return await webCryptoSubtle\n                                .importKey(\n                                    'jwk',\n                                    { kty, n, e },\n                                    { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                    false,\n                                    ['verify'],\n                                )\n                                .then(async (key) => {\n                                    return await webCryptoSubtle.verify(\n                                        'RSASSA-PKCS1-v1_5',\n                                        key,\n                                        s2U8A(bu2s(signature)),\n                                        s2U8A(thing),\n                                    );\n                                });\n                        });\n                        /* Issue1: does not work with all versions of PEM keys...\n                        return await parsePem(secret, 'public').then(async pem => {\n                            return await webCryptoSubtle.importKey(\n                                'spki',\n                                pem.body,\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                true,\n                                ['verify']\n                            ).then(async key => {\n                                return await webCryptoSubtle.verify(\n                                    'RSASSA-PKCS1-v1_5',\n                                    key,\n                                    s2U8A(bu2s(signature)),\n                                    s2U8A(thing)\n                                )\n                            })\n                        })*/\n                    },\n                };\n            },\n        };\n    } else {\n        const crypto = await import('crypto');\n        if (!!crypto && crypto.createVerify) {\n            return crypto.createVerify(name.replace('SHA-', 'RSA-SHA'));\n        } else {\n            throw new Error(CRYPTO_NOT_FOUND);\n        }\n    }\n}\n\nexport function algRSverify(bits: number) {\n    return async function verify(thing: string, signature: string, publicKey: string): Promise<boolean> {\n        try {\n            signature = bu2b(signature);\n            const rsaVerify = await createVerify('SHA-' + bits);\n            return await rsaVerify.update(thing).verify(publicKey, signature, 'base64');\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    };\n}\n\n/**\n * Universal algorithm verifier\n *\n */\nexport async function algVerify(algorithm: string, thing: string, signature: string, secret: string): Promise<boolean> {\n    if (typeof algorithm !== 'string' || algorithm.length < 4) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n    const algo = algorithm.toLowerCase();\n\n    if (algo === 'none') {\n        return signature === '';\n    }\n\n    const type = algo.slice(0, 2),\n        bits = parseInt(algo.slice(2));\n    if (isNaN(bits) || [256, 384, 512].indexOf(bits) < 0) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n\n    switch (type) {\n        case 'rs':\n            return await algRSverify(bits)(thing, signature, secret);\n        case 'hs':\n            return await algHSverify(bits)(thing, signature, secret);\n        default:\n            throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n}\n\n/**\n * Universal algorithm signer\n *\n */\nexport async function algSign(algorithm: string, thing: string, secret: string): Promise<string> {\n    if (typeof algorithm !== 'string' || algorithm.length < 4) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n    const algo = algorithm.toLowerCase();\n\n    if (algo === 'none') {\n        return '';\n    }\n\n    const type = algo.slice(0, 2),\n        bits = parseInt(algo.slice(2));\n    if (isNaN(bits) || [256, 384, 512].indexOf(bits) < 0) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n\n    switch (type) {\n        case 'rs':\n            return await algRSsign(bits)(thing, secret);\n        case 'hs':\n            return await algHSsign(bits)(thing, secret);\n        default:\n            throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n}\n\nexport async function jwtVerify(jwtStr: string, secret: string): Promise<boolean> {\n    const jwt = jwtSplit(jwtStr, 'jwtVerify'),\n        header = s2J(bu2s(jwt.header)),\n        thing = jwt.header + '.' + jwt.payload;\n    return tryPromise(() => algVerify(header.alg, thing, jwt.signature, secret));\n}\n\nexport const verifyJwt = jwtVerify;\nexport const verify = jwtVerify;\n\nexport function jwtSign(jwtStr: string, secret: string): Promise<string> {\n    const jwt = jwtSplit(jwtStr, 'jwtSign'),\n        header = s2J(bu2s(jwt.header)),\n        thing = jwt.header + '.' + jwt.payload;\n    return tryPromise(async () => await algSign(header.alg, thing, secret));\n}\n\nexport const signJwt = jwtSign;\nexport const sign = jwtSign;\n\nexport async function jwtResign(jwtStr: string, secret: string, alg?: string): Promise<string> {\n    const jwt = jwtDecode(jwtStr, 'jwtResign');\n    if (!!alg) jwt.header.alg = alg;\n    jwt.signature = await jwtSign(jwt.toString(), secret);\n    return jwt.toString();\n}\n\nexport const resignJwt = jwtResign;\nexport const resign = jwtResign;\n\n/**\n * Used for testing only\n *\n * @hidden\n */\nexport async function cryptoType(): Promise<string> {\n    const crypto = webCrypto || (await import('crypto'));\n    return crypto ? crypto['type'] || 'crypto-node' : 'undefined';\n}\n\nexport function notLatin1String(str): boolean {\n    return Array.prototype.some.apply(str, [(str) => str.charCodeAt(0) > 255]);\n}\n\nexport function textEncode(input: string) {\n    if (notLatin1String(input)) {\n        const encoder = getTextEncoder();\n        if (!!encoder) {\n            return encoder.encode(input);\n        }\n    }\n    return s2U8A(input);\n}\n\nexport function textDecode(input: string | Buffer) {\n    if (typeof input === 'string') {\n        try {\n            const decoder = getTextDecoder('utf8', { fatal: true });\n            if (!!decoder) {\n                return decoder.decode(s2U8A(input));\n            }\n        } catch {\n            /* empty */\n        }\n        return input;\n    }\n    try {\n        const decoder = getTextDecoder('utf8', { fatal: true });\n        if (!!decoder) {\n            return decoder.decode(input);\n        }\n    } catch {\n        /* empty */\n    }\n    return input.toString('binary');\n}\n\nexport function getTextEncoder(): TextEncoder | false {\n    if (typeof TextEncoder !== 'undefined') {\n        return new TextEncoder();\n    }\n    if (typeof require !== 'undefined') {\n        const encoder = require('util');\n        if (typeof encoder?.TextEncoder !== 'undefined') {\n            return new encoder.TextEncoder();\n        }\n    }\n    return false;\n}\n\nexport function getTextDecoder(...args): TextDecoder | false {\n    if (typeof TextDecoder !== 'undefined') {\n        return new TextDecoder(...args);\n    }\n    if (typeof require !== 'undefined') {\n        const decoder = require('util');\n        if (typeof decoder?.TextDecoder !== 'undefined') {\n            return new decoder.TextDecoder(...args);\n        }\n    }\n    return false;\n}\n\nexport default {\n    ILLEGAL_ARGUMENT,\n    UNSUPPORTED_ALGORITHM,\n    decode,\n    resign,\n    sign,\n    split,\n    verify,\n    decodeJwt,\n    resignJwt,\n    signJwt,\n    splitJwt,\n    verifyJwt,\n    AB2hex,\n    AB2s,\n    J2s,\n    algHSsign,\n    algHSverify,\n    algRSsign,\n    algRSverify,\n    algSign,\n    algVerify,\n    asn12jwk,\n    b2bu,\n    b2s,\n    bu2b,\n    bu2s,\n    cleanZeros,\n    createHmac,\n    createSign,\n    createVerify,\n    hex2AB,\n    isGzip,\n    jwtDecode,\n    jwtResign,\n    jwtSign,\n    jwtSplit,\n    jwtVerify,\n    num2hex,\n    pem2asn1,\n    pem2jwk,\n    s2AB,\n    s2J,\n    s2U8A,\n    s2b,\n    s2bu,\n    s2pem,\n    s2zbu,\n    tryPromise,\n    unzip,\n    zbu2s,\n    zip,\n    notLatin1String,\n    textEncode,\n    textDecode,\n    getTextEncoder,\n    getTextDecoder,\n};\n"],"names":[],"mappings":"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"}