{"version":3,"file":"jwt-js-decode.umd.js","sources":["../src/int10.ts","../src/util.ts","../src/asn1.ts","../src/jwt-js-decode.ts"],"sourcesContent":["var max = 10000000000000; // biggest 10^n integer that can still fit 2^53 when multiplied by 256\r\n\r\nexport default class Int10 {\r\n    buf: any[];\r\n\r\n    constructor(value?) {\r\n        this.buf = [+value || 0];\r\n    }\r\n\r\n    mulAdd(m, c) {\r\n        // assert(m <= 256)\r\n        var b = this.buf,\r\n            l = b.length,\r\n            i, t;\r\n        for (i = 0; i < l; ++i) {\r\n            t = b[i] * m + c;\r\n            if (t < max)\r\n                c = 0;\r\n            else {\r\n                c = 0 | (t / max);\r\n                t -= c * max;\r\n            }\r\n            b[i] = t;\r\n        }\r\n        if (c > 0)\r\n            b[i] = c;\r\n    };\r\n\r\n    sub(c) {\r\n        // assert(m <= 256)\r\n        var b = this.buf,\r\n            l = b.length,\r\n            i, t;\r\n        for (i = 0; i < l; ++i) {\r\n            t = b[i] - c;\r\n            if (t < 0) {\r\n                t += max;\r\n                c = 1;\r\n            } else\r\n                c = 0;\r\n            b[i] = t;\r\n        }\r\n        while (b[b.length - 1] === 0)\r\n            b.pop();\r\n    };\r\n\r\n    toString(base?: number) {\r\n        if ((base || 10) != 10)\r\n            throw 'only base 10 is supported';\r\n        var b = this.buf,\r\n            s = b[b.length - 1].toString();\r\n        for (var i = b.length - 2; i >= 0; --i)\r\n            s += (max + b[i]).toString().substring(1);\r\n        return s;\r\n    };\r\n\r\n    valueOf() {\r\n        var b = this.buf,\r\n            v = 0;\r\n        for (var i = b.length - 1; i >= 0; --i)\r\n            v = v * max + b[i];\r\n        return v;\r\n    };\r\n\r\n    simplify() {\r\n        var b = this.buf;\r\n        return (b.length == 1) ? b[0] : this;\r\n    };\r\n}\r\n\r\nexport { Int10 };\r\n","export const UNSUPPORTED_ALGORITHM = 'Unsupported algorithm name specified! Supported algorithms: \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\" and \"none\".';\r\nexport const ILLEGAL_ARGUMENT = 'Illegal argument specified!';\r\nexport const CRYPTO_NOT_FOUND = 'Could not find \\'crypto\\'.';\r\nexport const PAKO_NOT_FOUND = 'Could not find \\'pako\\'.';\r\n\r\nexport function generateErrorMessage(value, callee, argumentName = 'argument', defaultType = 'string') {\r\n    let message = `Invalid argument passed to ${callee}.`;\r\n    if (typeof value !== defaultType) {\r\n        message += ` Expected type '${defaultType}', received '${typeof value}'.`\r\n    } else if (!value) {\r\n        message += ` Provided ${argumentName} is empty.`\r\n    } else if (argumentName !== 'argument') {\r\n        message += ` Provided ${argumentName} is invalid.`\r\n    }\r\n    return message;\r\n}\r\n\r\nexport function num2hex(memo: string, i: number): string {\r\n    return memo + ('0' + i.toString(16)).slice(-2);\r\n}\r\n\r\n// clean leading zeros\r\nexport function cleanZeros(b) {\r\n    return b[0] === 0 ? cleanZeros(b.slice(1)) : b;\r\n}\r\n\r\nexport function hex2AB(hex: string): ArrayBuffer | Uint8Array {\r\n    if (!hex) throw new Error(ILLEGAL_ARGUMENT);\r\n    const match = hex.match(/[0-9A-F]{2}/ig);\r\n    if (!match) throw new Error(ILLEGAL_ARGUMENT);\r\n    return new Uint8Array(match.map(i => parseInt(i, 16)))\r\n}\r\n\r\nexport function AB2hex(buff: ArrayBuffer | Uint8Array): string {\r\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\r\n    return (buff as Uint8Array).reduce(num2hex, '');\r\n}\r\n","import { Int10 } from './int10';\r\nimport { cleanZeros, hex2AB } from \"./util\";\r\n\r\nconst ellipsis = \"\\u2026\",\r\n    reTimeS = /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/,\r\n    reTimeL = /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\r\n\r\nfunction stringCut(str, len) {\r\n    if (str.length > len)\r\n        str = str.substring(0, len) + ellipsis;\r\n    return str;\r\n}\r\n\r\nexport class Stream {\r\n    enc: any;\r\n    pos: any;\r\n\r\n    constructor(enc, pos = 0) {\r\n        if (enc instanceof Stream) {\r\n            this.enc = enc.enc;\r\n            this.pos = enc.pos;\r\n        } else {\r\n            this.enc = enc;\r\n            this.pos = pos;\r\n        }\r\n    }\r\n\r\n    get(pos) {\r\n        if (pos === undefined)\r\n            pos = this.pos++;\r\n        if (pos >= this.enc.length)\r\n            throw 'Requesting byte offset ' + pos + ' on a stream of length ' + this.enc.length;\r\n        return (typeof this.enc == \"string\") ? this.enc.charCodeAt(pos) : this.enc[pos];\r\n    };\r\n\r\n    hexDigits = \"0123456789ABCDEF\";\r\n\r\n    hexByte(b) {\r\n        return this.hexDigits.charAt((b >> 4) & 0xF) + this.hexDigits.charAt(b & 0xF);\r\n    };\r\n\r\n    hexDump(start, end, raw) {\r\n        var s = \"\";\r\n        for (var i = start; i < end; ++i) {\r\n            s += this.hexByte(this.get(i));\r\n            if (raw !== true)\r\n                switch (i & 0xF) {\r\n                    case 0x7:\r\n                        s += \"  \";\r\n                        break;\r\n                    case 0xF:\r\n                        s += \"\\n\";\r\n                        break;\r\n                    default:\r\n                        s += \" \";\r\n                }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    isASCII(start, end) {\r\n        for (var i = start; i < end; ++i) {\r\n            var c = this.get(i);\r\n            if (c < 32 || c > 176)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    parseStringISO(start, end) {\r\n        var s = \"\";\r\n        for (var i = start; i < end; ++i)\r\n            s += String.fromCharCode(this.get(i));\r\n        return s;\r\n    };\r\n\r\n    parseStringUTF(start, end) {\r\n        var s = \"\";\r\n        for (var i = start; i < end;) {\r\n            var c = this.get(i++);\r\n            if (c < 128)\r\n                s += String.fromCharCode(c);\r\n            else if ((c > 191) && (c < 224))\r\n                s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));\r\n            else\r\n                s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));\r\n        }\r\n        return s;\r\n    };\r\n\r\n    parseStringBMP(start, end) {\r\n        var str = \"\", hi, lo;\r\n        for (var i = start; i < end;) {\r\n            hi = this.get(i++);\r\n            lo = this.get(i++);\r\n            str += String.fromCharCode((hi << 8) | lo);\r\n        }\r\n        return str;\r\n    };\r\n\r\n    parseTime(start, end, shortYear) {\r\n        var s = this.parseStringISO(start, end),\r\n            m = (shortYear ? reTimeS : reTimeL).exec(s);\r\n        if (!m)\r\n            return \"Unrecognized time: \" + s;\r\n        if (shortYear) {\r\n            var t = +m[1], y = (t < 70) ? 2000 : 1900;\r\n            m[1] = y + \"\";\r\n        }\r\n        s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\r\n        if (m[5]) {\r\n            s += \":\" + m[5];\r\n            if (m[6]) {\r\n                s += \":\" + m[6];\r\n                if (m[7])\r\n                    s += \".\" + m[7];\r\n            }\r\n        }\r\n        if (m[8]) {\r\n            s += \" UTC\";\r\n            if (m[8] != 'Z') {\r\n                s += m[8];\r\n                if (m[9])\r\n                    s += \":\" + m[9];\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    parseInteger(start, end) {\r\n        var v = this.get(start),\r\n            neg = (v > 127),\r\n            pad = neg ? 255 : 0,\r\n            len,\r\n            s = '';\r\n        while (v == pad && ++start < end)\r\n            v = this.get(start);\r\n        len = end - start;\r\n        if (len === 0)\r\n            return neg ? -1 : 0;\r\n        if (len > 4) {\r\n            let t = +v;\r\n            len <<= 3;\r\n            while (((t ^ pad) & 0x80) === 0) {\r\n                t <<= 1;\r\n                --len;\r\n            }\r\n            s = \"(\" + len + \" bit)\\n\";\r\n        }\r\n        if (neg) v = v - 256;\r\n        const n = new Int10(v);\r\n        for (let i = start + 1; i < end; ++i)\r\n            n.mulAdd(256, this.get(i));\r\n        return s + n.toString();\r\n    };\r\n\r\n    parseBitString(start, end, maxLength) {\r\n        var unusedBit = this.get(start),\r\n            lenBit = ((end - start - 1) << 3) - unusedBit,\r\n            intro = \"(\" + lenBit + \" bit)\\n\",\r\n            s = \"\";\r\n        for (var i = start + 1; i < end; ++i) {\r\n            var b = this.get(i),\r\n                skip = (i == end - 1) ? unusedBit : 0;\r\n            for (var j = 7; j >= skip; --j)\r\n                s += (b >> j) & 1 ? \"1\" : \"0\";\r\n            if (s.length > maxLength)\r\n                return intro + stringCut(s, maxLength);\r\n        }\r\n        return intro + s;\r\n    };\r\n\r\n    parseOctetString(start, end, maxLength) {\r\n        if (this.isASCII(start, end))\r\n            return stringCut(this.parseStringISO(start, end), maxLength);\r\n        var len = end - start,\r\n            s = \"(\" + len + \" byte)\\n\";\r\n        maxLength /= 2;\r\n        if (len > maxLength)\r\n            end = start + maxLength;\r\n        for (var i = start; i < end; ++i)\r\n            s += this.hexByte(this.get(i));\r\n        if (len > maxLength)\r\n            s += ellipsis;\r\n        return s;\r\n    };\r\n\r\n    parseOID(start, end, maxLength) {\r\n        var s = '',\r\n            n = new Int10(),\r\n            bits = 0;\r\n        for (var i = start; i < end; ++i) {\r\n            var v = this.get(i);\r\n            n.mulAdd(128, v & 0x7F);\r\n            bits += 7;\r\n            if (!(v & 0x80)) {\r\n                if (s === '') {\r\n                    n = n.simplify();\r\n                    if (n instanceof Int10) {\r\n                        n.sub(80);\r\n                        s = \"2.\" + n.toString();\r\n                    } else {\r\n                        var m = n < 80 ? n < 40 ? 0 : 1 : 2;\r\n                        s = m + \".\" + (n - m * 40);\r\n                    }\r\n                } else\r\n                    s += \".\" + n.toString();\r\n                if (s.length > maxLength)\r\n                    return stringCut(s, maxLength);\r\n                n = new Int10();\r\n                bits = 0;\r\n            }\r\n        }\r\n        if (bits > 0)\r\n            s += \".incomplete\";\r\n        return s;\r\n    };\r\n}\r\n\r\nexport class ASN1 {\r\n    stream: any;\r\n    header: any;\r\n    length: any;\r\n    tag: any;\r\n    sub: any;\r\n\r\n    constructor(stream, header, length, tag, sub) {\r\n        if (!(tag instanceof ASN1Tag)) throw 'Invalid tag value.';\r\n        this.stream = stream;\r\n        this.header = header;\r\n        this.length = length;\r\n        this.tag = tag;\r\n        this.sub = sub;\r\n    }\r\n\r\n    typeName() {\r\n        switch (this.tag.tagClass) {\r\n            case 0: \r\n                switch (this.tag.tagNumber) {\r\n                    case 0x00:\r\n                        return \"EOC\";\r\n                    case 0x01:\r\n                        return \"BOOLEAN\";\r\n                    case 0x02:\r\n                        return \"INTEGER\";\r\n                    case 0x03:\r\n                        return \"BIT_STRING\";\r\n                    case 0x04:\r\n                        return \"OCTET_STRING\";\r\n                    case 0x05:\r\n                        return \"NULL\";\r\n                    case 0x06:\r\n                        return \"OBJECT_IDENTIFIER\";\r\n                    case 0x07:\r\n                        return \"ObjectDescriptor\";\r\n                    case 0x08:\r\n                        return \"EXTERNAL\";\r\n                    case 0x09:\r\n                        return \"REAL\";\r\n                    case 0x0A:\r\n                        return \"ENUMERATED\";\r\n                    case 0x0B:\r\n                        return \"EMBEDDED_PDV\";\r\n                    case 0x0C:\r\n                        return \"UTF8String\";\r\n                    case 0x10:\r\n                        return \"SEQUENCE\";\r\n                    case 0x11:\r\n                        return \"SET\";\r\n                    case 0x12:\r\n                        return \"NumericString\";\r\n                    case 0x13:\r\n                        return \"PrintableString\"; \r\n                    case 0x14:\r\n                        return \"TeletexString\"; \r\n                    case 0x15:\r\n                        return \"VideotexString\";\r\n                    case 0x16:\r\n                        return \"IA5String\"; \r\n                    case 0x17:\r\n                        return \"UTCTime\";\r\n                    case 0x18:\r\n                        return \"GeneralizedTime\";\r\n                    case 0x19:\r\n                        return \"GraphicString\";\r\n                    case 0x1A:\r\n                        return \"VisibleString\"; \r\n                    case 0x1B:\r\n                        return \"GeneralString\";\r\n                    case 0x1C:\r\n                        return \"UniversalString\";\r\n                    case 0x1E:\r\n                        return \"BMPString\";\r\n                }\r\n                return \"Universal_\" + this.tag.tagNumber.toString();\r\n            case 1:\r\n                return \"Application_\" + this.tag.tagNumber.toString();\r\n            case 2:\r\n                return \"[\" + this.tag.tagNumber.toString() + \"]\"; \r\n            case 3:\r\n                return \"Private_\" + this.tag.tagNumber.toString();\r\n        }\r\n    };\r\n\r\n    content(maxLength?) { \r\n        if (this.tag === undefined)\r\n            return null;\r\n        if (maxLength === undefined)\r\n            maxLength = Infinity;\r\n        var content = this.posContent(),\r\n            len = Math.abs(this.length);\r\n        if (!this.tag.isUniversal()) {\r\n            if (this.sub !== null)\r\n                return \"(\" + this.sub.length + \" elem)\";\r\n            return this.stream.parseOctetString(content, content + len, maxLength);\r\n        }\r\n        switch (this.tag.tagNumber) {\r\n            case 0x01: \r\n                return (this.stream.get(content) === 0) ? \"false\" : \"true\";\r\n            case 0x02: \r\n                return this.stream.parseInteger(content, content + len);\r\n            case 0x03: \r\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\r\n                    this.stream.parseBitString(content, content + len, maxLength);\r\n            case 0x04: \r\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\r\n                    this.stream.parseOctetString(content, content + len, maxLength);\r\n            \r\n            case 0x06: \r\n                return this.stream.parseOID(content, content + len, maxLength);\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            case 0x10: \r\n            case 0x11: \r\n                if (this.sub !== null)\r\n                    return \"(\" + this.sub.length + \" elem)\";\r\n                else\r\n                    return \"(no elem)\";\r\n            case 0x0C: \r\n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\r\n            case 0x12: \r\n            case 0x13: \r\n            case 0x14: \r\n            case 0x15: \r\n            case 0x16: \r\n            \r\n            case 0x1A: \r\n                \r\n                \r\n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\r\n            case 0x1E: \r\n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\r\n            case 0x17: \r\n            case 0x18: \r\n                return this.stream.parseTime(content, content + len, (this.tag.tagNumber == 0x17));\r\n        }\r\n        return null;\r\n    };\r\n\r\n    toString() {\r\n        return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + ((this.sub === null) ? 'null' : this.sub.length) + \"]\";\r\n    };\r\n\r\n    posStart() {\r\n        return this.stream.pos;\r\n    };\r\n\r\n    posContent() {\r\n        return this.stream.pos + this.header;\r\n    };\r\n\r\n    posEnd() {\r\n        return this.stream.pos + this.header + Math.abs(this.length);\r\n    };\r\n\r\n    toHexString(root?) {\r\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\r\n    };\r\n\r\n    getHex() {\r\n        return this.stream.hexDump(this.posContent(), this.posEnd(), true);\r\n    };\r\n\r\n    getAB(clean = true) {\r\n        return clean ? cleanZeros(hex2AB(this.getHex())) : hex2AB(this.getHex());\r\n    };\r\n\r\n    static decodeLength(stream) {\r\n        let buf = stream.get();\r\n        const len = buf & 0x7F;\r\n        if (len == buf)\r\n            return len;\r\n        if (len > 6)\r\n            throw \"Length over 48 bits not supported at position \" + (stream.pos - 1);\r\n        if (len === 0)\r\n            return null; \r\n        buf = 0;\r\n        for (var i = 0; i < len; ++i)\r\n            buf = (buf * 256) + stream.get();\r\n        return buf;\r\n    };\r\n\r\n    static decode(stream) {\r\n        if (!(stream instanceof Stream))\r\n            stream = new Stream(stream, 0);\r\n        const streamStart = new Stream(stream);\r\n        const tag = new ASN1Tag(stream);\r\n        let len = ASN1.decodeLength(stream), sub: any = null;\r\n        const start = stream.pos;\r\n        const header = start - streamStart.pos;\r\n        const getSub = function () {\r\n            sub = [];\r\n            if (len !== null) {\r\n                var end = start + len;\r\n                while (stream.pos < end)\r\n                    sub[sub.length] = ASN1.decode(stream);\r\n                if (stream.pos != end)\r\n                    throw \"Content size is not correct for container starting at offset \" + start;\r\n            } else {\r\n                try {\r\n                    for (; ;) {\r\n                        const s = ASN1.decode(stream);\r\n                        if (s.tag.isEOC())\r\n                            break;\r\n                        sub[sub.length] = s;\r\n                    }\r\n                    len = start - stream.pos; \r\n                } catch (e) {\r\n                    throw \"Exception while decoding undefined length content: \" + e;\r\n                }\r\n            }\r\n        };\r\n        if (tag.tagConstructed) {\r\n            getSub();\r\n        } else if (tag.isUniversal() && ((tag.tagNumber == 0x03) || (tag.tagNumber == 0x04))) {\r\n            try {\r\n                if (tag.tagNumber == 0x03)\r\n                    if (stream.get() != 0)\r\n                        throw \"BIT STRINGs with unused bits cannot encapsulate.\";\r\n                getSub();\r\n                for (var i = 0; i < sub.length; ++i)\r\n                    if (sub[i].tag.isEOC())\r\n                        throw 'EOC is not supposed to be actual content.';\r\n            } catch (e) {\r\n                \r\n                sub = null;\r\n            }\r\n        }\r\n        if (sub === null) {\r\n            if (len === null)\r\n                throw \"We can't skip over an invalid tag with undefined length at offset \" + start;\r\n            stream.pos = start + Math.abs(len);\r\n        }\r\n        return new ASN1(streamStart, header, len, tag, sub);\r\n    };\r\n}\r\n\r\nclass ASN1Tag {\r\n    tagClass: any;\r\n    tagConstructed: any;\r\n    tagNumber: any;\r\n\r\n    constructor(stream) {\r\n        var buf = stream.get();\r\n        this.tagClass = buf >> 6;\r\n        this.tagConstructed = ((buf & 0x20) !== 0);\r\n        this.tagNumber = buf & 0x1F;\r\n        if (this.tagNumber == 0x1F) { \r\n            var n = new Int10();\r\n            do {\r\n                buf = stream.get();\r\n                n.mulAdd(128, buf & 0x7F);\r\n            } while (buf & 0x80);\r\n            this.tagNumber = n.simplify();\r\n        }\r\n    }\r\n\r\n    isUniversal() {\r\n        return this.tagClass === 0x00;\r\n    };\r\n\r\n    isEOC() {\r\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\r\n    };\r\n}\r\n","import pako from \"pako\";\r\n/* Issue3: Works, but ASN1 adds 14kb of code to this lib\r\nimport ASN1 from \"asn1js\";\r\n*/\r\n// Simplified/improved version of\r\n// \"asn1js\": \"git+https://github.com/lapo-luchini/asn1js.git\",\r\nimport { ASN1 } from \"./asn1\";\r\nimport {\r\n    AB2hex,\r\n    cleanZeros,\r\n    CRYPTO_NOT_FOUND,\r\n    generateErrorMessage,\r\n    hex2AB,\r\n    ILLEGAL_ARGUMENT,\r\n    num2hex,\r\n    PAKO_NOT_FOUND,\r\n    UNSUPPORTED_ALGORITHM\r\n} from \"./util\";\r\n/*\r\n//crypto-browserify:\r\nimport { createHmac, createSign, createVerify } from \"crypto-browserify\";\r\n//or browserify hmac/sign\r\nimport { createHmac } from \"create-hmac\";\r\nimport { createSign, createVerify } from \"browserify-sign\";\r\n\r\n//node.js\r\nimport { createHmac, createSign, createVerify } from \"crypto\";\r\n*/\r\nexport const webCrypto = typeof window === \"object\" && (window.crypto || window['msCrypto']);\r\nexport const webCryptoSubtle = webCrypto && (webCrypto.subtle || webCrypto['webkitSubtle'] || webCrypto['Subtle']);\r\n\r\n/**\r\n * Pako 1.0.6 has 'from' property which is not included in current version of typeDef @types/pako@1.0.0\r\n *\r\n * @hidden\r\n */\r\ndeclare namespace Pako {\r\n    export interface DeflateOptions {\r\n        raw?: boolean;\r\n        from?: string;\r\n        to?: string;\r\n    }\r\n\r\n    export interface InflateOptions {\r\n        raw?: boolean;\r\n        from?: string;\r\n        to?: string;\r\n    }\r\n}\r\n\r\n/**\r\n * Class for creating a JwtSplit object with three parts of JWT Token as strings\r\n *\r\n * @class  JwtSplit\r\n */\r\nexport class JwtSplit {\r\n    /**\r\n     * Header (first) part of JWT Token\r\n     *\r\n     * @name  header\r\n     * @type {string}\r\n     */\r\n    header: string;\r\n\r\n    /**\r\n     * Payload (second) part of JWT Token\r\n     *\r\n     * @name  payload\r\n     * @type {string}\r\n     */\r\n    payload: string;\r\n\r\n    /**\r\n     * Signature (third) part of JWT Token\r\n     *\r\n     * @name  signature\r\n     * @type {string}\r\n     */\r\n    signature: string;\r\n\r\n    constructor(str: string, callee = 'JwtSplit') {\r\n        if (typeof str !== 'string') {\r\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\r\n        }\r\n\r\n        const jwtArr = str.split('.');\r\n        if (jwtArr.length !== 3) {\r\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\r\n        }\r\n\r\n        const [header, payload, signature] = jwtArr;\r\n        this.header = header;\r\n        this.payload = payload;\r\n        this.signature = signature;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.header + '.' + this.payload + '.' + this.signature\r\n    }\r\n}\r\n\r\n/** JwtPart interface basically object type definition used as a placeholder */\r\ninterface JwtPart {\r\n    [key: string]: any\r\n}\r\n\r\n/**\r\n * Class for creating a JwtDecode object with three parts of JWT Token, header and payload decoded and parsed, signature in initial form\r\n *\r\n * @class  JwtDecode\r\n */\r\nexport class JwtDecode {\r\n    /**\r\n     * Header (first) part of JWT Token\r\n     *\r\n     * @name  header\r\n     * @type {JwtPart}\r\n     */\r\n    public header: JwtPart = {};\r\n\r\n    /**\r\n     * Payload (second) part of JWT Token\r\n     *\r\n     * @name  payload\r\n     * @type {JwtPart}\r\n     */\r\n    public payload: JwtPart = {};\r\n\r\n    /**\r\n     * Signature (third) part of JWT Token\r\n     *\r\n     * @name  signature\r\n     * @type {string}\r\n     */\r\n    public signature: string = '';\r\n\r\n    constructor(str: string, callee = 'JwtDecode') {\r\n        if (typeof str !== 'string') {\r\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\r\n        }\r\n        const jwtObj: JwtSplit = jwtSplit(str, callee);\r\n        if (jwtObj) {\r\n            this.header = jwtObj.header ? s2J(bu2s(jwtObj.header)) : {};\r\n            this.payload = jwtObj.payload ? (isGzip(this.header) ? s2J(zbu2s(jwtObj.payload)) : s2J(bu2s(jwtObj.payload))) : {};\r\n            this.signature = jwtObj.signature || '';\r\n        }\r\n    }\r\n\r\n    public toString(): string {\r\n        return s2bu(J2s(this.header)) + '.' + (isGzip(this.header) ? s2zbu(J2s(this.payload)) : s2bu(J2s(this.payload))) + '.' + this.signature\r\n    }\r\n}\r\n\r\n/**\r\n * Try running function and replace it's response as Promise.resolve/reject\r\n *\r\n * @param {function} fn - fn to call in for response\r\n *\r\n * @returns {Promise<any>} resulting Promise\r\n */\r\nexport function tryPromise(fn) {\r\n    try {\r\n        return Promise.resolve(fn());\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts string to JSON object\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {object} resulting object\r\n */\r\nexport function s2J(str: string): any {\r\n    try {\r\n        return JSON.parse(str);\r\n    } catch (e) {\r\n        throw new Error(e.message);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts JSON object to string\r\n *\r\n * @param {object} obj - JSON object to convert\r\n *\r\n * @returns {string} resulting string\r\n */\r\nexport function J2s(obj: any): string {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    } catch (e) {\r\n        throw new Error(e.message);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts string to base64 string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} decoded data string\r\n */\r\nexport function b2s(str: string): string {\r\n    try {\r\n        if (typeof window === 'object' && typeof window.atob === 'function') {\r\n            return window.atob(str);\r\n        } else if (typeof Buffer !== 'undefined') {\r\n            return Buffer.from(str, 'base64').toString('binary')\r\n        } else throw new Error(ILLEGAL_ARGUMENT);\r\n    } catch (e) {\r\n        throw new Error(e);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts base64 string to base64url string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} base64url string\r\n */\r\nexport function b2bu(str: string): string {\r\n    if ((typeof str !== 'string') || (str.length % 4 !== 0)) {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n\r\n    return str\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_')\r\n        .replace(/=/g, '');\r\n}\r\n\r\n/**\r\n *\r\n * Converts base64url string to base64 string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} base64 string\r\n */\r\nexport function bu2b(str: string): string {\r\n    if ((typeof str !== 'string') || (str.length % 4 === 1)) {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n\r\n    for (; (str.length % 4 !== 0);) {\r\n        str += '=';\r\n    }\r\n    return str\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n}\r\n\r\n/**\r\n * Converts base64url string to string\r\n *\r\n * @param {string} str - base64url string to convert\r\n *\r\n * @returns {string} decoded data string\r\n */\r\nexport function bu2s(str: string): string {\r\n    return b2s(bu2b(str));\r\n}\r\n\r\n/**\r\n * Check if header has zip property (and it is equal to 'GZIP', ignorecase)\r\n *\r\n * @param {string} header - object to check\r\n *\r\n * @returns {boolean} does it have gzip in zip property\r\n */\r\nexport function isGzip(header: JwtPart): boolean {\r\n    return typeof header === 'object' && typeof header.zip === 'string' && header.zip.toUpperCase() === 'GZIP'\r\n}\r\n\r\n/**\r\n * Decode jwtToken header and payload\r\n *\r\n * @param {string} str - data string to decode\r\n *\r\n * @returns {JwtDecode} object with decoded header and body, and signature untouched\r\n */\r\nexport function jwtDecode(str: string, callee = 'jwtDecode'): JwtDecode {\r\n    return new JwtDecode(str, callee);\r\n}\r\n\r\n/**\r\n * Split jwtToken into object {header, payload, signature}\r\n *\r\n * @param {string} str - data string to split\r\n *\r\n * @returns {JwtSplit} jwt split object of three strings\r\n */\r\nexport function jwtSplit(str: string, callee = 'jwtSplit'): JwtSplit {\r\n    return new JwtSplit(str, callee);\r\n}\r\n\r\nexport const splitJwt = jwtSplit;\r\n\r\n/**\r\n * Converts base64 string to string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} base64 string\r\n */\r\nexport function s2b(str: string): string {\r\n    try {\r\n        if (typeof window === 'object' && typeof window.atob === 'function') {\r\n            return window.btoa(str);\r\n        } else if (typeof Buffer !== 'undefined') {\r\n            return Buffer.from(str).toString('base64');\r\n        } else throw new Error(ILLEGAL_ARGUMENT);\r\n    } catch (e) {\r\n        throw new Error(e);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts string to base64url string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} base64url string\r\n */\r\nexport function s2bu(str: string): string {\r\n    return b2bu(s2b(str));\r\n}\r\n\r\n/**\r\n * Gzip and encode data string to base64url string\r\n *\r\n * @param {string} str - data string to encode\r\n *\r\n * @returns {string} base64url string\r\n */\r\nexport function s2zbu(str: string): string {\r\n    return s2bu(zip(str));\r\n}\r\n\r\n/**\r\n * Converts from gzip data string to string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} decoded data string\r\n */\r\nexport function unzip(str: string): string {\r\n    if (typeof str !== 'string') {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n\r\n    if (!!pako && pako.inflate) {\r\n        return pako.inflate(str, {\r\n            raw: false,\r\n            from: 'string',\r\n            to: 'string'\r\n        } as Pako.InflateOptions & { to: 'string' });\r\n    } else {\r\n        throw new Error(PAKO_NOT_FOUND);\r\n    }\r\n}\r\n\r\n/**\r\n * Decode from base64url and unzip data string\r\n *\r\n * @param {string} str - data string to decode\r\n *\r\n * @returns {string} decoded data string\r\n */\r\nexport function zbu2s(str: string): string {\r\n    return unzip(bu2s(str));\r\n}\r\n\r\n/**\r\n * Converts string to gzip data string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} gzip data string\r\n */\r\nexport function zip(str: string): string {\r\n    if (typeof str !== 'string') {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n\r\n    if (!!pako && pako.deflate) {\r\n        return pako.deflate(str, {\r\n            raw: false,\r\n            from: 'string',\r\n            to: 'string'\r\n        } as Pako.DeflateOptions & { to: 'string' });\r\n    } else {\r\n        throw new Error(PAKO_NOT_FOUND);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts string to ArrayBuffer\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {ArrayBuffer | Uint8Array} charCode ArrayBuffer\r\n */\r\nexport function s2AB(str: string): ArrayBuffer | Uint8Array {\r\n    const buff = new Uint8Array(str.length);\r\n    for (let i = 0; i < str.length; i++) buff[i] = str.charCodeAt(i);\r\n    return buff;\r\n}\r\n\r\n/**\r\n * Converts ArrayBuffer to string\r\n *\r\n * @param {ArrayBuffer | Uint8Array} buff - charCode ArrayBuffer to convert\r\n *\r\n * @returns {string} data string\r\n */\r\nexport function AB2s(buff: ArrayBuffer | Uint8Array): string {\r\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\r\n    return String.fromCharCode.apply(String, Array.from(buff as Uint8Array));\r\n}\r\n\r\n/**\r\n * Async function inspired by createHmac in crypto (used WebCrypto Api supported by most browsers)\r\n *\r\n */\r\n\r\nexport async function createHmac(name: string, secret: string): Promise<any> {\r\n    if (webCryptoSubtle) {\r\n        const keyData = s2AB(secret);\r\n        return await webCryptoSubtle.importKey(\r\n            'raw',\r\n            keyData,\r\n            { name: 'HMAC', hash: { name: name } },\r\n            true,\r\n            ['sign']\r\n        ).then(key => {\r\n            return {\r\n                update: async function (thing): Promise<ArrayBuffer> {\r\n                    return await webCryptoSubtle.sign(\r\n                        'HMAC',\r\n                        key,\r\n                        s2AB(thing)\r\n                    )\r\n                }\r\n            }\r\n        })\r\n    } else {\r\n        const crypto = await import(\"crypto\");\r\n        return !!crypto && crypto.createHmac ? Promise.resolve(crypto.createHmac(name.replace('SHA-', 'sha'), secret)) : Promise.reject(webCrypto);\r\n    }\r\n}\r\n\r\n/**\r\n * Algorithm HMAC sign generator\r\n *\r\n */\r\nexport function algHSsign(bits: number) {\r\n    /**\r\n     * Algorithm HMAC signer\r\n     *\r\n     */\r\n    return async function sign(thing: string, secret: string): Promise<string> {\r\n        const hmac = await createHmac('SHA-' + bits, secret);\r\n        return Promise.resolve(webCryptoSubtle ? s2bu(AB2s(hmac && await hmac.update(thing))) : b2bu(hmac && hmac.update(thing).digest('base64')));\r\n    }\r\n}\r\n\r\n/**\r\n * Algorithm HMAC verify generator\r\n *\r\n */\r\nexport function algHSverify(bits: number) {\r\n    /**\r\n     * Algorithm HMAC verifier\r\n     *\r\n     */\r\n    return async function verify(thing: string, signature: string, secret: string): Promise<boolean> {\r\n        return await algHSsign(bits)(thing, secret) === signature;\r\n    }\r\n}\r\n\r\nexport interface PEM {\r\n    body: ArrayBuffer | Uint8Array,\r\n    type: 'private' | 'public'\r\n}\r\n\r\nexport function s2pem(secret: string): PEM {\r\n    if (typeof secret !== 'string') {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n    let type = 'public';\r\n\r\n    function ignore(line: string): boolean {\r\n        if (ignoreLinesPriv.some(ign => line.toUpperCase().indexOf(ign) > -1)) {\r\n            type = 'private';\r\n            return false;\r\n        }\r\n        return !ignoreLinesPub.some(ign => line.toUpperCase().indexOf(ign) > -1);\r\n    }\r\n\r\n    const lines = secret.split('\\n'),\r\n        ignoreLinesPriv = [\r\n            '-BEGIN RSA PRIVATE KEY-',\r\n            '-END RSA PRIVATE KEY-'],\r\n        ignoreLinesPub = [\r\n            '-BEGIN RSA PUBLIC KEY-',\r\n            '-BEGIN PUBLIC KEY-',\r\n            '-END PUBLIC KEY-',\r\n            '-END RSA PUBLIC KEY-'\r\n        ], body = lines.map(line => line.trim()).filter(line =>\r\n        line.length && ignore(line)).join('');\r\n    if (body.length) {\r\n        return { body: s2AB(b2s(bu2b(body))), type: <'private' | 'public'>type };\r\n    } else {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n}\r\n\r\n/* Issue2: not universal does not work with structured PEM keys\r\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array, type: 'private' | 'public'): any {\r\n    if (!buff || !type) throw new Error(ILLEGAL_ARGUMENT);\r\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\r\n    let data = new DataView(buff.buffer);\r\n\r\n    let res = {};\r\n    let offset = {\r\n        private: buff[1] & 0x80 ? buff[1] - 0x80 + 5 : 7,\r\n        public: buff[1] & 0x80 ? buff[1] - 0x80 + 2 : 2,\r\n    }[type.toLowerCase()];\r\n\r\n    function read() {\r\n        if ((offset + 1) < buff.byteLength) {\r\n            let s = data.getUint8(offset + 1);\r\n            if (s & 0x80) {\r\n                let n = s - 0x80;\r\n                s = data[[\r\n                    'getUint8', 'getInt16'\r\n                ][n - 1]](offset + 2, false);\r\n                offset += n;\r\n            }\r\n            offset += 2;\r\n            let b = (<Uint8Array>buff).slice(offset, offset + s);\r\n            offset += s;\r\n            return cleanZeros(b);\r\n        }\r\n        return new Uint8Array();\r\n    }\r\n\r\n    res['modulus'] = read();\r\n    res['bits'] = (res['modulus'].length - 1) * 8 + Math.ceil(\r\n        Math.log(res['modulus'][0] + 1) / Math.log(2)\r\n    );\r\n    if (!res['bits']) {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n    res['publicExponent'] = parseInt(AB2hex(read()), 16);\r\n    if (type === 'private') {\r\n        res['privateExponent'] = read();\r\n        res['prime1'] = read();\r\n        res['prime2'] = read();\r\n        res['exponent1'] = read();\r\n        res['exponent2'] = read();\r\n        res['coefficient'] = read();\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function asn12jwk(asn1: any, type: string, extra?: any): any {\r\n    const pemTypes = ['public', 'private'];\r\n    if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\r\n\r\n    type = ((typeof type === 'string') && type.toLowerCase())\r\n        || pemTypes[!!asn1.privateExponent ? 1 : 0];\r\n    if ((type === 'private' && !asn1.privateExponent)\r\n        || pemTypes.indexOf(type) < 0) {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n    let v = asn1.publicExponent;\r\n    const expSize = Math.ceil(Math.log(v) / Math.log(256));\r\n    const exp = new Uint8Array(expSize).map(function (el) {\r\n        el = v % 256;\r\n        v = Math.floor(v / 256);\r\n        return el\r\n    }).reverse();\r\n\r\n    let jwk = Object.assign({ kty: 'RSA' }, extra, {\r\n        n: s2bu(AB2s(asn1.modulus)),\r\n        e: s2bu(AB2s(exp)),\r\n    });\r\n\r\n    if (type === 'private') {\r\n        Object.assign(jwk, {\r\n            d: s2bu(AB2s(asn1.privateExponent)),\r\n            p: s2bu(AB2s(asn1.prime1)),\r\n            q: s2bu(AB2s(asn1.prime2)),\r\n            dp: s2bu(AB2s(asn1.exponent1)),\r\n            dq: s2bu(AB2s(asn1.exponent2)),\r\n            qi: s2bu(AB2s(asn1.coefficient))\r\n        });\r\n    }\r\n    return jwk;\r\n}\r\n*/\r\n\r\n/* Issue3: Works, but ASN1 adds 14kb of code to this lib\r\nASN1.prototype.getAB = function() {\r\n    return cleanZeros(hex2AB(this.getHex()));\r\n};\r\n\r\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array): any {\r\n    if (!buff) throw new Error(ILLEGAL_ARGUMENT);\r\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\r\n    let asn1 = ASN1.decode(buff), res = {};\r\n\r\n    // add different PEM key structures and use sub.structure for ordering\r\n    if (asn1.sub.length === 3) {\r\n        asn1 = asn1.sub[2].sub[0];\r\n    }\r\n    if (asn1.sub.length === 9) {\r\n        // Parse the private key.\r\n        res['modulus'] = asn1.sub[1].getAB(); // ArrayBuffer\r\n        res['publicExponent'] = parseInt(asn1.sub[2].getHex(), 16); // int\r\n        res['privateExponent'] = asn1.sub[3].getAB(); // ArrayBuffer\r\n        res['prime1'] = asn1.sub[4].getAB(); // ArrayBuffer\r\n        res['prime2'] = asn1.sub[5].getAB(); // ArrayBuffer\r\n        res['exponent1'] = asn1.sub[6].getAB(); // ArrayBuffer\r\n        res['exponent2'] = asn1.sub[7].getAB(); // ArrayBuffer\r\n        res['coefficient'] = asn1.sub[8].getAB(); // ArrayBuffer\r\n\r\n    } else if (asn1.sub.length === 2) {\r\n        // Parse the public key.\r\n        asn1 = asn1.sub[1].sub[0];\r\n\r\n        res['modulus'] = asn1.sub[0].getAB(); // ArrayBuffer\r\n        res['publicExponent'] = parseInt(asn1.sub[1].getHex(), 16); // int\r\n    }\r\n    return res;\r\n}\r\n*/\r\nexport class Asn1Tag {\r\n    tagClass: number = 0;\r\n    tagConstructed: boolean = false;\r\n    tagNumber: number = 0;\r\n\r\n    constructor(stream) {\r\n        const buf = stream.read();\r\n        this.tagClass = buf >> 6;\r\n        this.tagConstructed = ((buf & 0x20) !== 0);\r\n        this.tagNumber = buf & 0x1F;\r\n    }\r\n}\r\n\r\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array): any {\r\n    if (!buff) throw new Error(ILLEGAL_ARGUMENT);\r\n\r\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\r\n    let asn1 = ASN1.decode(buff), res = {};\r\n\r\n    if (asn1.sub.length === 3) {\r\n        asn1 = asn1.sub[2].sub[0];\r\n    }\r\n    if (asn1.sub.length === 9) {\r\n        // Parse the private key.\r\n        res['modulus'] = asn1.sub[1].getAB(); // ArrayBuffer\r\n        res['publicExponent'] = parseInt(asn1.sub[2].getHex(), 16); // int\r\n        res['privateExponent'] = asn1.sub[3].getAB(); // ArrayBuffer\r\n        res['prime1'] = asn1.sub[4].getAB(); // ArrayBuffer\r\n        res['prime2'] = asn1.sub[5].getAB(); // ArrayBuffer\r\n        res['exponent1'] = asn1.sub[6].getAB(); // ArrayBuffer\r\n        res['exponent2'] = asn1.sub[7].getAB(); // ArrayBuffer\r\n        res['coefficient'] = asn1.sub[8].getAB(); // ArrayBuffer\r\n    } else if (asn1.sub.length === 2) {\r\n        // Parse the public key.\r\n        asn1 = asn1.sub[1].sub[0];\r\n\r\n        res['modulus'] = asn1.sub[0].getAB(); // ArrayBuffer\r\n        res['publicExponent'] = parseInt(asn1.sub[1].getHex(), 16); // int\r\n    }\r\n\r\n    res['bits'] = (res['modulus'].length - 1) * 8 + Math.ceil(\r\n        Math.log(res['modulus'][0] + 1) / Math.log(2)\r\n    );\r\n\r\n    if (!res['bits']) {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nexport function asn12jwk(asn1: any, type?: string, extra?: any): any {\r\n    const pemTypes = ['public', 'private'];\r\n    if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\r\n\r\n    type = ((typeof type === 'string') && type.toLowerCase())\r\n        || pemTypes[!!asn1.privateExponent ? 1 : 0];\r\n\r\n    if (type === 'private' && !asn1.privateExponent) {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n    let v = asn1.publicExponent;\r\n    const expSize = Math.ceil(Math.log(v) / Math.log(256));\r\n    const exp = new Uint8Array(expSize).map(function (el) {\r\n        el = v % 256;\r\n        v = Math.floor(v / 256);\r\n        return el\r\n    }).reverse();\r\n\r\n    let jwk = Object.assign({ kty: 'RSA' }, extra, {\r\n        n: s2bu(AB2s(asn1.modulus)),\r\n        e: s2bu(AB2s(exp)),\r\n    });\r\n\r\n    if (type === 'private') {\r\n        Object.assign(jwk, {\r\n            d: s2bu(AB2s(asn1.privateExponent)),\r\n            p: s2bu(AB2s(asn1.prime1)),\r\n            q: s2bu(AB2s(asn1.prime2)),\r\n            dp: s2bu(AB2s(asn1.exponent1)),\r\n            dq: s2bu(AB2s(asn1.exponent2)),\r\n            qi: s2bu(AB2s(asn1.coefficient))\r\n        });\r\n    }\r\n    return jwk;\r\n}\r\n\r\nexport function pem2jwk(secret: string, type?: \"public\" | \"private\", extra?): Promise<any> {\r\n    return tryPromise(() => {\r\n        const pem = s2pem(secret);\r\n        return asn12jwk(pem2asn1(pem.body), type, extra)\r\n    })\r\n}\r\n\r\n/* Issue1: does not work with all versions of PEM keys...\r\nexport function parsePem(secret: string, concType?: \"public\" | \"private\", extra?): Promise<PEM> {\r\n    return tryPromise(() => {\r\n            const pem = s2pem(secret);\r\n            if (!concType) concType = pem.type;\r\n            if (concType !== pem.type) throw new Error(ILLEGAL_ARGUMENT);\r\n            return pem\r\n        })\r\n}\r\n*/\r\n\r\nexport async function createSign(name: string): Promise<any> {\r\n    if (webCryptoSubtle) {\r\n        return {\r\n            update: function (thing: string): any {\r\n                return {\r\n                    sign: async function (secret: string, encoding: string): Promise<any> {\r\n                        return await pem2jwk(secret, 'private', {\r\n                            key_ops: ['sign'],\r\n                            alg: name.replace('SHA-', 'RS')\r\n                        }).then(async keyData => {\r\n                            return await webCryptoSubtle.importKey(\r\n                                'jwk',\r\n                                keyData,\r\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\r\n                                true,\r\n                                ['sign']\r\n                            ).then(async key => {\r\n                                return await webCryptoSubtle.sign(\r\n                                    { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\r\n                                    key,\r\n                                    s2AB(thing)\r\n                                ).then(AB2s).then(s2b)\r\n                            })\r\n                        });\r\n\r\n                        /* Issue1: does not work with all versions of PEM keys...\r\n                        return await parsePem(secret, 'private').then(async pem => {\r\n                            return await webCryptoSubtle.importKey(\r\n                                'pkcs8',\r\n                                pem.body,\r\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\r\n                                true,\r\n                                ['sign']\r\n                            ).then(async key => {\r\n                                return await webCryptoSubtle.sign(\r\n                                    'RSASSA-PKCS1-v1_5',\r\n                                    key,\r\n                                    s2AB(thing)\r\n                                ).then(AB2s).then(s2b)\r\n                            })\r\n                        })\r\n                        */\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        const crypto = await import(\"crypto\");\r\n        if (!!crypto && crypto.createSign) {\r\n            return crypto.createSign(name.replace('SHA-', 'RSA-SHA'))\r\n        } else {\r\n            throw new Error(CRYPTO_NOT_FOUND);\r\n        }\r\n    }\r\n}\r\n\r\nexport function algRSsign(bits: number) {\r\n    return async function sign(thing: string, privateKey: string): Promise<string> {\r\n        try {\r\n            const res = await createSign('SHA-' + bits);\r\n            return b2bu(await res.update(thing).sign(privateKey, 'base64'));\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport async function createVerify(name: string): Promise<any> {\r\n    if (webCryptoSubtle) {\r\n        return {\r\n            update: function (thing: string): any {\r\n                return {\r\n                    verify: async function (secret: string, signature: string, encoding: string): Promise<boolean> {\r\n                        return await pem2jwk(secret, 'public', {\r\n                            key_ops: ['verify'],\r\n                            alg: name.replace('SHA-', 'RS')\r\n                        }).then(async ({ kty, n, e }) => {\r\n                            return await webCryptoSubtle.importKey(\r\n                                'jwk',\r\n                                { kty, n, e },\r\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\r\n                                false,\r\n                                ['verify']\r\n                            ).then(async key => {\r\n                                return await webCryptoSubtle.verify(\r\n                                    'RSASSA-PKCS1-v1_5',\r\n                                    key,\r\n                                    s2AB(bu2s(signature)),\r\n                                    s2AB(thing)\r\n                                )\r\n                            })\r\n                        });\r\n                        /* Issue1: does not work with all versions of PEM keys...\r\n                        return await parsePem(secret, 'public').then(async pem => {\r\n                            return await webCryptoSubtle.importKey(\r\n                                'spki',\r\n                                pem.body,\r\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\r\n                                true,\r\n                                ['verify']\r\n                            ).then(async key => {\r\n                                return await webCryptoSubtle.verify(\r\n                                    'RSASSA-PKCS1-v1_5',\r\n                                    key,\r\n                                    s2AB(bu2s(signature)),\r\n                                    s2AB(thing)\r\n                                )\r\n                            })\r\n                        })*/\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        const crypto = await import(\"crypto\");\r\n        if (!!crypto && crypto.createVerify) {\r\n            return crypto.createVerify(name.replace('SHA-', 'RSA-SHA'))\r\n        } else {\r\n            throw new Error(CRYPTO_NOT_FOUND);\r\n        }\r\n    }\r\n}\r\n\r\nexport function algRSverify(bits: number) {\r\n    return async function verify(thing: string, signature: string, publicKey: string): Promise<boolean> {\r\n        try {\r\n            signature = bu2b(signature);\r\n            const rsaVerify = await createVerify('SHA-' + bits);\r\n            return await rsaVerify.update(thing).verify(publicKey, signature, 'base64');\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Universal algorithm verifier\r\n *\r\n */\r\nexport async function algVerify(algorithm: string, thing: string, signature: string, secret: string): Promise<boolean> {\r\n    if (typeof algorithm !== 'string' || algorithm.length < 4) {\r\n        throw new Error(UNSUPPORTED_ALGORITHM);\r\n    }\r\n    const algo = algorithm.toLowerCase();\r\n\r\n    if (algo === 'none') {\r\n        return signature === '';\r\n    }\r\n\r\n    const type = algo.slice(0, 2), bits = parseInt(algo.slice(2));\r\n    if (isNaN(bits) || ([256, 384, 512].indexOf(bits) < 0)) {\r\n        throw new Error(UNSUPPORTED_ALGORITHM);\r\n    }\r\n\r\n    switch (type) {\r\n        case 'rs':\r\n            return await algRSverify(bits)(thing, signature, secret);\r\n        case 'hs':\r\n            return await algHSverify(bits)(thing, signature, secret);\r\n        default:\r\n            throw new Error(UNSUPPORTED_ALGORITHM);\r\n    }\r\n}\r\n\r\n/**\r\n * Universal algorithm signer\r\n *\r\n */\r\nexport async function algSign(algorithm: string, thing: string, secret: string): Promise<string> {\r\n    if (typeof algorithm !== 'string' || algorithm.length < 4) {\r\n        throw new Error(UNSUPPORTED_ALGORITHM);\r\n    }\r\n    const algo = algorithm.toLowerCase();\r\n\r\n    if (algo === 'none') {\r\n        return '';\r\n    }\r\n\r\n    const type = algo.slice(0, 2), bits = parseInt(algo.slice(2));\r\n    if (isNaN(bits) || ([256, 384, 512].indexOf(bits) < 0)) {\r\n        throw new Error(UNSUPPORTED_ALGORITHM);\r\n    }\r\n\r\n    switch (type) {\r\n        case 'rs':\r\n            return await algRSsign(bits)(thing, secret);\r\n        case 'hs':\r\n            return await algHSsign(bits)(thing, secret);\r\n        default:\r\n            throw new Error(UNSUPPORTED_ALGORITHM);\r\n    }\r\n}\r\n\r\nexport async function jwtVerify(jwtStr: string, secret: string): Promise<boolean> {\r\n    const jwt = jwtSplit(jwtStr, 'jwtVerify'),\r\n        header = s2J(bu2s(jwt.header)),\r\n        thing = jwt.header + '.' + jwt.payload;\r\n    return tryPromise(() => algVerify(header.alg, thing, jwt.signature, secret));\r\n}\r\n\r\nexport const verifyJwt = jwtVerify;\r\n\r\nexport function jwtSign(jwtStr: string, secret: string): Promise<string> {\r\n    const jwt = jwtSplit(jwtStr, 'jwtSign'),\r\n        header = s2J(bu2s(jwt.header)),\r\n        thing = jwt.header + '.' + jwt.payload;\r\n    return tryPromise(async () => await algSign(header.alg, thing, secret));\r\n}\r\n\r\nexport const signJwt = jwtSign;\r\n\r\nexport async function jwtResign(jwtStr: string, secret: string, alg?: string): Promise<string> {\r\n    const jwt = jwtDecode(jwtStr, 'jwtResign');\r\n    if (!!alg) jwt.header.alg = alg;\r\n    jwt.signature = await jwtSign(jwt.toString(), secret);\r\n    return jwt.toString();\r\n}\r\n\r\nexport const resignJwt = jwtResign;\r\n\r\n/**\r\n * Used for testing only\r\n *\r\n * @hidden\r\n */\r\nexport async function cryptoType(): Promise<string> {\r\n    const crypto = await import(\"crypto\");\r\n    return crypto ? crypto['type'] || 'crypto-node' : 'undefined';\r\n}\r\n\r\nexport default {\r\n    ILLEGAL_ARGUMENT,\r\n    UNSUPPORTED_ALGORITHM,\r\n    resignJwt,\r\n    signJwt,\r\n    splitJwt,\r\n    verifyJwt,\r\n    AB2hex,\r\n    AB2s,\r\n    J2s,\r\n    algHSsign,\r\n    algHSverify,\r\n    algRSsign,\r\n    algRSverify,\r\n    algSign,\r\n    algVerify,\r\n    asn12jwk,\r\n    b2bu,\r\n    b2s,\r\n    bu2b,\r\n    bu2s,\r\n    cleanZeros,\r\n    createHmac,\r\n    createSign,\r\n    createVerify,\r\n    hex2AB,\r\n    isGzip,\r\n    jwtDecode,\r\n    jwtResign,\r\n    jwtSign,\r\n    jwtSplit,\r\n    jwtVerify,\r\n    num2hex,\r\n    pem2asn1,\r\n    pem2jwk,\r\n    s2AB,\r\n    s2J,\r\n    s2b,\r\n    s2bu,\r\n    s2pem,\r\n    s2zbu,\r\n    tryPromise,\r\n    unzip,\r\n    zbu2s,\r\n    zip,\r\n};\r\n"],"names":[],"mappings":"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"}