{"version":3,"file":"jwt-js-decode.cjs.js","sources":["../src/int10.ts","../src/util.ts","../src/asn1.ts","../src/jwt-js-decode.ts"],"sourcesContent":["var max = 10000000000000; // biggest 10^n integer that can still fit 2^53 when multiplied by 256\n\nexport default class Int10 {\n    buf: any[];\n\n    constructor(value?) {\n        this.buf = [+value || 0];\n    }\n\n    mulAdd(m, c) {\n        // assert(m <= 256)\n        var b = this.buf,\n            l = b.length,\n            i, t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] * m + c;\n            if (t < max)\n                c = 0;\n            else {\n                c = 0 | (t / max);\n                t -= c * max;\n            }\n            b[i] = t;\n        }\n        if (c > 0)\n            b[i] = c;\n    };\n\n    sub(c) {\n        // assert(m <= 256)\n        var b = this.buf,\n            l = b.length,\n            i, t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] - c;\n            if (t < 0) {\n                t += max;\n                c = 1;\n            } else\n                c = 0;\n            b[i] = t;\n        }\n        while (b[b.length - 1] === 0)\n            b.pop();\n    };\n\n    toString(base?: number) {\n        if ((base || 10) != 10)\n            throw 'only base 10 is supported';\n        var b = this.buf,\n            s = b[b.length - 1].toString();\n        for (var i = b.length - 2; i >= 0; --i)\n            s += (max + b[i]).toString().substring(1);\n        return s;\n    };\n\n    valueOf() {\n        var b = this.buf,\n            v = 0;\n        for (var i = b.length - 1; i >= 0; --i)\n            v = v * max + b[i];\n        return v;\n    };\n\n    simplify() {\n        var b = this.buf;\n        return (b.length == 1) ? b[0] : this;\n    };\n}\n\nexport { Int10 };\n","export const UNSUPPORTED_ALGORITHM = 'Unsupported algorithm name specified! Supported algorithms: \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\" and \"none\".';\nexport const ILLEGAL_ARGUMENT = 'Illegal argument specified!';\nexport const CRYPTO_NOT_FOUND = 'Could not find \\'crypto\\'.';\nexport const PAKO_NOT_FOUND = 'Could not find \\'pako\\'.';\n\nexport function generateErrorMessage(value, callee, argumentName = 'argument', defaultType = 'string') {\n    let message = `Invalid argument passed to ${callee}.`;\n    if (typeof value !== defaultType) {\n        message += ` Expected type '${defaultType}', received '${typeof value}'.`\n    } else if (!value) {\n        message += ` Provided ${argumentName} is empty.`\n    } else if (argumentName !== 'argument') {\n        message += ` Provided ${argumentName} is invalid.`\n    }\n    return message;\n}\n\nexport function num2hex(memo: string, i: number): string {\n    return memo + ('0' + i.toString(16)).slice(-2);\n}\n\n// clean leading zeros\nexport function cleanZeros(b) {\n    return b[0] === 0 ? cleanZeros(b.slice(1)) : b;\n}\n\nexport function hex2AB(hex: string): ArrayBuffer | Uint8Array {\n    if (!hex) throw new Error(ILLEGAL_ARGUMENT);\n    const match = hex.match(/[0-9A-F]{2}/ig);\n    if (!match) throw new Error(ILLEGAL_ARGUMENT);\n    return new Uint8Array(match.map(i => parseInt(i, 16)))\n}\n\nexport function AB2hex(buff: ArrayBuffer | Uint8Array): string {\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    return (buff as Uint8Array).reduce(num2hex, '');\n}\n","import { Int10 } from './int10';\nimport { cleanZeros, hex2AB } from \"./util\";\n\nconst ellipsis = \"\\u2026\",\n    reTimeS = /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/,\n    reTimeL = /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\n\nfunction stringCut(str, len) {\n    if (str.length > len)\n        str = str.substring(0, len) + ellipsis;\n    return str;\n}\n\nexport class Stream {\n    enc: any;\n    pos: any;\n\n    constructor(enc, pos = 0) {\n        if (enc instanceof Stream) {\n            this.enc = enc.enc;\n            this.pos = enc.pos;\n        } else {\n            this.enc = enc;\n            this.pos = pos;\n        }\n    }\n\n    get(pos) {\n        if (pos === undefined)\n            pos = this.pos++;\n        if (pos >= this.enc.length)\n            throw 'Requesting byte offset ' + pos + ' on a stream of length ' + this.enc.length;\n        return (typeof this.enc == \"string\") ? this.enc.charCodeAt(pos) : this.enc[pos];\n    };\n\n    hexDigits = \"0123456789ABCDEF\";\n\n    hexByte(b) {\n        return this.hexDigits.charAt((b >> 4) & 0xF) + this.hexDigits.charAt(b & 0xF);\n    };\n\n    hexDump(start, end, raw) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n            if (raw !== true)\n                switch (i & 0xF) {\n                    case 0x7:\n                        s += \"  \";\n                        break;\n                    case 0xF:\n                        s += \"\\n\";\n                        break;\n                    default:\n                        s += \" \";\n                }\n        }\n        return s;\n    };\n\n    isASCII(start, end) {\n        for (var i = start; i < end; ++i) {\n            var c = this.get(i);\n            if (c < 32 || c > 176)\n                return false;\n        }\n        return true;\n    };\n\n    parseStringISO(start, end) {\n        var s = \"\";\n        for (var i = start; i < end; ++i)\n            s += String.fromCharCode(this.get(i));\n        return s;\n    };\n\n    parseStringUTF(start, end) {\n        var s = \"\";\n        for (var i = start; i < end;) {\n            var c = this.get(i++);\n            if (c < 128)\n                s += String.fromCharCode(c);\n            else if ((c > 191) && (c < 224))\n                s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));\n            else\n                s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));\n        }\n        return s;\n    };\n\n    parseStringBMP(start, end) {\n        var str = \"\", hi, lo;\n        for (var i = start; i < end;) {\n            hi = this.get(i++);\n            lo = this.get(i++);\n            str += String.fromCharCode((hi << 8) | lo);\n        }\n        return str;\n    };\n\n    parseTime(start, end, shortYear) {\n        var s = this.parseStringISO(start, end),\n            m = (shortYear ? reTimeS : reTimeL).exec(s);\n        if (!m)\n            return \"Unrecognized time: \" + s;\n        if (shortYear) {\n            var t = +m[1], y = (t < 70) ? 2000 : 1900;\n            m[1] = y + \"\";\n        }\n        s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\n        if (m[5]) {\n            s += \":\" + m[5];\n            if (m[6]) {\n                s += \":\" + m[6];\n                if (m[7])\n                    s += \".\" + m[7];\n            }\n        }\n        if (m[8]) {\n            s += \" UTC\";\n            if (m[8] != 'Z') {\n                s += m[8];\n                if (m[9])\n                    s += \":\" + m[9];\n            }\n        }\n        return s;\n    };\n\n    parseInteger(start, end) {\n        var v = this.get(start),\n            neg = (v > 127),\n            pad = neg ? 255 : 0,\n            len,\n            s = '';\n        while (v == pad && ++start < end)\n            v = this.get(start);\n        len = end - start;\n        if (len === 0)\n            return neg ? -1 : 0;\n        if (len > 4) {\n            let t = +v;\n            len <<= 3;\n            while (((t ^ pad) & 0x80) === 0) {\n                t <<= 1;\n                --len;\n            }\n            s = \"(\" + len + \" bit)\\n\";\n        }\n        if (neg) v = v - 256;\n        const n = new Int10(v);\n        for (let i = start + 1; i < end; ++i)\n            n.mulAdd(256, this.get(i));\n        return s + n.toString();\n    };\n\n    parseBitString(start, end, maxLength) {\n        var unusedBit = this.get(start),\n            lenBit = ((end - start - 1) << 3) - unusedBit,\n            intro = \"(\" + lenBit + \" bit)\\n\",\n            s = \"\";\n        for (var i = start + 1; i < end; ++i) {\n            var b = this.get(i),\n                skip = (i == end - 1) ? unusedBit : 0;\n            for (var j = 7; j >= skip; --j)\n                s += (b >> j) & 1 ? \"1\" : \"0\";\n            if (s.length > maxLength)\n                return intro + stringCut(s, maxLength);\n        }\n        return intro + s;\n    };\n\n    parseOctetString(start, end, maxLength) {\n        if (this.isASCII(start, end))\n            return stringCut(this.parseStringISO(start, end), maxLength);\n        var len = end - start,\n            s = \"(\" + len + \" byte)\\n\";\n        maxLength /= 2;\n        if (len > maxLength)\n            end = start + maxLength;\n        for (var i = start; i < end; ++i)\n            s += this.hexByte(this.get(i));\n        if (len > maxLength)\n            s += ellipsis;\n        return s;\n    };\n\n    parseOID(start, end, maxLength) {\n        var s = '',\n            n = new Int10(),\n            bits = 0;\n        for (var i = start; i < end; ++i) {\n            var v = this.get(i);\n            n.mulAdd(128, v & 0x7F);\n            bits += 7;\n            if (!(v & 0x80)) {\n                if (s === '') {\n                    n = n.simplify();\n                    if (n instanceof Int10) {\n                        n.sub(80);\n                        s = \"2.\" + n.toString();\n                    } else {\n                        var m = n < 80 ? n < 40 ? 0 : 1 : 2;\n                        s = m + \".\" + (n - m * 40);\n                    }\n                } else\n                    s += \".\" + n.toString();\n                if (s.length > maxLength)\n                    return stringCut(s, maxLength);\n                n = new Int10();\n                bits = 0;\n            }\n        }\n        if (bits > 0)\n            s += \".incomplete\";\n        return s;\n    };\n}\n\nexport class ASN1 {\n    stream: any;\n    header: any;\n    length: any;\n    tag: any;\n    sub: any;\n\n    constructor(stream, header, length, tag, sub) {\n        if (!(tag instanceof ASN1Tag)) throw 'Invalid tag value.';\n        this.stream = stream;\n        this.header = header;\n        this.length = length;\n        this.tag = tag;\n        this.sub = sub;\n    }\n\n    typeName() {\n        switch (this.tag.tagClass) {\n            case 0: \n                switch (this.tag.tagNumber) {\n                    case 0x00:\n                        return \"EOC\";\n                    case 0x01:\n                        return \"BOOLEAN\";\n                    case 0x02:\n                        return \"INTEGER\";\n                    case 0x03:\n                        return \"BIT_STRING\";\n                    case 0x04:\n                        return \"OCTET_STRING\";\n                    case 0x05:\n                        return \"NULL\";\n                    case 0x06:\n                        return \"OBJECT_IDENTIFIER\";\n                    case 0x07:\n                        return \"ObjectDescriptor\";\n                    case 0x08:\n                        return \"EXTERNAL\";\n                    case 0x09:\n                        return \"REAL\";\n                    case 0x0A:\n                        return \"ENUMERATED\";\n                    case 0x0B:\n                        return \"EMBEDDED_PDV\";\n                    case 0x0C:\n                        return \"UTF8String\";\n                    case 0x10:\n                        return \"SEQUENCE\";\n                    case 0x11:\n                        return \"SET\";\n                    case 0x12:\n                        return \"NumericString\";\n                    case 0x13:\n                        return \"PrintableString\"; \n                    case 0x14:\n                        return \"TeletexString\"; \n                    case 0x15:\n                        return \"VideotexString\";\n                    case 0x16:\n                        return \"IA5String\"; \n                    case 0x17:\n                        return \"UTCTime\";\n                    case 0x18:\n                        return \"GeneralizedTime\";\n                    case 0x19:\n                        return \"GraphicString\";\n                    case 0x1A:\n                        return \"VisibleString\"; \n                    case 0x1B:\n                        return \"GeneralString\";\n                    case 0x1C:\n                        return \"UniversalString\";\n                    case 0x1E:\n                        return \"BMPString\";\n                }\n                return \"Universal_\" + this.tag.tagNumber.toString();\n            case 1:\n                return \"Application_\" + this.tag.tagNumber.toString();\n            case 2:\n                return \"[\" + this.tag.tagNumber.toString() + \"]\"; \n            case 3:\n                return \"Private_\" + this.tag.tagNumber.toString();\n        }\n    };\n\n    content(maxLength?) { \n        if (this.tag === undefined)\n            return null;\n        if (maxLength === undefined)\n            maxLength = Infinity;\n        var content = this.posContent(),\n            len = Math.abs(this.length);\n        if (!this.tag.isUniversal()) {\n            if (this.sub !== null)\n                return \"(\" + this.sub.length + \" elem)\";\n            return this.stream.parseOctetString(content, content + len, maxLength);\n        }\n        switch (this.tag.tagNumber) {\n            case 0x01: \n                return (this.stream.get(content) === 0) ? \"false\" : \"true\";\n            case 0x02: \n                return this.stream.parseInteger(content, content + len);\n            case 0x03: \n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseBitString(content, content + len, maxLength);\n            case 0x04: \n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseOctetString(content, content + len, maxLength);\n            \n            case 0x06: \n                return this.stream.parseOID(content, content + len, maxLength);\n            \n            \n            \n            \n            \n            case 0x10: \n            case 0x11: \n                if (this.sub !== null)\n                    return \"(\" + this.sub.length + \" elem)\";\n                else\n                    return \"(no elem)\";\n            case 0x0C: \n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\n            case 0x12: \n            case 0x13: \n            case 0x14: \n            case 0x15: \n            case 0x16: \n            \n            case 0x1A: \n                \n                \n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\n            case 0x1E: \n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\n            case 0x17: \n            case 0x18: \n                return this.stream.parseTime(content, content + len, (this.tag.tagNumber == 0x17));\n        }\n        return null;\n    };\n\n    toString() {\n        return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + ((this.sub === null) ? 'null' : this.sub.length) + \"]\";\n    };\n\n    posStart() {\n        return this.stream.pos;\n    };\n\n    posContent() {\n        return this.stream.pos + this.header;\n    };\n\n    posEnd() {\n        return this.stream.pos + this.header + Math.abs(this.length);\n    };\n\n    toHexString(root?) {\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\n    };\n\n    getHex() {\n        return this.stream.hexDump(this.posContent(), this.posEnd(), true);\n    };\n\n    getAB(clean = true) {\n        return clean ? cleanZeros(hex2AB(this.getHex())) : hex2AB(this.getHex());\n    };\n\n    static decodeLength(stream) {\n        let buf = stream.get();\n        const len = buf & 0x7F;\n        if (len == buf)\n            return len;\n        if (len > 6)\n            throw \"Length over 48 bits not supported at position \" + (stream.pos - 1);\n        if (len === 0)\n            return null; \n        buf = 0;\n        for (var i = 0; i < len; ++i)\n            buf = (buf * 256) + stream.get();\n        return buf;\n    };\n\n    static decode(stream) {\n        if (!(stream instanceof Stream))\n            stream = new Stream(stream, 0);\n        const streamStart = new Stream(stream);\n        const tag = new ASN1Tag(stream);\n        let len = ASN1.decodeLength(stream), sub: any = null;\n        const start = stream.pos;\n        const header = start - streamStart.pos;\n        const getSub = function () {\n            sub = [];\n            if (len !== null) {\n                var end = start + len;\n                while (stream.pos < end)\n                    sub[sub.length] = ASN1.decode(stream);\n                if (stream.pos != end)\n                    throw \"Content size is not correct for container starting at offset \" + start;\n            } else {\n                try {\n                    for (; ;) {\n                        const s = ASN1.decode(stream);\n                        if (s.tag.isEOC())\n                            break;\n                        sub[sub.length] = s;\n                    }\n                    len = start - stream.pos; \n                } catch (e) {\n                    throw \"Exception while decoding undefined length content: \" + e;\n                }\n            }\n        };\n        if (tag.tagConstructed) {\n            getSub();\n        } else if (tag.isUniversal() && ((tag.tagNumber == 0x03) || (tag.tagNumber == 0x04))) {\n            try {\n                if (tag.tagNumber == 0x03)\n                    if (stream.get() != 0)\n                        throw \"BIT STRINGs with unused bits cannot encapsulate.\";\n                getSub();\n                for (var i = 0; i < sub.length; ++i)\n                    if (sub[i].tag.isEOC())\n                        throw 'EOC is not supposed to be actual content.';\n            } catch (e) {\n                \n                sub = null;\n            }\n        }\n        if (sub === null) {\n            if (len === null)\n                throw \"We can't skip over an invalid tag with undefined length at offset \" + start;\n            stream.pos = start + Math.abs(len);\n        }\n        return new ASN1(streamStart, header, len, tag, sub);\n    };\n}\n\nclass ASN1Tag {\n    tagClass: any;\n    tagConstructed: any;\n    tagNumber: any;\n\n    constructor(stream) {\n        var buf = stream.get();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = ((buf & 0x20) !== 0);\n        this.tagNumber = buf & 0x1F;\n        if (this.tagNumber == 0x1F) { \n            var n = new Int10();\n            do {\n                buf = stream.get();\n                n.mulAdd(128, buf & 0x7F);\n            } while (buf & 0x80);\n            this.tagNumber = n.simplify();\n        }\n    }\n\n    isUniversal() {\n        return this.tagClass === 0x00;\n    };\n\n    isEOC() {\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\n    };\n}\n","import pako from \"pako\";\n/* Issue3: Works, but ASN1 adds 14kb of code to this lib\nimport ASN1 from \"asn1js\";\n*/\n// Simplified/improved version of\n// \"asn1js\": \"git+https://github.com/lapo-luchini/asn1js.git\",\nimport { ASN1 } from \"./asn1\";\nimport {\n    AB2hex,\n    cleanZeros,\n    CRYPTO_NOT_FOUND,\n    generateErrorMessage,\n    hex2AB,\n    ILLEGAL_ARGUMENT,\n    num2hex,\n    PAKO_NOT_FOUND,\n    UNSUPPORTED_ALGORITHM\n} from \"./util\";\n/*\n//crypto-browserify:\nimport { createHmac, createSign, createVerify } from \"crypto-browserify\";\n//or browserify hmac/sign\nimport { createHmac } from \"create-hmac\";\nimport { createSign, createVerify } from \"browserify-sign\";\n\n//node.js\nimport { createHmac, createSign, createVerify } from \"crypto\";\n*/\nexport const webCrypto = typeof window === \"object\" && (window.crypto || window['msCrypto']);\nexport const webCryptoSubtle = webCrypto && (webCrypto.subtle || webCrypto['webkitSubtle'] || webCrypto['Subtle']);\n\n/**\n * Class for creating a JwtSplit object with three parts of JWT Token as strings\n *\n * @class  JwtSplit\n */\nexport class JwtSplit {\n    /**\n     * Header (first) part of JWT Token\n     *\n     * @name  header\n     * @type {string}\n     */\n    header: string;\n\n    /**\n     * Payload (second) part of JWT Token\n     *\n     * @name  payload\n     * @type {string}\n     */\n    payload: string;\n\n    /**\n     * Signature (third) part of JWT Token\n     *\n     * @name  signature\n     * @type {string}\n     */\n    signature: string;\n\n    constructor(str: string, callee = 'JwtSplit') {\n        if (typeof str !== 'string') {\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\n        }\n\n        const jwtArr = str.split('.');\n        if (jwtArr.length !== 3) {\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\n        }\n\n        const [header, payload, signature] = jwtArr;\n        this.header = header;\n        this.payload = payload;\n        this.signature = signature;\n    }\n\n    public toString(): string {\n        return this.header + '.' + this.payload + '.' + this.signature\n    }\n}\n\n/** JwtPart interface basically object type definition used as a placeholder */\ninterface JwtPart {\n    [key: string]: any\n}\n\n/**\n * Class for creating a JwtDecode object with three parts of JWT Token, header and payload decoded and parsed, signature in initial form\n *\n * @class  JwtDecode\n */\nexport class JwtDecode {\n    /**\n     * Header (first) part of JWT Token\n     *\n     * @name  header\n     * @type {JwtPart}\n     */\n    public header: JwtPart = {};\n\n    /**\n     * Payload (second) part of JWT Token\n     *\n     * @name  payload\n     * @type {JwtPart}\n     */\n    public payload: JwtPart = {};\n\n    /**\n     * Signature (third) part of JWT Token\n     *\n     * @name  signature\n     * @type {string}\n     */\n    public signature: string = '';\n\n    constructor(str: string, callee = 'JwtDecode') {\n        if (typeof str !== 'string') {\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\n        }\n        const jwtObj: JwtSplit = jwtSplit(str, callee);\n        if (jwtObj) {\n            this.header = jwtObj.header ? s2J(bu2s(jwtObj.header)) : {};\n            this.payload = jwtObj.payload ? (isGzip(this.header) ? s2J(zbu2s(jwtObj.payload)) : s2J(bu2s(jwtObj.payload))) : {};\n            this.signature = jwtObj.signature || '';\n        }\n    }\n\n    public toString(): string {\n        return s2bu(J2s(this.header)) + '.' + (isGzip(this.header) ? s2zbu(J2s(this.payload)) : s2bu(J2s(this.payload))) + '.' + this.signature\n    }\n}\n\n/**\n * Try running function and replace it's response as Promise.resolve/reject\n *\n * @param {function} fn - fn to call in for response\n *\n * @returns {Promise<any>} resulting Promise\n */\nexport function tryPromise(fn) {\n    try {\n        return Promise.resolve(fn());\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\n/**\n * Converts string to JSON object\n *\n * @param {string} str - data string to convert\n *\n * @returns {object} resulting object\n */\nexport function s2J(str: string): any {\n    try {\n        return JSON.parse(str);\n    } catch (e) {\n        throw e;\n    }\n}\n\n/**\n * Converts JSON object to string\n *\n * @param {object} obj - JSON object to convert\n *\n * @returns {string} resulting string\n */\nexport function J2s(obj: any): string {\n    try {\n        return JSON.stringify(obj);\n    } catch (e) {\n        throw e;\n    }\n}\n\n/**\n * Converts string to base64 string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} decoded data string\n */\nexport function b2s(str: string): string {\n    try {\n        if (typeof window === 'object' && typeof window.atob === 'function') {\n            return window.atob(str);\n        } else if (typeof Buffer !== 'undefined') {\n            return Buffer.from(str, 'base64').toString('binary')\n        } else throw new Error(ILLEGAL_ARGUMENT);\n    } catch (e) {\n        throw e;\n    }\n}\n\n/**\n * Converts base64 string to base64url string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64url string\n */\nexport function b2bu(str: string): string {\n    if ((typeof str !== 'string') || (str.length % 4 !== 0)) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    return str\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=/g, '');\n}\n\n/**\n *\n * Converts base64url string to base64 string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64 string\n */\nexport function bu2b(str: string): string {\n    if ((typeof str !== 'string') || (str.length % 4 === 1)) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    for (; (str.length % 4 !== 0);) {\n        str += '=';\n    }\n    return str\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n}\n\n/**\n * Converts base64url string to string\n *\n * @param {string} str - base64url string to convert\n *\n * @returns {string} decoded data string\n */\nexport function bu2s(str: string): string {\n    return b2s(bu2b(str));\n}\n\n/**\n * Check if header has zip property (and it is equal to 'GZIP', ignorecase)\n *\n * @param {string} header - object to check\n *\n * @returns {boolean} does it have gzip in zip property\n */\nexport function isGzip(header: JwtPart): boolean {\n    return typeof header === 'object' && typeof header.zip === 'string' && header.zip.toUpperCase() === 'GZIP'\n}\n\n/**\n * Decode jwtToken header and payload\n *\n * @param {string} str - data string to decode\n *\n * @returns {JwtDecode} object with decoded header and body, and signature untouched\n */\nexport function jwtDecode(str: string, callee = 'jwtDecode'): JwtDecode {\n    return new JwtDecode(str, callee);\n}\n\n/**\n * Split jwtToken into object {header, payload, signature}\n *\n * @param {string} str - data string to split\n *\n * @returns {JwtSplit} jwt split object of three strings\n */\nexport function jwtSplit(str: string, callee = 'jwtSplit'): JwtSplit {\n    return new JwtSplit(str, callee);\n}\n\nexport const splitJwt = jwtSplit;\n\n/**\n * Converts base64 string to string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64 string\n */\nexport function s2b(str: string): string {\n    try {\n        if (typeof window === 'object' && typeof window.btoa === 'function') {\n            return window.btoa(str);\n        } else if (typeof Buffer !== 'undefined') {\n            return Buffer.from(str).toString('base64');\n        } else throw new Error(ILLEGAL_ARGUMENT);\n    } catch (e) {\n        throw e;\n    }\n}\n\n/**\n * Converts string to base64url string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64url string\n */\nexport function s2bu(str: string): string {\n    return b2bu(s2b(str));\n}\n\n/**\n * Gzip and encode data string to base64url string\n *\n * @param {string} str - data string to encode\n *\n * @returns {string} base64url string\n */\nexport function s2zbu(str: string): string {\n    return s2bu(zip(str));\n}\n\n/**\n * Converts from gzip data string to string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} decoded data string\n */\nexport function unzip(str: string): string {\n    if (typeof str !== 'string') {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    if (!!pako && pako.inflate) {\n        return AB2s(pako.inflate(s2AB(str), {\n            raw: false\n        }));\n    } else {\n        throw new Error(PAKO_NOT_FOUND);\n    }\n}\n\n/**\n * Decode from base64url and unzip data string\n *\n * @param {string} str - data string to decode\n *\n * @returns {string} decoded data string\n */\nexport function zbu2s(str: string): string {\n    return unzip(bu2s(str));\n}\n\n/**\n * Converts string to gzip data string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} gzip data string\n */\nexport function zip(str: string): string {\n    if (typeof str !== 'string') {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    if (!!pako && pako.deflate) {\n        return AB2s(pako.deflate(str, {\n            raw: false\n        }));\n    } else {\n        throw new Error(PAKO_NOT_FOUND);\n    }\n}\n\n/**\n * Converts string to ArrayBuffer\n *\n * @param {string} str - data string to convert\n *\n * @returns {ArrayBuffer} charCode ArrayBuffer\n */\nexport function s2AB(str: string): ArrayBuffer {\n    const buff = new ArrayBuffer(str.length);\n    const view = new Uint8Array(buff);\n    for (let i = 0; i < str.length; i++) view[i] = str.charCodeAt(i);\n    return buff;\n}\n\n/**\n * Converts ArrayBuffer to string\n *\n * @param {ArrayBuffer | Uint8Array} buff - charCode ArrayBuffer to convert\n *\n * @returns {string} data string\n */\nexport function AB2s(buff: ArrayBuffer | Uint8Array): string {\n    if(!(buff instanceof Uint8Array)) buff = new Uint8Array(buff);\n    return String.fromCharCode.apply(String, Array.from(buff as any));\n}\n\n/**\n * Async function inspired by createHmac in crypto (used WebCrypto Api supported by most browsers)\n *\n */\n\nexport async function createHmac(name: string, secret: string): Promise<any> {\n    if (webCryptoSubtle) {\n        const keyData = s2AB(secret);\n        return await webCryptoSubtle.importKey(\n            'raw',\n            keyData,\n            { name: 'HMAC', hash: { name: name } },\n            true,\n            ['sign']\n        ).then(key => {\n            return {\n                update: async function (thing): Promise<ArrayBuffer> {\n                    return await webCryptoSubtle.sign(\n                        'HMAC',\n                        key,\n                        s2AB(thing)\n                    )\n                }\n            }\n        })\n    } else {\n        const crypto = await import(\"crypto\");\n        return !!crypto && crypto.createHmac ? Promise.resolve(crypto.createHmac(name.replace('SHA-', 'sha'), secret)) : Promise.reject(webCrypto);\n    }\n}\n\n/**\n * Algorithm HMAC sign generator\n *\n */\nexport function algHSsign(bits: number) {\n    /**\n     * Algorithm HMAC signer\n     *\n     */\n    return async function sign(thing: string, secret: string): Promise<string> {\n        const hmac = await createHmac('SHA-' + bits, secret);\n        if (webCryptoSubtle) {\n            if(!hmac) return Promise.reject(ILLEGAL_ARGUMENT);\n            return Promise.resolve(s2bu(AB2s(await hmac.update(thing))));\n        }\n        return Promise.resolve(b2bu(hmac.update(thing).digest('base64')));\n    }\n}\n\n/**\n * Algorithm HMAC verify generator\n *\n */\nexport function algHSverify(bits: number) {\n    /**\n     * Algorithm HMAC verifier\n     *\n     */\n    return async function verify(thing: string, signature: string, secret: string): Promise<boolean> {\n        return await algHSsign(bits)(thing, secret) === signature;\n    }\n}\n\nexport interface PEM {\n    body: ArrayBuffer | Uint8Array,\n    type: 'private' | 'public'\n}\n\nexport function s2pem(secret: string): PEM {\n    if (typeof secret !== 'string') {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    let type = 'public';\n\n    function ignore(line: string): boolean {\n        if (ignoreLinesPriv.some(ign => line.toUpperCase().indexOf(ign) > -1)) {\n            type = 'private';\n            return false;\n        }\n        return !ignoreLinesPub.some(ign => line.toUpperCase().indexOf(ign) > -1);\n    }\n\n    const lines = secret.split('\\n'),\n        ignoreLinesPriv = [\n            '-BEGIN RSA PRIVATE KEY-',\n            '-END RSA PRIVATE KEY-'],\n        ignoreLinesPub = [\n            '-BEGIN RSA PUBLIC KEY-',\n            '-BEGIN PUBLIC KEY-',\n            '-END PUBLIC KEY-',\n            '-END RSA PUBLIC KEY-'\n        ], body = lines.map(line => line.trim()).filter(line =>\n        line.length && ignore(line)).join('');\n    if (body.length) {\n        return { body: s2AB(b2s(bu2b(body))), type: <'private' | 'public'>type };\n    } else {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n}\n\n/* Issue2: not universal does not work with structured PEM keys\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array, type: 'private' | 'public'): any {\n    if (!buff || !type) throw new Error(ILLEGAL_ARGUMENT);\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    let data = new DataView(buff.buffer);\n\n    let res = {};\n    let offset = {\n        private: buff[1] & 0x80 ? buff[1] - 0x80 + 5 : 7,\n        public: buff[1] & 0x80 ? buff[1] - 0x80 + 2 : 2,\n    }[type.toLowerCase()];\n\n    function read() {\n        if ((offset + 1) < buff.byteLength) {\n            let s = data.getUint8(offset + 1);\n            if (s & 0x80) {\n                let n = s - 0x80;\n                s = data[[\n                    'getUint8', 'getInt16'\n                ][n - 1]](offset + 2, false);\n                offset += n;\n            }\n            offset += 2;\n            let b = (<Uint8Array>buff).slice(offset, offset + s);\n            offset += s;\n            return cleanZeros(b);\n        }\n        return new Uint8Array();\n    }\n\n    res['modulus'] = read();\n    res['bits'] = (res['modulus'].length - 1) * 8 + Math.ceil(\n        Math.log(res['modulus'][0] + 1) / Math.log(2)\n    );\n    if (!res['bits']) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    res['publicExponent'] = parseInt(AB2hex(read()), 16);\n    if (type === 'private') {\n        res['privateExponent'] = read();\n        res['prime1'] = read();\n        res['prime2'] = read();\n        res['exponent1'] = read();\n        res['exponent2'] = read();\n        res['coefficient'] = read();\n    }\n    return res;\n}\n\nexport function asn12jwk(asn1: any, type: string, extra?: any): any {\n    const pemTypes = ['public', 'private'];\n    if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\n\n    type = ((typeof type === 'string') && type.toLowerCase())\n        || pemTypes[!!asn1.privateExponent ? 1 : 0];\n    if ((type === 'private' && !asn1.privateExponent)\n        || pemTypes.indexOf(type) < 0) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    let v = asn1.publicExponent;\n    const expSize = Math.ceil(Math.log(v) / Math.log(256));\n    const exp = new Uint8Array(expSize).map(function (el) {\n        el = v % 256;\n        v = Math.floor(v / 256);\n        return el\n    }).reverse();\n\n    let jwk = Object.assign({ kty: 'RSA' }, extra, {\n        n: s2bu(AB2s(asn1.modulus)),\n        e: s2bu(AB2s(exp)),\n    });\n\n    if (type === 'private') {\n        Object.assign(jwk, {\n            d: s2bu(AB2s(asn1.privateExponent)),\n            p: s2bu(AB2s(asn1.prime1)),\n            q: s2bu(AB2s(asn1.prime2)),\n            dp: s2bu(AB2s(asn1.exponent1)),\n            dq: s2bu(AB2s(asn1.exponent2)),\n            qi: s2bu(AB2s(asn1.coefficient))\n        });\n    }\n    return jwk;\n}\n*/\n\n/* Issue3: Works, but ASN1 adds 14kb of code to this lib\nASN1.prototype.getAB = function() {\n    return cleanZeros(hex2AB(this.getHex()));\n};\n\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array): any {\n    if (!buff) throw new Error(ILLEGAL_ARGUMENT);\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    let asn1 = ASN1.decode(buff), res = {};\n\n    // add different PEM key structures and use sub.structure for ordering\n    if (asn1.sub.length === 3) {\n        asn1 = asn1.sub[2].sub[0];\n    }\n    if (asn1.sub.length === 9) {\n        // Parse the private key.\n        res['modulus'] = asn1.sub[1].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[2].getHex(), 16); // int\n        res['privateExponent'] = asn1.sub[3].getAB(); // ArrayBuffer\n        res['prime1'] = asn1.sub[4].getAB(); // ArrayBuffer\n        res['prime2'] = asn1.sub[5].getAB(); // ArrayBuffer\n        res['exponent1'] = asn1.sub[6].getAB(); // ArrayBuffer\n        res['exponent2'] = asn1.sub[7].getAB(); // ArrayBuffer\n        res['coefficient'] = asn1.sub[8].getAB(); // ArrayBuffer\n\n    } else if (asn1.sub.length === 2) {\n        // Parse the public key.\n        asn1 = asn1.sub[1].sub[0];\n\n        res['modulus'] = asn1.sub[0].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[1].getHex(), 16); // int\n    }\n    return res;\n}\n*/\nexport class Asn1Tag {\n    tagClass: number = 0;\n    tagConstructed: boolean = false;\n    tagNumber: number = 0;\n\n    constructor(stream) {\n        const buf = stream.read();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = ((buf & 0x20) !== 0);\n        this.tagNumber = buf & 0x1F;\n    }\n}\n\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array): any {\n    if (!buff) throw new Error(ILLEGAL_ARGUMENT);\n\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    let asn1 = ASN1.decode(buff), res = {};\n\n    if (asn1.sub.length === 3) {\n        asn1 = asn1.sub[2].sub[0];\n    }\n    if (asn1.sub.length === 9) {\n        // Parse the private key.\n        res['modulus'] = asn1.sub[1].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[2].getHex(), 16); // int\n        res['privateExponent'] = asn1.sub[3].getAB(); // ArrayBuffer\n        res['prime1'] = asn1.sub[4].getAB(); // ArrayBuffer\n        res['prime2'] = asn1.sub[5].getAB(); // ArrayBuffer\n        res['exponent1'] = asn1.sub[6].getAB(); // ArrayBuffer\n        res['exponent2'] = asn1.sub[7].getAB(); // ArrayBuffer\n        res['coefficient'] = asn1.sub[8].getAB(); // ArrayBuffer\n    } else if (asn1.sub.length === 2) {\n        // Parse the public key.\n        asn1 = asn1.sub[1].sub[0];\n\n        res['modulus'] = asn1.sub[0].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[1].getHex(), 16); // int\n    }\n\n    res['bits'] = (res['modulus'].length - 1) * 8 + Math.ceil(\n        Math.log(res['modulus'][0] + 1) / Math.log(2)\n    );\n\n    if (!res['bits']) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    return res;\n}\n\nexport function asn12jwk(asn1: any, type?: string, extra?: any): any {\n    const pemTypes = ['public', 'private'];\n    if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\n\n    type = ((typeof type === 'string') && type.toLowerCase())\n        || pemTypes[!!asn1.privateExponent ? 1 : 0];\n\n    if (type === 'private' && !asn1.privateExponent) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    let v = asn1.publicExponent;\n    const expSize = Math.ceil(Math.log(v) / Math.log(256));\n    const exp = new Uint8Array(expSize).map(function (el) {\n        el = v % 256;\n        v = Math.floor(v / 256);\n        return el\n    }).reverse();\n\n    let jwk = Object.assign({ kty: 'RSA' }, extra, {\n        n: s2bu(AB2s(asn1.modulus)),\n        e: s2bu(AB2s(exp)),\n    });\n\n    if (type === 'private') {\n        Object.assign(jwk, {\n            d: s2bu(AB2s(asn1.privateExponent)),\n            p: s2bu(AB2s(asn1.prime1)),\n            q: s2bu(AB2s(asn1.prime2)),\n            dp: s2bu(AB2s(asn1.exponent1)),\n            dq: s2bu(AB2s(asn1.exponent2)),\n            qi: s2bu(AB2s(asn1.coefficient))\n        });\n    }\n    return jwk;\n}\n\nexport function pem2jwk(secret: string, type?: \"public\" | \"private\", extra?): Promise<any> {\n    return tryPromise(() => {\n        const pem = s2pem(secret);\n        return asn12jwk(pem2asn1(pem.body), type, extra)\n    })\n}\n\n/* Issue1: does not work with all versions of PEM keys...\nexport function parsePem(secret: string, concType?: \"public\" | \"private\", extra?): Promise<PEM> {\n    return tryPromise(() => {\n            const pem = s2pem(secret);\n            if (!concType) concType = pem.type;\n            if (concType !== pem.type) throw new Error(ILLEGAL_ARGUMENT);\n            return pem\n        })\n}\n*/\n\nexport async function createSign(name: string): Promise<any> {\n    if (webCryptoSubtle) {\n        return {\n            update: function (thing: string): any {\n                return {\n                    sign: async function (secret: string, encoding: string): Promise<any> {\n                        return await pem2jwk(secret, 'private', {\n                            key_ops: ['sign'],\n                            alg: name.replace('SHA-', 'RS')\n                        }).then(async keyData => {\n                            return await webCryptoSubtle.importKey(\n                                'jwk',\n                                keyData,\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                true,\n                                ['sign']\n                            ).then(async key => {\n                                return await webCryptoSubtle.sign(\n                                    { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                    key,\n                                    s2AB(thing)\n                                ).then(AB2s).then(s2b)\n                            })\n                        });\n\n                        /* Issue1: does not work with all versions of PEM keys...\n                        return await parsePem(secret, 'private').then(async pem => {\n                            return await webCryptoSubtle.importKey(\n                                'pkcs8',\n                                pem.body,\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                true,\n                                ['sign']\n                            ).then(async key => {\n                                return await webCryptoSubtle.sign(\n                                    'RSASSA-PKCS1-v1_5',\n                                    key,\n                                    s2AB(thing)\n                                ).then(AB2s).then(s2b)\n                            })\n                        })\n                        */\n                    }\n                }\n            }\n        }\n    } else {\n        const crypto = await import(\"crypto\");\n        if (!!crypto && crypto.createSign) {\n            return crypto.createSign(name.replace('SHA-', 'RSA-SHA'))\n        } else {\n            throw new Error(CRYPTO_NOT_FOUND);\n        }\n    }\n}\n\nexport function algRSsign(bits: number) {\n    return async function sign(thing: string, privateKey: string): Promise<string> {\n        try {\n            const res = await createSign('SHA-' + bits);\n            return b2bu(await res.update(thing).sign(privateKey, 'base64'));\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n\nexport async function createVerify(name: string): Promise<any> {\n    if (webCryptoSubtle) {\n        return {\n            update: function (thing: string): any {\n                return {\n                    verify: async function (secret: string, signature: string, encoding: string): Promise<boolean> {\n                        return await pem2jwk(secret, 'public', {\n                            key_ops: ['verify'],\n                            alg: name.replace('SHA-', 'RS')\n                        }).then(async ({ kty, n, e }) => {\n                            return await webCryptoSubtle.importKey(\n                                'jwk',\n                                { kty, n, e },\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                false,\n                                ['verify']\n                            ).then(async key => {\n                                return await webCryptoSubtle.verify(\n                                    'RSASSA-PKCS1-v1_5',\n                                    key,\n                                    s2AB(bu2s(signature)),\n                                    s2AB(thing)\n                                )\n                            })\n                        });\n                        /* Issue1: does not work with all versions of PEM keys...\n                        return await parsePem(secret, 'public').then(async pem => {\n                            return await webCryptoSubtle.importKey(\n                                'spki',\n                                pem.body,\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                true,\n                                ['verify']\n                            ).then(async key => {\n                                return await webCryptoSubtle.verify(\n                                    'RSASSA-PKCS1-v1_5',\n                                    key,\n                                    s2AB(bu2s(signature)),\n                                    s2AB(thing)\n                                )\n                            })\n                        })*/\n\n                    }\n                }\n            }\n        }\n    } else {\n        const crypto = await import(\"crypto\");\n        if (!!crypto && crypto.createVerify) {\n            return crypto.createVerify(name.replace('SHA-', 'RSA-SHA'))\n        } else {\n            throw new Error(CRYPTO_NOT_FOUND);\n        }\n    }\n}\n\nexport function algRSverify(bits: number) {\n    return async function verify(thing: string, signature: string, publicKey: string): Promise<boolean> {\n        try {\n            signature = bu2b(signature);\n            const rsaVerify = await createVerify('SHA-' + bits);\n            return await rsaVerify.update(thing).verify(publicKey, signature, 'base64');\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n\n/**\n * Universal algorithm verifier\n *\n */\nexport async function algVerify(algorithm: string, thing: string, signature: string, secret: string): Promise<boolean> {\n    if (typeof algorithm !== 'string' || algorithm.length < 4) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n    const algo = algorithm.toLowerCase();\n\n    if (algo === 'none') {\n        return signature === '';\n    }\n\n    const type = algo.slice(0, 2), bits = parseInt(algo.slice(2));\n    if (isNaN(bits) || ([256, 384, 512].indexOf(bits) < 0)) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n\n    switch (type) {\n        case 'rs':\n            return await algRSverify(bits)(thing, signature, secret);\n        case 'hs':\n            return await algHSverify(bits)(thing, signature, secret);\n        default:\n            throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n}\n\n/**\n * Universal algorithm signer\n *\n */\nexport async function algSign(algorithm: string, thing: string, secret: string): Promise<string> {\n    if (typeof algorithm !== 'string' || algorithm.length < 4) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n    const algo = algorithm.toLowerCase();\n\n    if (algo === 'none') {\n        return '';\n    }\n\n    const type = algo.slice(0, 2), bits = parseInt(algo.slice(2));\n    if (isNaN(bits) || ([256, 384, 512].indexOf(bits) < 0)) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n\n    switch (type) {\n        case 'rs':\n            return await algRSsign(bits)(thing, secret);\n        case 'hs':\n            return await algHSsign(bits)(thing, secret);\n        default:\n            throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n}\n\nexport async function jwtVerify(jwtStr: string, secret: string): Promise<boolean> {\n    const jwt = jwtSplit(jwtStr, 'jwtVerify'),\n        header = s2J(bu2s(jwt.header)),\n        thing = jwt.header + '.' + jwt.payload;\n    return tryPromise(() => algVerify(header.alg, thing, jwt.signature, secret));\n}\n\nexport const verifyJwt = jwtVerify;\n\nexport function jwtSign(jwtStr: string, secret: string): Promise<string> {\n    const jwt = jwtSplit(jwtStr, 'jwtSign'),\n        header = s2J(bu2s(jwt.header)),\n        thing = jwt.header + '.' + jwt.payload;\n    return tryPromise(async () => await algSign(header.alg, thing, secret));\n}\n\nexport const signJwt = jwtSign;\n\nexport async function jwtResign(jwtStr: string, secret: string, alg?: string): Promise<string> {\n    const jwt = jwtDecode(jwtStr, 'jwtResign');\n    if (!!alg) jwt.header.alg = alg;\n    jwt.signature = await jwtSign(jwt.toString(), secret);\n    return jwt.toString();\n}\n\nexport const resignJwt = jwtResign;\n\n/**\n * Used for testing only\n *\n * @hidden\n */\nexport async function cryptoType(): Promise<string> {\n    const crypto = webCrypto || await import(\"crypto\");\n    return crypto ? crypto['type'] || 'crypto-node' : 'undefined';\n}\n\nexport default {\n    ILLEGAL_ARGUMENT,\n    UNSUPPORTED_ALGORITHM,\n    resignJwt,\n    signJwt,\n    splitJwt,\n    verifyJwt,\n    AB2hex,\n    AB2s,\n    J2s,\n    algHSsign,\n    algHSverify,\n    algRSsign,\n    algRSverify,\n    algSign,\n    algVerify,\n    asn12jwk,\n    b2bu,\n    b2s,\n    bu2b,\n    bu2s,\n    cleanZeros,\n    createHmac,\n    createSign,\n    createVerify,\n    hex2AB,\n    isGzip,\n    jwtDecode,\n    jwtResign,\n    jwtSign,\n    jwtSplit,\n    jwtVerify,\n    num2hex,\n    pem2asn1,\n    pem2jwk,\n    s2AB,\n    s2J,\n    s2b,\n    s2bu,\n    s2pem,\n    s2zbu,\n    tryPromise,\n    unzip,\n    zbu2s,\n    zip,\n};\n"],"names":["pako"],"mappings":"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"}