{"version":3,"file":"jwt-js-decode.es6.js","sources":["../src/int10.ts","../src/util.ts","../src/asn1.ts","../src/jwt-js-decode.ts"],"sourcesContent":["const max = 10000000000000; // biggest 10^n integer that can still fit 2^53 when multiplied by 256\n\nexport default class Int10 {\n    buf: any[];\n\n    constructor(value?) {\n        this.buf = [+value || 0];\n    }\n\n    mulAdd(m, c) {\n        // assert(m <= 256)\n        const b = this.buf,\n            l = b.length;\n        let i, t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] * m + c;\n            if (t < max) c = 0;\n            else {\n                c = 0 | (t / max);\n                t -= c * max;\n            }\n            b[i] = t;\n        }\n        if (c > 0) b[i] = c;\n    }\n\n    sub(c) {\n        // assert(m <= 256)\n        const b = this.buf,\n            l = b.length;\n        let i, t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] - c;\n            if (t < 0) {\n                t += max;\n                c = 1;\n            } else c = 0;\n            b[i] = t;\n        }\n        while (b[b.length - 1] === 0) b.pop();\n    }\n\n    toString(base?: number) {\n        if ((base || 10) != 10) throw 'only base 10 is supported';\n        const b = this.buf;\n        let s = b[b.length - 1].toString();\n        for (let i = b.length - 2; i >= 0; --i) s += (max + b[i]).toString().substring(1);\n        return s;\n    }\n\n    valueOf() {\n        const b = this.buf;\n        let v = 0;\n        for (let i = b.length - 1; i >= 0; --i) v = v * max + b[i];\n        return v;\n    }\n\n    simplify() {\n        const b = this.buf;\n        return b.length == 1 ? b[0] : this;\n    }\n}\n\nexport { Int10 };\n","export const UNSUPPORTED_ALGORITHM =\n    'Unsupported algorithm name specified! Supported algorithms: \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\" and \"none\".';\nexport const ILLEGAL_ARGUMENT = 'Illegal argument specified!';\nexport const CRYPTO_NOT_FOUND = \"Could not find 'crypto'.\";\nexport const PAKO_NOT_FOUND = \"Could not find 'pako'.\";\nexport const UNSUPPORTED_ZIP_TYPE = 'Unsupported zip type.';\n\nexport function generateErrorMessage(value, callee, argumentName = 'argument', defaultType = 'string') {\n    let message = `Invalid argument passed to ${callee}.`;\n    if (typeof value !== defaultType) {\n        message += ` Expected type '${defaultType}', received '${typeof value}'.`;\n    } else if (!value) {\n        message += ` Provided ${argumentName} is empty.`;\n    } else if (argumentName !== 'argument') {\n        message += ` Provided ${argumentName} is invalid.`;\n    }\n    return message;\n}\n\nexport function num2hex(memo: string, i: number): string {\n    return memo + ('0' + i.toString(16)).slice(-2);\n}\n\n// clean leading zeros\nexport function cleanZeros(b) {\n    return b[0] === 0 ? cleanZeros(b.slice(1)) : b;\n}\n\nexport function hex2AB(hex: string): ArrayBuffer | Uint8Array {\n    if (!hex) throw new Error(ILLEGAL_ARGUMENT);\n    const match = hex.match(/[0-9A-F]{2}/gi);\n    if (!match) throw new Error(ILLEGAL_ARGUMENT);\n    return new Uint8Array(match.map((i) => parseInt(i, 16)));\n}\n\nexport function AB2hex(buff: ArrayBuffer | Uint8Array): string {\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    return (buff as Uint8Array).reduce(num2hex, '');\n}\n","import { Int10 } from './int10';\nimport { cleanZeros, hex2AB } from './util';\n\nconst ellipsis = '\\u2026',\n    reTimeS =\n        /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/,\n    reTimeL =\n        /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\n\nfunction stringCut(str, len) {\n    if (str.length > len) str = str.substring(0, len) + ellipsis;\n    return str;\n}\n\nexport class Stream {\n    enc: any;\n    pos: any;\n\n    constructor(enc, pos = 0) {\n        if (enc instanceof Stream) {\n            this.enc = enc.enc;\n            this.pos = enc.pos;\n        } else {\n            this.enc = enc;\n            this.pos = pos;\n        }\n    }\n\n    get(pos) {\n        if (pos === undefined) pos = this.pos++;\n        if (pos >= this.enc.length) throw 'Requesting byte offset ' + pos + ' on a stream of length ' + this.enc.length;\n        return typeof this.enc == 'string' ? this.enc.charCodeAt(pos) : this.enc[pos];\n    }\n\n    hexDigits = '0123456789ABCDEF';\n\n    hexByte(b) {\n        return this.hexDigits.charAt((b >> 4) & 0xf) + this.hexDigits.charAt(b & 0xf);\n    }\n\n    hexDump(start, end, raw) {\n        let s = '';\n        for (let i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n            if (raw !== true)\n                switch (i & 0xf) {\n                    case 0x7:\n                        s += '  ';\n                        break;\n                    case 0xf:\n                        s += '\\n';\n                        break;\n                    default:\n                        s += ' ';\n                }\n        }\n        return s;\n    }\n\n    isASCII(start, end) {\n        for (let i = start; i < end; ++i) {\n            const c = this.get(i);\n            if (c < 32 || c > 176) return false;\n        }\n        return true;\n    }\n\n    parseStringISO(start, end) {\n        let s = '';\n        for (let i = start; i < end; ++i) s += String.fromCharCode(this.get(i));\n        return s;\n    }\n\n    parseStringUTF(start, end) {\n        let s = '';\n        for (let i = start; i < end; ) {\n            const c = this.get(i++);\n            if (c < 128) s += String.fromCharCode(c);\n            else if (c > 191 && c < 224) s += String.fromCharCode(((c & 0x1f) << 6) | (this.get(i++) & 0x3f));\n            else s += String.fromCharCode(((c & 0x0f) << 12) | ((this.get(i++) & 0x3f) << 6) | (this.get(i++) & 0x3f));\n        }\n        return s;\n    }\n\n    parseStringBMP(start, end) {\n        let str = '',\n            hi,\n            lo;\n        for (let i = start; i < end; ) {\n            hi = this.get(i++);\n            lo = this.get(i++);\n            str += String.fromCharCode((hi << 8) | lo);\n        }\n        return str;\n    }\n\n    parseTime(start, end, shortYear) {\n        let s = this.parseStringISO(start, end);\n        const m = (shortYear ? reTimeS : reTimeL).exec(s);\n        if (!m) return 'Unrecognized time: ' + s;\n        if (shortYear) {\n            const t = +m[1],\n                y = t < 70 ? 2000 : 1900;\n            m[1] = y + '';\n        }\n        s = m[1] + '-' + m[2] + '-' + m[3] + ' ' + m[4];\n        if (m[5]) {\n            s += ':' + m[5];\n            if (m[6]) {\n                s += ':' + m[6];\n                if (m[7]) s += '.' + m[7];\n            }\n        }\n        if (m[8]) {\n            s += ' UTC';\n            if (m[8] != 'Z') {\n                s += m[8];\n                if (m[9]) s += ':' + m[9];\n            }\n        }\n        return s;\n    }\n\n    parseInteger(start, end) {\n        let v = this.get(start),\n            len,\n            s = '';\n        const neg = v > 127,\n            pad = neg ? 255 : 0;\n        while (v == pad && ++start < end) v = this.get(start);\n        len = end - start;\n        if (len === 0) return neg ? -1 : 0;\n        if (len > 4) {\n            let t = +v;\n            len <<= 3;\n            while (((t ^ pad) & 0x80) === 0) {\n                t <<= 1;\n                --len;\n            }\n            s = '(' + len + ' bit)\\n';\n        }\n        if (neg) v = v - 256;\n        const n = new Int10(v);\n        for (let i = start + 1; i < end; ++i) n.mulAdd(256, this.get(i));\n        return s + n.toString();\n    }\n\n    parseBitString(start, end, maxLength) {\n        const unusedBit = this.get(start),\n            lenBit = ((end - start - 1) << 3) - unusedBit,\n            intro = '(' + lenBit + ' bit)\\n';\n        let s = '';\n        for (let i = start + 1; i < end; ++i) {\n            const b = this.get(i),\n                skip = i == end - 1 ? unusedBit : 0;\n            for (let j = 7; j >= skip; --j) s += (b >> j) & 1 ? '1' : '0';\n            if (s.length > maxLength) return intro + stringCut(s, maxLength);\n        }\n        return intro + s;\n    }\n\n    parseOctetString(start, end, maxLength) {\n        if (this.isASCII(start, end)) return stringCut(this.parseStringISO(start, end), maxLength);\n        const len = end - start;\n        let s = '(' + len + ' byte)\\n';\n        maxLength /= 2;\n        if (len > maxLength) end = start + maxLength;\n        for (let i = start; i < end; ++i) s += this.hexByte(this.get(i));\n        if (len > maxLength) s += ellipsis;\n        return s;\n    }\n\n    parseOID(start, end, maxLength) {\n        let s = '',\n            n = new Int10(),\n            bits = 0;\n        for (let i = start; i < end; ++i) {\n            const v = this.get(i);\n            n.mulAdd(128, v & 0x7f);\n            bits += 7;\n            if (!(v & 0x80)) {\n                if (s === '') {\n                    n = n.simplify();\n                    if (n instanceof Int10) {\n                        n.sub(80);\n                        s = '2.' + n.toString();\n                    } else {\n                        const m = n < 80 ? (n < 40 ? 0 : 1) : 2;\n                        s = m + '.' + (n - m * 40);\n                    }\n                } else s += '.' + n.toString();\n                if (s.length > maxLength) return stringCut(s, maxLength);\n                n = new Int10();\n                bits = 0;\n            }\n        }\n        if (bits > 0) s += '.incomplete';\n        return s;\n    }\n}\n\nexport class ASN1 {\n    stream: any;\n    header: any;\n    length: any;\n    tag: any;\n    sub: any;\n\n    constructor(stream, header, length, tag, sub) {\n        if (!(tag instanceof ASN1Tag)) throw 'Invalid tag value.';\n        this.stream = stream;\n        this.header = header;\n        this.length = length;\n        this.tag = tag;\n        this.sub = sub;\n    }\n\n    typeName() {\n        switch (this.tag.tagClass) {\n            case 0:\n                switch (this.tag.tagNumber) {\n                    case 0x00:\n                        return 'EOC';\n                    case 0x01:\n                        return 'BOOLEAN';\n                    case 0x02:\n                        return 'INTEGER';\n                    case 0x03:\n                        return 'BIT_STRING';\n                    case 0x04:\n                        return 'OCTET_STRING';\n                    case 0x05:\n                        return 'NULL';\n                    case 0x06:\n                        return 'OBJECT_IDENTIFIER';\n                    case 0x07:\n                        return 'ObjectDescriptor';\n                    case 0x08:\n                        return 'EXTERNAL';\n                    case 0x09:\n                        return 'REAL';\n                    case 0x0a:\n                        return 'ENUMERATED';\n                    case 0x0b:\n                        return 'EMBEDDED_PDV';\n                    case 0x0c:\n                        return 'UTF8String';\n                    case 0x10:\n                        return 'SEQUENCE';\n                    case 0x11:\n                        return 'SET';\n                    case 0x12:\n                        return 'NumericString';\n                    case 0x13:\n                        return 'PrintableString';\n                    case 0x14:\n                        return 'TeletexString';\n                    case 0x15:\n                        return 'VideotexString';\n                    case 0x16:\n                        return 'IA5String';\n                    case 0x17:\n                        return 'UTCTime';\n                    case 0x18:\n                        return 'GeneralizedTime';\n                    case 0x19:\n                        return 'GraphicString';\n                    case 0x1a:\n                        return 'VisibleString';\n                    case 0x1b:\n                        return 'GeneralString';\n                    case 0x1c:\n                        return 'UniversalString';\n                    case 0x1e:\n                        return 'BMPString';\n                }\n                return 'Universal_' + this.tag.tagNumber.toString();\n            case 1:\n                return 'Application_' + this.tag.tagNumber.toString();\n            case 2:\n                return '[' + this.tag.tagNumber.toString() + ']';\n            case 3:\n                return 'Private_' + this.tag.tagNumber.toString();\n        }\n    }\n\n    content(maxLength?) {\n        if (this.tag === undefined) return null;\n        if (maxLength === undefined) maxLength = Infinity;\n        const content = this.posContent(),\n            len = Math.abs(this.length);\n        if (!this.tag.isUniversal()) {\n            if (this.sub !== null) return '(' + this.sub.length + ' elem)';\n            return this.stream.parseOctetString(content, content + len, maxLength);\n        }\n        switch (this.tag.tagNumber) {\n            case 0x01:\n                return this.stream.get(content) === 0 ? 'false' : 'true';\n            case 0x02:\n                return this.stream.parseInteger(content, content + len);\n            case 0x03:\n                return this.sub\n                    ? '(' + this.sub.length + ' elem)'\n                    : this.stream.parseBitString(content, content + len, maxLength);\n            case 0x04:\n                return this.sub\n                    ? '(' + this.sub.length + ' elem)'\n                    : this.stream.parseOctetString(content, content + len, maxLength);\n\n            case 0x06:\n                return this.stream.parseOID(content, content + len, maxLength);\n\n            case 0x10:\n            case 0x11:\n                if (this.sub !== null) return '(' + this.sub.length + ' elem)';\n                else return '(no elem)';\n            case 0x0c:\n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x1a:\n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\n            case 0x1e:\n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\n            case 0x17:\n            case 0x18:\n                return this.stream.parseTime(content, content + len, this.tag.tagNumber == 0x17);\n        }\n        return null;\n    }\n\n    toString() {\n        return (\n            this.typeName() +\n            '@' +\n            this.stream.pos +\n            '[header:' +\n            this.header +\n            ',length:' +\n            this.length +\n            ',sub:' +\n            (this.sub === null ? 'null' : this.sub.length) +\n            ']'\n        );\n    }\n\n    posStart() {\n        return this.stream.pos;\n    }\n\n    posContent() {\n        return this.stream.pos + this.header;\n    }\n\n    posEnd() {\n        return this.stream.pos + this.header + Math.abs(this.length);\n    }\n\n    toHexString() {\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\n    }\n\n    getHex() {\n        return this.stream.hexDump(this.posContent(), this.posEnd(), true);\n    }\n\n    getAB(clean = true) {\n        return clean ? cleanZeros(hex2AB(this.getHex())) : hex2AB(this.getHex());\n    }\n\n    static decodeLength(stream) {\n        let buf = stream.get();\n        const len = buf & 0x7f;\n        if (len == buf) return len;\n        if (len > 6) throw 'Length over 48 bits not supported at position ' + (stream.pos - 1);\n        if (len === 0) return null;\n        buf = 0;\n        for (let i = 0; i < len; ++i) buf = buf * 256 + stream.get();\n        return buf;\n    }\n\n    static decode(stream) {\n        if (!(stream instanceof Stream)) stream = new Stream(stream, 0);\n        const streamStart = new Stream(stream);\n        const tag = new ASN1Tag(stream);\n        let len = ASN1.decodeLength(stream),\n            sub: any = null;\n        const start = stream.pos;\n        const header = start - streamStart.pos;\n        const getSub = function () {\n            sub = [];\n            if (len !== null) {\n                const end = start + len;\n                while (stream.pos < end) sub[sub.length] = ASN1.decode(stream);\n                if (stream.pos != end) throw 'Content size is not correct for container starting at offset ' + start;\n            } else {\n                try {\n                    for (;;) {\n                        const s = ASN1.decode(stream);\n                        if (s.tag.isEOC()) break;\n                        sub[sub.length] = s;\n                    }\n                    len = start - stream.pos;\n                } catch (e) {\n                    throw 'Exception while decoding undefined length content: ' + e;\n                }\n            }\n        };\n        if (tag.tagConstructed) {\n            getSub();\n        } else if (tag.isUniversal() && (tag.tagNumber == 0x03 || tag.tagNumber == 0x04)) {\n            try {\n                if (tag.tagNumber == 0x03)\n                    if (stream.get() != 0) throw 'BIT STRINGs with unused bits cannot encapsulate.';\n                getSub();\n                for (let i = 0; i < sub.length; ++i)\n                    if (sub[i].tag.isEOC()) throw 'EOC is not supposed to be actual content.';\n            } catch (e) {\n                sub = null;\n            }\n        }\n        if (sub === null) {\n            if (len === null) throw \"We can't skip over an invalid tag with undefined length at offset \" + start;\n            stream.pos = start + Math.abs(len);\n        }\n        return new ASN1(streamStart, header, len, tag, sub);\n    }\n}\n\nclass ASN1Tag {\n    tagClass: any;\n    tagConstructed: any;\n    tagNumber: any;\n\n    constructor(stream) {\n        let buf = stream.get();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = (buf & 0x20) !== 0;\n        this.tagNumber = buf & 0x1f;\n        if (this.tagNumber == 0x1f) {\n            const n = new Int10();\n            do {\n                buf = stream.get();\n                n.mulAdd(128, buf & 0x7f);\n            } while (buf & 0x80);\n            this.tagNumber = n.simplify();\n        }\n    }\n\n    isUniversal() {\n        return this.tagClass === 0x00;\n    }\n\n    isEOC() {\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\n    }\n}\n","import pako from 'pako';\n/* Issue3: Works, but ASN1 adds 14kb of code to this lib\nimport ASN1 from \"asn1js\";\n*/\n// Simplified/improved version of\n// \"asn1js\": \"git+https://github.com/lapo-luchini/asn1js.git\",\nimport { ASN1 } from './asn1';\nimport {\n    AB2hex,\n    cleanZeros,\n    CRYPTO_NOT_FOUND,\n    generateErrorMessage,\n    hex2AB,\n    ILLEGAL_ARGUMENT,\n    num2hex,\n    PAKO_NOT_FOUND,\n    UNSUPPORTED_ALGORITHM,\n    UNSUPPORTED_ZIP_TYPE,\n} from './util';\n/*\n//crypto-browserify:\nimport { createHmac, createSign, createVerify } from \"crypto-browserify\";\n//or browserify hmac/sign\nimport { createHmac } from \"create-hmac\";\nimport { createSign, createVerify } from \"browserify-sign\";\n\n//node.js\nimport { createHmac, createSign, createVerify } from \"crypto\";\n*/\nexport const webCrypto = typeof window === 'object' && (window.crypto || window['msCrypto']);\nexport const webCryptoSubtle = webCrypto && (webCrypto.subtle || webCrypto['webkitSubtle'] || webCrypto['Subtle']);\n\n/**\n * Class for creating a JwtSplit object with three parts of JWT Token as strings\n *\n * @class  JwtSplit\n */\nexport class JwtSplit {\n    /**\n     * Header (first) part of JWT Token\n     *\n     * @name  header\n     * @type {string}\n     */\n    public header: string = '';\n\n    /**\n     * Payload (second) part of JWT Token\n     *\n     * @name  payload\n     * @type {string}\n     */\n    public payload: string = '';\n\n    /**\n     * Signature (third) part of JWT Token\n     *\n     * @name  signature\n     * @type {string}\n     */\n    public signature: string = '';\n\n    constructor(str: string, callee = 'JwtSplit') {\n        if (typeof str !== 'string') {\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\n        }\n        this.fromString(str, callee);\n    }\n\n    public fromString(str: string, callee = 'JwtSplit.fromString') {\n        const jwtArr = str.split('.');\n        if (jwtArr.length !== 3) {\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\n        }\n\n        const [header, payload, signature] = jwtArr;\n        this.header = header;\n        this.payload = payload;\n        this.signature = signature;\n    }\n\n    public toString(): string {\n        return this.header + '.' + this.payload + '.' + this.signature;\n    }\n}\n\n/** JwtPart interface basically object type definition used as a placeholder */\ninterface JwtPart {\n    [key: string]: any;\n}\n\n/**\n * Class for creating a JwtDecode object with three parts of JWT Token, header and payload decoded and parsed, signature in initial form\n *\n * @class  JwtDecode\n */\nexport class JwtDecode {\n    /**\n     * Header (first) part of JWT Token\n     *\n     * @name  header\n     * @type {JwtPart}\n     */\n    public header: JwtPart = {};\n\n    /**\n     * Payload (second) part of JWT Token\n     *\n     * @name  payload\n     * @type {JwtPart}\n     */\n    public payload: JwtPart = {};\n\n    /**\n     * Signature (third) part of JWT Token\n     *\n     * @name  signature\n     * @type {string}\n     */\n    public signature: string = '';\n\n    constructor(str: string, callee = 'JwtDecode') {\n        if (typeof str !== 'string') {\n            throw new Error(generateErrorMessage(str, callee, 'JWT string'));\n        }\n        this.fromString(str, callee);\n    }\n\n    public isGzip(): boolean {\n        return isGzip(this.header);\n    }\n\n    public fromString(str, callee = 'JwtDecode.fromString'): void {\n        const jwtObj: JwtSplit = jwtSplit(str, callee);\n        if (jwtObj) {\n            this.header = jwtObj.header ? s2J(bu2s(jwtObj.header)) : {};\n            this.payload = jwtObj.payload\n                ? this.isGzip()\n                    ? s2J(zbu2s(jwtObj.payload))\n                    : s2J(bu2s(jwtObj.payload))\n                : {};\n            this.signature = jwtObj.signature || '';\n        }\n    }\n\n    public toString(): string {\n        return (\n            s2bu(J2s(this.header)) +\n            '.' +\n            (this.isGzip() ? s2zbu(J2s(this.payload)) : s2bu(J2s(this.payload))) +\n            '.' +\n            this.signature\n        );\n    }\n}\n\n/**\n * Try running function and replace it's response as Promise.resolve/reject\n *\n * @param {function} fn - fn to call in for response\n *\n * @returns {Promise<any>} resulting Promise\n */\nexport function tryPromise(fn) {\n    try {\n        return Promise.resolve(fn());\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\n/**\n * Converts string to JSON object\n *\n * @param {string} str - data string to convert\n *\n * @returns {object} resulting object\n */\nexport function s2J(str: string): any {\n    return JSON.parse(str);\n}\n\n/**\n * Converts JSON object to string\n *\n * @param {object} obj - JSON object to convert\n *\n * @returns {string} resulting string\n */\nexport function J2s(obj: any): string {\n    return JSON.stringify(obj);\n}\n\n/**\n * Converts string to base64 string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} decoded data string\n */\nexport function b2s(str: string): string {\n    if (typeof Buffer !== 'undefined') {\n        return textDecode(Buffer.from(str, 'base64'));\n    } else if (typeof atob !== 'undefined') {\n        return textDecode(atob(str));\n    } else throw new Error(ILLEGAL_ARGUMENT);\n}\n\n/**\n * Converts base64 string to base64url string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64url string\n */\nexport function b2bu(str: string): string {\n    if (typeof str !== 'string' || str.length % 4 !== 0) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\n/**\n *\n * Converts base64url string to base64 string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64 string\n */\nexport function bu2b(str: string): string {\n    if (typeof str !== 'string' || str.length % 4 === 1) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    for (; str.length % 4 !== 0; ) {\n        str += '=';\n    }\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n}\n\n/**\n * Converts base64url string to string\n *\n * @param {string} str - base64url string to convert\n *\n * @returns {string} decoded data string\n */\nexport function bu2s(str: string): string {\n    return b2s(bu2b(str));\n}\n\n/**\n * Check if header has zip property (and it is equal to 'GZIP', ignorecase)\n *\n * @param {string} header - object to check\n *\n * @returns {boolean} does it have gzip in zip property\n */\nexport function isGzip(header: JwtPart): boolean {\n    return typeof header === 'object' && typeof header.zip === 'string' && header.zip.toUpperCase() === 'GZIP';\n}\n\n/**\n * Decode jwtToken header and payload\n *\n * @param {string} str - data string to decode\n *\n * @returns {JwtDecode} object with decoded header and body, and signature untouched\n */\nexport function jwtDecode(str: string, callee = 'jwtDecode'): JwtDecode {\n    return new JwtDecode(str, callee);\n}\n\nexport const decodeJwt = jwtDecode;\nexport const decode = jwtDecode;\n\n/**\n * Split jwtToken into object {header, payload, signature}\n *\n * @param {string} str - data string to split\n *\n * @returns {JwtSplit} jwt split object of three strings\n */\nexport function jwtSplit(str: string, callee = 'jwtSplit'): JwtSplit {\n    return new JwtSplit(str, callee);\n}\n\nexport const splitJwt = jwtSplit;\nexport const split = jwtSplit;\n\n/**\n * Converts base64 string to string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64 string\n */\nexport function s2b(str: string): string {\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(textEncode(str)).toString('base64');\n    } else if (typeof btoa !== 'undefined') {\n        return btoa(AB2s(textEncode(str)));\n    } else throw new Error(ILLEGAL_ARGUMENT);\n}\n\n/**\n * Converts string to base64url string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} base64url string\n */\nexport function s2bu(str: string): string {\n    return b2bu(s2b(str));\n}\n\n/**\n * Zip and encode data string to base64url string\n *\n * @param {string} str - data string to encode\n * @param {string} type - type of zip type: \"zlib\", \"gzip\". default: \"zlib\"\n *\n * @returns {string} base64url string\n */\nexport function s2zbu(str: string, type = 'zlib'): string {\n    return s2bu(zip(str, type));\n}\n\n/**\n * Converts from zip data string to string\n *\n * @param {string} str - data string to convert\n *\n * @returns {string} decoded data string\n */\nexport function unzip(str: string): string {\n    if (typeof str !== 'string') {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    if (!!pako && (pako.inflate || pako.ungzip)) {\n        const buffer = s2U8A(str);\n        let inflated;\n        try {\n            inflated = pako.inflate(buffer, { raw: false });\n        } catch {\n            try {\n                inflated = pako.ungzip(buffer, { raw: false });\n            } catch {\n                throw new Error(UNSUPPORTED_ZIP_TYPE);\n            }\n        }\n\n        return AB2s(inflated);\n    } else {\n        throw new Error(PAKO_NOT_FOUND);\n    }\n}\n\n/**\n * Decode from base64url and unzip data string\n *\n * @param {string} str - data string to decode\n *\n * @returns {string} decoded data string\n */\nexport function zbu2s(str: string): string {\n    return textDecode(unzip(bu2s(str)));\n}\n\n/**\n * Converts string to zip data string\n *\n * @param {string} str - data string to convert\n * @param {string} type - type of zip type: \"zlib\", \"gzip\". default: \"zlib\"\n *\n * @returns {string} zip data string\n */\nexport function zip(str: string, type = 'zlib'): string {\n    if (typeof str !== 'string') {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    if (!!pako && (pako.deflate || pako.gzip)) {\n        let deflated;\n        if (type === 'gzip') {\n            deflated = pako.gzip(str, {\n                raw: false,\n            });\n        } else if (type === 'zlib') {\n            deflated = pako.deflate(str, {\n                raw: false,\n            });\n        } else throw new Error(UNSUPPORTED_ZIP_TYPE);\n        return AB2s(deflated);\n    } else {\n        throw new Error(PAKO_NOT_FOUND);\n    }\n}\n\n/**\n * Converts string to ArrayBuffer\n *\n * @param {string} str - data string to convert\n *\n * @returns {ArrayBuffer} charCode ArrayBuffer\n */\nexport function s2AB(str: string): ArrayBuffer {\n    const buff = new ArrayBuffer(str.length);\n    const view = new Uint8Array(buff);\n    for (let i = 0; i < str.length; i++) view[i] = str.charCodeAt(i);\n    return buff;\n}\n\n/**\n * Converts string to Uint8Array\n *\n * @param {string} str - data string to convert\n *\n * @returns {Uint8Array} charCode Uint8Array\n */\nexport function s2U8A(str: string): ArrayBuffer {\n    const buff = new ArrayBuffer(str.length);\n    const view = new Uint8Array(buff);\n    for (let i = 0; i < str.length; i++) view[i] = str.charCodeAt(i);\n    return view;\n}\n\n/**\n * Converts ArrayBuffer to string\n *\n * @param {ArrayBuffer | Uint8Array} buff - charCode ArrayBuffer to convert\n *\n * @returns {string} data string\n */\nexport function AB2s(buff: ArrayBuffer | Uint8Array): string {\n    if (!(buff instanceof Uint8Array)) buff = new Uint8Array(buff);\n    return String.fromCharCode(...Array.from(buff as Uint8Array));\n}\n\n/**\n * Async function inspired by createHmac in crypto (used WebCrypto Api supported by most browsers)\n *\n */\n\nexport async function createHmac(name: string, secret: string): Promise<any> {\n    if (webCryptoSubtle) {\n        const keyData = s2U8A(secret);\n        return await webCryptoSubtle\n            .importKey('raw', keyData, { name: 'HMAC', hash: { name: name } }, true, ['sign'])\n            .then((key) => {\n                return {\n                    update: async function (thing): Promise<ArrayBuffer> {\n                        return await webCryptoSubtle.sign('HMAC', key, s2U8A(thing));\n                    },\n                };\n            });\n    } else {\n        const crypto = await import('crypto');\n        return !!crypto && crypto.createHmac\n            ? Promise.resolve(crypto.createHmac(name.replace('SHA-', 'sha'), secret))\n            : Promise.reject(webCrypto);\n    }\n}\n\n/**\n * Algorithm HMAC sign generator\n *\n */\nexport function algHSsign(bits: number) {\n    /**\n     * Algorithm HMAC signer\n     *\n     */\n    return async function sign(thing: string, secret: string): Promise<string> {\n        const hmac = await createHmac('SHA-' + bits, secret);\n        if (webCryptoSubtle) {\n            if (!hmac) return Promise.reject(ILLEGAL_ARGUMENT);\n            return Promise.resolve(s2bu(AB2s(await hmac.update(thing))));\n        }\n        return Promise.resolve(b2bu(hmac.update(thing).digest('base64')));\n    };\n}\n\n/**\n * Algorithm HMAC verify generator\n *\n */\nexport function algHSverify(bits: number) {\n    /**\n     * Algorithm HMAC verifier\n     *\n     */\n    return async function verify(thing: string, signature: string, secret: string): Promise<boolean> {\n        return (await algHSsign(bits)(thing, secret)) === signature;\n    };\n}\n\nexport interface PEM {\n    body: ArrayBuffer | Uint8Array;\n    type: 'private' | 'public';\n}\n\nexport function s2pem(secret: string): PEM {\n    if (typeof secret !== 'string') {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    let type = 'public';\n\n    function ignore(line: string): boolean {\n        if (ignoreLinesPriv.some((ign) => line.toUpperCase().indexOf(ign) > -1)) {\n            type = 'private';\n            return false;\n        }\n        return !ignoreLinesPub.some((ign) => line.toUpperCase().indexOf(ign) > -1);\n    }\n\n    const lines = secret.split('\\n'),\n        ignoreLinesPriv = ['-BEGIN RSA PRIVATE KEY-', '-END RSA PRIVATE KEY-'],\n        ignoreLinesPub = ['-BEGIN RSA PUBLIC KEY-', '-BEGIN PUBLIC KEY-', '-END PUBLIC KEY-', '-END RSA PUBLIC KEY-'],\n        body = lines\n            .map((line) => line.trim())\n            .filter((line) => line.length && ignore(line))\n            .join('');\n    if (body.length) {\n        return { body: s2U8A(b2s(bu2b(body))), type: <'private' | 'public'>type };\n    } else {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n}\n\n/* Issue2: not universal does not work with structured PEM keys\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array, type: 'private' | 'public'): any {\n    if (!buff || !type) throw new Error(ILLEGAL_ARGUMENT);\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    let data = new DataView(buff.buffer);\n\n    let res = {};\n    let offset = {\n        private: buff[1] & 0x80 ? buff[1] - 0x80 + 5 : 7,\n        public: buff[1] & 0x80 ? buff[1] - 0x80 + 2 : 2,\n    }[type.toLowerCase()];\n\n    function read() {\n        if ((offset + 1) < buff.byteLength) {\n            let s = data.getUint8(offset + 1);\n            if (s & 0x80) {\n                let n = s - 0x80;\n                s = data[[\n                    'getUint8', 'getInt16'\n                ][n - 1]](offset + 2, false);\n                offset += n;\n            }\n            offset += 2;\n            let b = (<Uint8Array>buff).slice(offset, offset + s);\n            offset += s;\n            return cleanZeros(b);\n        }\n        return new Uint8Array();\n    }\n\n    res['modulus'] = read();\n    res['bits'] = (res['modulus'].length - 1) * 8 + Math.ceil(\n        Math.log(res['modulus'][0] + 1) / Math.log(2)\n    );\n    if (!res['bits']) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    res['publicExponent'] = parseInt(AB2hex(read()), 16);\n    if (type === 'private') {\n        res['privateExponent'] = read();\n        res['prime1'] = read();\n        res['prime2'] = read();\n        res['exponent1'] = read();\n        res['exponent2'] = read();\n        res['coefficient'] = read();\n    }\n    return res;\n}\n\nexport function asn12jwk(asn1: any, type: string, extra?: any): any {\n    const pemTypes = ['public', 'private'];\n    if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\n\n    type = ((typeof type === 'string') && type.toLowerCase())\n        || pemTypes[!!asn1.privateExponent ? 1 : 0];\n    if ((type === 'private' && !asn1.privateExponent)\n        || pemTypes.indexOf(type) < 0) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    let v = asn1.publicExponent;\n    const expSize = Math.ceil(Math.log(v) / Math.log(256));\n    const exp = new Uint8Array(expSize).map(function (el) {\n        el = v % 256;\n        v = Math.floor(v / 256);\n        return el\n    }).reverse();\n\n    let jwk = Object.assign({ kty: 'RSA' }, extra, {\n        n: s2bu(AB2s(asn1.modulus)),\n        e: s2bu(AB2s(exp)),\n    });\n\n    if (type === 'private') {\n        Object.assign(jwk, {\n            d: s2bu(AB2s(asn1.privateExponent)),\n            p: s2bu(AB2s(asn1.prime1)),\n            q: s2bu(AB2s(asn1.prime2)),\n            dp: s2bu(AB2s(asn1.exponent1)),\n            dq: s2bu(AB2s(asn1.exponent2)),\n            qi: s2bu(AB2s(asn1.coefficient))\n        });\n    }\n    return jwk;\n}\n*/\n\n/* Issue3: Works, but ASN1 adds 14kb of code to this lib\nASN1.prototype.getAB = function() {\n    return cleanZeros(hex2AB(this.getHex()));\n};\n\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array): any {\n    if (!buff) throw new Error(ILLEGAL_ARGUMENT);\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    let asn1 = ASN1.decode(buff), res = {};\n\n    // add different PEM key structures and use sub.structure for ordering\n    if (asn1.sub.length === 3) {\n        asn1 = asn1.sub[2].sub[0];\n    }\n    if (asn1.sub.length === 9) {\n        // Parse the private key.\n        res['modulus'] = asn1.sub[1].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[2].getHex(), 16); // int\n        res['privateExponent'] = asn1.sub[3].getAB(); // ArrayBuffer\n        res['prime1'] = asn1.sub[4].getAB(); // ArrayBuffer\n        res['prime2'] = asn1.sub[5].getAB(); // ArrayBuffer\n        res['exponent1'] = asn1.sub[6].getAB(); // ArrayBuffer\n        res['exponent2'] = asn1.sub[7].getAB(); // ArrayBuffer\n        res['coefficient'] = asn1.sub[8].getAB(); // ArrayBuffer\n\n    } else if (asn1.sub.length === 2) {\n        // Parse the public key.\n        asn1 = asn1.sub[1].sub[0];\n\n        res['modulus'] = asn1.sub[0].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[1].getHex(), 16); // int\n    }\n    return res;\n}\n*/\nexport class Asn1Tag {\n    tagClass: number = 0;\n    tagConstructed: boolean = false;\n    tagNumber: number = 0;\n\n    constructor(stream) {\n        const buf = stream.read();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = (buf & 0x20) !== 0;\n        this.tagNumber = buf & 0x1f;\n    }\n}\n\nexport function pem2asn1(buff: ArrayBuffer | Uint8Array): any {\n    if (!buff) throw new Error(ILLEGAL_ARGUMENT);\n\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\n    let asn1 = ASN1.decode(buff);\n    const res = {};\n\n    if (asn1.sub.length === 3) {\n        asn1 = asn1.sub[2].sub[0];\n    }\n    if (asn1.sub.length === 9) {\n        // Parse the private key.\n        res['modulus'] = asn1.sub[1].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[2].getHex(), 16); // int\n        res['privateExponent'] = asn1.sub[3].getAB(); // ArrayBuffer\n        res['prime1'] = asn1.sub[4].getAB(); // ArrayBuffer\n        res['prime2'] = asn1.sub[5].getAB(); // ArrayBuffer\n        res['exponent1'] = asn1.sub[6].getAB(); // ArrayBuffer\n        res['exponent2'] = asn1.sub[7].getAB(); // ArrayBuffer\n        res['coefficient'] = asn1.sub[8].getAB(); // ArrayBuffer\n    } else if (asn1.sub.length === 2) {\n        // Parse the public key.\n        asn1 = asn1.sub[1].sub[0];\n\n        res['modulus'] = asn1.sub[0].getAB(); // ArrayBuffer\n        res['publicExponent'] = parseInt(asn1.sub[1].getHex(), 16); // int\n    }\n\n    res['bits'] = (res['modulus'].length - 1) * 8 + Math.ceil(Math.log(res['modulus'][0] + 1) / Math.log(2));\n\n    if (!res['bits']) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n\n    return res;\n}\n\nexport function asn12jwk(asn1: any, type?: string, extra?: any): any {\n    const pemTypes = ['public', 'private'];\n    if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\n\n    type = (typeof type === 'string' && type.toLowerCase()) || pemTypes[!!asn1.privateExponent ? 1 : 0];\n\n    if (type === 'private' && !asn1.privateExponent) {\n        throw new Error(ILLEGAL_ARGUMENT);\n    }\n    let v = asn1.publicExponent;\n    const expSize = Math.ceil(Math.log(v) / Math.log(256));\n    const exp = new Uint8Array(expSize)\n        .map(function (el) {\n            el = v % 256;\n            v = Math.floor(v / 256);\n            return el;\n        })\n        .reverse();\n\n    const jwk = Object.assign({ kty: 'RSA' }, extra, {\n        n: s2bu(AB2s(asn1.modulus)),\n        e: s2bu(AB2s(exp)),\n    });\n\n    if (type === 'private') {\n        Object.assign(jwk, {\n            d: s2bu(AB2s(asn1.privateExponent)),\n            p: s2bu(AB2s(asn1.prime1)),\n            q: s2bu(AB2s(asn1.prime2)),\n            dp: s2bu(AB2s(asn1.exponent1)),\n            dq: s2bu(AB2s(asn1.exponent2)),\n            qi: s2bu(AB2s(asn1.coefficient)),\n        });\n    }\n    return jwk;\n}\n\nexport function pem2jwk(secret: string, type?: 'public' | 'private', extra?): Promise<any> {\n    return tryPromise(() => {\n        const pem = s2pem(secret);\n        return asn12jwk(pem2asn1(pem.body), type, extra);\n    });\n}\n\n/* Issue1: does not work with all versions of PEM keys...\nexport function parsePem(secret: string, concType?: \"public\" | \"private\", extra?): Promise<PEM> {\n    return tryPromise(() => {\n            const pem = s2pem(secret);\n            if (!concType) concType = pem.type;\n            if (concType !== pem.type) throw new Error(ILLEGAL_ARGUMENT);\n            return pem\n        })\n}\n*/\n\nexport async function createSign(name: string): Promise<any> {\n    if (webCryptoSubtle) {\n        return {\n            update: function (thing: string): any {\n                return {\n                    sign: async function (secret: string): Promise<any> {\n                        return await pem2jwk(secret, 'private', {\n                            key_ops: ['sign'],\n                            alg: name.replace('SHA-', 'RS'),\n                        }).then(async (keyData) => {\n                            return await webCryptoSubtle\n                                .importKey('jwk', keyData, { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } }, true, [\n                                    'sign',\n                                ])\n                                .then(async (key) => {\n                                    return await webCryptoSubtle\n                                        .sign({ name: 'RSASSA-PKCS1-v1_5', hash: { name: name } }, key, s2U8A(thing))\n                                        .then(AB2s)\n                                        .then(s2b);\n                                });\n                        });\n\n                        /* Issue1: does not work with all versions of PEM keys...\n                        return await parsePem(secret, 'private').then(async pem => {\n                            return await webCryptoSubtle.importKey(\n                                'pkcs8',\n                                pem.body,\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                true,\n                                ['sign']\n                            ).then(async key => {\n                                return await webCryptoSubtle.sign(\n                                    'RSASSA-PKCS1-v1_5',\n                                    key,\n                                    s2U8A(thing)\n                                ).then(AB2s).then(s2b)\n                            })\n                        })\n                        */\n                    },\n                };\n            },\n        };\n    } else {\n        const crypto = await import('crypto');\n        if (!!crypto && crypto.createSign) {\n            return crypto.createSign(name.replace('SHA-', 'RSA-SHA'));\n        } else {\n            throw new Error(CRYPTO_NOT_FOUND);\n        }\n    }\n}\n\nexport function algRSsign(bits: number) {\n    return async function sign(thing: string, privateKey: string): Promise<string> {\n        try {\n            const res = await createSign('SHA-' + bits);\n            return b2bu(await res.update(thing).sign(privateKey, 'base64'));\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    };\n}\n\nexport async function createVerify(name: string): Promise<any> {\n    if (webCryptoSubtle) {\n        return {\n            update: function (thing: string): any {\n                return {\n                    verify: async function (secret: string, signature: string): Promise<boolean> {\n                        return await pem2jwk(secret, 'public', {\n                            key_ops: ['verify'],\n                            alg: name.replace('SHA-', 'RS'),\n                        }).then(async ({ kty, n, e }) => {\n                            return await webCryptoSubtle\n                                .importKey(\n                                    'jwk',\n                                    { kty, n, e },\n                                    { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                    false,\n                                    ['verify'],\n                                )\n                                .then(async (key) => {\n                                    return await webCryptoSubtle.verify(\n                                        'RSASSA-PKCS1-v1_5',\n                                        key,\n                                        s2U8A(bu2s(signature)),\n                                        s2U8A(thing),\n                                    );\n                                });\n                        });\n                        /* Issue1: does not work with all versions of PEM keys...\n                        return await parsePem(secret, 'public').then(async pem => {\n                            return await webCryptoSubtle.importKey(\n                                'spki',\n                                pem.body,\n                                { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\n                                true,\n                                ['verify']\n                            ).then(async key => {\n                                return await webCryptoSubtle.verify(\n                                    'RSASSA-PKCS1-v1_5',\n                                    key,\n                                    s2U8A(bu2s(signature)),\n                                    s2U8A(thing)\n                                )\n                            })\n                        })*/\n                    },\n                };\n            },\n        };\n    } else {\n        const crypto = await import('crypto');\n        if (!!crypto && crypto.createVerify) {\n            return crypto.createVerify(name.replace('SHA-', 'RSA-SHA'));\n        } else {\n            throw new Error(CRYPTO_NOT_FOUND);\n        }\n    }\n}\n\nexport function algRSverify(bits: number) {\n    return async function verify(thing: string, signature: string, publicKey: string): Promise<boolean> {\n        try {\n            signature = bu2b(signature);\n            const rsaVerify = await createVerify('SHA-' + bits);\n            return await rsaVerify.update(thing).verify(publicKey, signature, 'base64');\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    };\n}\n\n/**\n * Universal algorithm verifier\n *\n */\nexport async function algVerify(algorithm: string, thing: string, signature: string, secret: string): Promise<boolean> {\n    if (typeof algorithm !== 'string' || algorithm.length < 4) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n    const algo = algorithm.toLowerCase();\n\n    if (algo === 'none') {\n        return signature === '';\n    }\n\n    const type = algo.slice(0, 2),\n        bits = parseInt(algo.slice(2));\n    if (isNaN(bits) || [256, 384, 512].indexOf(bits) < 0) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n\n    switch (type) {\n        case 'rs':\n            return await algRSverify(bits)(thing, signature, secret);\n        case 'hs':\n            return await algHSverify(bits)(thing, signature, secret);\n        default:\n            throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n}\n\n/**\n * Universal algorithm signer\n *\n */\nexport async function algSign(algorithm: string, thing: string, secret: string): Promise<string> {\n    if (typeof algorithm !== 'string' || algorithm.length < 4) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n    const algo = algorithm.toLowerCase();\n\n    if (algo === 'none') {\n        return '';\n    }\n\n    const type = algo.slice(0, 2),\n        bits = parseInt(algo.slice(2));\n    if (isNaN(bits) || [256, 384, 512].indexOf(bits) < 0) {\n        throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n\n    switch (type) {\n        case 'rs':\n            return await algRSsign(bits)(thing, secret);\n        case 'hs':\n            return await algHSsign(bits)(thing, secret);\n        default:\n            throw new Error(UNSUPPORTED_ALGORITHM);\n    }\n}\n\nexport async function jwtVerify(jwtStr: string, secret: string): Promise<boolean> {\n    const jwt = jwtSplit(jwtStr, 'jwtVerify'),\n        header = s2J(bu2s(jwt.header)),\n        thing = jwt.header + '.' + jwt.payload;\n    return tryPromise(() => algVerify(header.alg, thing, jwt.signature, secret));\n}\n\nexport const verifyJwt = jwtVerify;\nexport const verify = jwtVerify;\n\nexport function jwtSign(jwtStr: string, secret: string): Promise<string> {\n    const jwt = jwtSplit(jwtStr, 'jwtSign'),\n        header = s2J(bu2s(jwt.header)),\n        thing = jwt.header + '.' + jwt.payload;\n    return tryPromise(async () => await algSign(header.alg, thing, secret));\n}\n\nexport const signJwt = jwtSign;\nexport const sign = jwtSign;\n\nexport async function jwtResign(jwtStr: string, secret: string, alg?: string): Promise<string> {\n    const jwt = jwtDecode(jwtStr, 'jwtResign');\n    if (!!alg) jwt.header.alg = alg;\n    jwt.signature = await jwtSign(jwt.toString(), secret);\n    return jwt.toString();\n}\n\nexport const resignJwt = jwtResign;\nexport const resign = jwtResign;\n\n/**\n * Used for testing only\n *\n * @hidden\n */\nexport async function cryptoType(): Promise<string> {\n    const crypto = webCrypto || (await import('crypto'));\n    return crypto ? crypto['type'] || 'crypto-node' : 'undefined';\n}\n\nexport function notLatin1String(str): boolean {\n    return Array.prototype.some.apply(str, [(str) => str.charCodeAt(0) > 255]);\n}\n\nexport function textEncode(input: string) {\n    if (notLatin1String(input)) {\n        const encoder = getTextEncoder();\n        if (!!encoder) {\n            return encoder.encode(input);\n        }\n    }\n    return s2U8A(input);\n}\n\nexport function textDecode(input: string | Buffer) {\n    if (typeof input === 'string') {\n        try {\n            const decoder = getTextDecoder('utf8', { fatal: true });\n            if (!!decoder) {\n                return decoder.decode(s2U8A(input));\n            }\n        } catch {\n            /* empty */\n        }\n        return input;\n    }\n    try {\n        const decoder = getTextDecoder('utf8', { fatal: true });\n        if (!!decoder) {\n            return decoder.decode(input);\n        }\n    } catch {\n        /* empty */\n    }\n    return input.toString('binary');\n}\n\nexport function getTextEncoder(): TextEncoder | false {\n    if (typeof TextEncoder !== 'undefined') {\n        return new TextEncoder();\n    }\n    if (typeof require !== 'undefined') {\n        const encoder = require('util');\n        if (typeof encoder?.TextEncoder !== 'undefined') {\n            return new encoder.TextEncoder();\n        }\n    }\n    return false;\n}\n\nexport function getTextDecoder(...args): TextDecoder | false {\n    if (typeof TextDecoder !== 'undefined') {\n        return new TextDecoder(...args);\n    }\n    if (typeof require !== 'undefined') {\n        const decoder = require('util');\n        if (typeof decoder?.TextDecoder !== 'undefined') {\n            return new decoder.TextDecoder(...args);\n        }\n    }\n    return false;\n}\n\nexport default {\n    ILLEGAL_ARGUMENT,\n    UNSUPPORTED_ALGORITHM,\n    decode,\n    resign,\n    sign,\n    split,\n    verify,\n    decodeJwt,\n    resignJwt,\n    signJwt,\n    splitJwt,\n    verifyJwt,\n    AB2hex,\n    AB2s,\n    J2s,\n    algHSsign,\n    algHSverify,\n    algRSsign,\n    algRSverify,\n    algSign,\n    algVerify,\n    asn12jwk,\n    b2bu,\n    b2s,\n    bu2b,\n    bu2s,\n    cleanZeros,\n    createHmac,\n    createSign,\n    createVerify,\n    hex2AB,\n    isGzip,\n    jwtDecode,\n    jwtResign,\n    jwtSign,\n    jwtSplit,\n    jwtVerify,\n    num2hex,\n    pem2asn1,\n    pem2jwk,\n    s2AB,\n    s2J,\n    s2U8A,\n    s2b,\n    s2bu,\n    s2pem,\n    s2zbu,\n    tryPromise,\n    unzip,\n    zbu2s,\n    zip,\n    notLatin1String,\n    textEncode,\n    textDecode,\n    getTextEncoder,\n    getTextDecoder,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,GAAG,GAAG,cAAc,CAAC;AAEb,MAAO,KAAK,CAAA;AAGtB,IAAA,WAAA,CAAY,KAAM,EAAA;QACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;KAC5B;IAED,MAAM,CAAC,CAAC,EAAE,CAAC,EAAA;;QAEP,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EACd,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACjB,IAAI,CAAC,EAAE,CAAC,CAAC;QACT,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACpB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,GAAG,GAAG;gBAAE,CAAC,GAAG,CAAC,CAAC;AACd,iBAAA;gBACD,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AAClB,gBAAA,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;AAChB,aAAA;AACD,YAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACZ,SAAA;QACD,IAAI,CAAC,GAAG,CAAC;AAAE,YAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACvB;AAED,IAAA,GAAG,CAAC,CAAC,EAAA;;QAED,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EACd,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACjB,IAAI,CAAC,EAAE,CAAC,CAAC;QACT,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AACpB,YAAA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACb,IAAI,CAAC,GAAG,CAAC,EAAE;gBACP,CAAC,IAAI,GAAG,CAAC;gBACT,CAAC,GAAG,CAAC,CAAC;AACT,aAAA;;gBAAM,CAAC,GAAG,CAAC,CAAC;AACb,YAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACZ,SAAA;QACD,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC;YAAE,CAAC,CAAC,GAAG,EAAE,CAAC;KACzC;AAED,IAAA,QAAQ,CAAC,IAAa,EAAA;AAClB,QAAA,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,EAAE;AAAE,YAAA,MAAM,2BAA2B,CAAC;AAC1D,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;AACnB,QAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AACnC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;AAAE,YAAA,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAClF,QAAA,OAAO,CAAC,CAAC;KACZ;IAED,OAAO,GAAA;AACH,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QACnB,IAAI,CAAC,GAAG,CAAC,CAAC;AACV,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,QAAA,OAAO,CAAC,CAAC;KACZ;IAED,QAAQ,GAAA;AACJ,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;AACnB,QAAA,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;KACtC;AACJ;;AC7DM,MAAM,qBAAqB,GAC9B,8HAA8H,CAAC;AAC5H,MAAM,gBAAgB,GAAG,6BAA6B,CAAC;AACvD,MAAM,gBAAgB,GAAG,0BAA0B,CAAC;AACpD,MAAM,cAAc,GAAG,wBAAwB,CAAC;AAChD,MAAM,oBAAoB,GAAG,uBAAuB,CAAC;AAE5C,SAAA,oBAAoB,CAAC,KAAK,EAAE,MAAM,EAAE,YAAY,GAAG,UAAU,EAAE,WAAW,GAAG,QAAQ,EAAA;AACjG,IAAA,IAAI,OAAO,GAAG,CAA8B,2BAAA,EAAA,MAAM,GAAG,CAAC;AACtD,IAAA,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;AAC9B,QAAA,OAAO,IAAI,CAAmB,gBAAA,EAAA,WAAW,gBAAgB,OAAO,KAAK,IAAI,CAAC;AAC7E,KAAA;SAAM,IAAI,CAAC,KAAK,EAAE;AACf,QAAA,OAAO,IAAI,CAAA,UAAA,EAAa,YAAY,CAAA,UAAA,CAAY,CAAC;AACpD,KAAA;SAAM,IAAI,YAAY,KAAK,UAAU,EAAE;AACpC,QAAA,OAAO,IAAI,CAAA,UAAA,EAAa,YAAY,CAAA,YAAA,CAAc,CAAC;AACtD,KAAA;AACD,IAAA,OAAO,OAAO,CAAC;AACnB,CAAC;AAMD;AACM,SAAU,UAAU,CAAC,CAAC,EAAA;IACxB,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnD,CAAC;AAEK,SAAU,MAAM,CAAC,GAAW,EAAA;AAC9B,IAAA,IAAI,CAAC,GAAG;AAAE,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAC5C,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AACzC,IAAA,IAAI,CAAC,KAAK;AAAE,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAC9C,OAAO,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7D;;AC9BA,MAAM,QAAQ,GAAG,QAAQ,EACrB,OAAO,GACH,8IAA8I,EAClJ,OAAO,GACH,kJAAkJ,CAAC;AAE3J,SAAS,SAAS,CAAC,GAAG,EAAE,GAAG,EAAA;AACvB,IAAA,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG;QAAE,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,QAAQ,CAAC;AAC7D,IAAA,OAAO,GAAG,CAAC;AACf,CAAC;MAEY,MAAM,CAAA;AAIf,IAAA,WAAA,CAAY,GAAG,EAAE,GAAG,GAAG,CAAC,EAAA;QAgBxB,IAAS,CAAA,SAAA,GAAG,kBAAkB,CAAC;QAf3B,IAAI,GAAG,YAAY,MAAM,EAAE;AACvB,YAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AACnB,YAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AACtB,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,YAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AAClB,SAAA;KACJ;AAED,IAAA,GAAG,CAAC,GAAG,EAAA;QACH,IAAI,GAAG,KAAK,SAAS;AAAE,YAAA,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACxC,QAAA,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM;YAAE,MAAM,yBAAyB,GAAG,GAAG,GAAG,yBAAyB,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;QAChH,OAAO,OAAO,IAAI,CAAC,GAAG,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACjF;AAID,IAAA,OAAO,CAAC,CAAC,EAAA;QACL,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;KACjF;AAED,IAAA,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAA;QACnB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;AAC9B,YAAA,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,GAAG,KAAK,IAAI;gBACZ,QAAQ,CAAC,GAAG,GAAG;AACX,oBAAA,KAAK,GAAG;wBACJ,CAAC,IAAI,IAAI,CAAC;wBACV,MAAM;AACV,oBAAA,KAAK,GAAG;wBACJ,CAAC,IAAI,IAAI,CAAC;wBACV,MAAM;AACV,oBAAA;wBACI,CAAC,IAAI,GAAG,CAAC;AAChB,iBAAA;AACR,SAAA;AACD,QAAA,OAAO,CAAC,CAAC;KACZ;IAED,OAAO,CAAC,KAAK,EAAE,GAAG,EAAA;QACd,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtB,YAAA,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG;AAAE,gBAAA,OAAO,KAAK,CAAC;AACvC,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACf;IAED,cAAc,CAAC,KAAK,EAAE,GAAG,EAAA;QACrB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;AAAE,YAAA,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,QAAA,OAAO,CAAC,CAAC;KACZ;IAED,cAAc,CAAC,KAAK,EAAE,GAAG,EAAA;QACrB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,GAAI;YAC3B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,GAAG,GAAG;AAAE,gBAAA,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpC,iBAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG;gBAAE,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;;AAC7F,gBAAA,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAC9G,SAAA;AACD,QAAA,OAAO,CAAC,CAAC;KACZ;IAED,cAAc,CAAC,KAAK,EAAE,GAAG,EAAA;AACrB,QAAA,IAAI,GAAG,GAAG,EAAE,EACR,EAAE,EACF,EAAE,CAAC;QACP,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,GAAI;YAC3B,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACnB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,YAAA,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AAC9C,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;KACd;AAED,IAAA,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAA;QAC3B,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACxC,QAAA,MAAM,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAClD,QAAA,IAAI,CAAC,CAAC;YAAE,OAAO,qBAAqB,GAAG,CAAC,CAAC;AACzC,QAAA,IAAI,SAAS,EAAE;YACX,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EACX,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;AAC7B,YAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AACjB,SAAA;QACD,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,QAAA,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AACN,YAAA,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,YAAA,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AACN,gBAAA,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,CAAC,CAAC,CAAC;AAAE,oBAAA,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,aAAA;AACJ,SAAA;AACD,QAAA,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YACN,CAAC,IAAI,MAAM,CAAC;AACZ,YAAA,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;AACb,gBAAA,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,CAAC,CAAC,CAAC;AAAE,oBAAA,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,aAAA;AACJ,SAAA;AACD,QAAA,OAAO,CAAC,CAAC;KACZ;IAED,YAAY,CAAC,KAAK,EAAE,GAAG,EAAA;AACnB,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EACnB,GAAG,EACH,CAAC,GAAG,EAAE,CAAC;AACX,QAAA,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,EACf,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACxB,QAAA,OAAO,CAAC,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,GAAG;AAAE,YAAA,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACtD,QAAA,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC;QAClB,IAAI,GAAG,KAAK,CAAC;YAAE,OAAO,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,GAAG,GAAG,CAAC,EAAE;AACT,YAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,GAAG,KAAK,CAAC,CAAC;YACV,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,MAAM,CAAC,EAAE;gBAC7B,CAAC,KAAK,CAAC,CAAC;AACR,gBAAA,EAAE,GAAG,CAAC;AACT,aAAA;AACD,YAAA,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,SAAS,CAAC;AAC7B,SAAA;AACD,QAAA,IAAI,GAAG;AAAE,YAAA,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACrB,QAAA,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AACvB,QAAA,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;AAAE,YAAA,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,QAAA,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;KAC3B;AAED,IAAA,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAA;AAChC,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC7B,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,IAAI,SAAS,EAC7C,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,SAAS,CAAC;QACrC,IAAI,CAAC,GAAG,EAAE,CAAC;AACX,QAAA,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAClC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EACjB,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;AAAE,gBAAA,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;AAC9D,YAAA,IAAI,CAAC,CAAC,MAAM,GAAG,SAAS;gBAAE,OAAO,KAAK,GAAG,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACpE,SAAA;QACD,OAAO,KAAK,GAAG,CAAC,CAAC;KACpB;AAED,IAAA,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAA;AAClC,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AAAE,YAAA,OAAO,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;AAC3F,QAAA,MAAM,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,UAAU,CAAC;QAC/B,SAAS,IAAI,CAAC,CAAC;QACf,IAAI,GAAG,GAAG,SAAS;AAAE,YAAA,GAAG,GAAG,KAAK,GAAG,SAAS,CAAC;QAC7C,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;AAAE,YAAA,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,IAAI,GAAG,GAAG,SAAS;YAAE,CAAC,IAAI,QAAQ,CAAC;AACnC,QAAA,OAAO,CAAC,CAAC;KACZ;AAED,IAAA,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAA;AAC1B,QAAA,IAAI,CAAC,GAAG,EAAE,EACN,CAAC,GAAG,IAAI,KAAK,EAAE,EACf,IAAI,GAAG,CAAC,CAAC;QACb,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;YACxB,IAAI,IAAI,CAAC,CAAC;AACV,YAAA,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE;gBACb,IAAI,CAAC,KAAK,EAAE,EAAE;AACV,oBAAA,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;oBACjB,IAAI,CAAC,YAAY,KAAK,EAAE;AACpB,wBAAA,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACV,wBAAA,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC3B,qBAAA;AAAM,yBAAA;wBACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,wBAAA,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;AAC9B,qBAAA;AACJ,iBAAA;;AAAM,oBAAA,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC/B,gBAAA,IAAI,CAAC,CAAC,MAAM,GAAG,SAAS;AAAE,oBAAA,OAAO,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACzD,gBAAA,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC;gBAChB,IAAI,GAAG,CAAC,CAAC;AACZ,aAAA;AACJ,SAAA;QACD,IAAI,IAAI,GAAG,CAAC;YAAE,CAAC,IAAI,aAAa,CAAC;AACjC,QAAA,OAAO,CAAC,CAAC;KACZ;AACJ,CAAA;MAEY,IAAI,CAAA;IAOb,WAAY,CAAA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAA;AACxC,QAAA,IAAI,EAAE,GAAG,YAAY,OAAO,CAAC;AAAE,YAAA,MAAM,oBAAoB,CAAC;AAC1D,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAClB;IAED,QAAQ,GAAA;AACJ,QAAA,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ;AACrB,YAAA,KAAK,CAAC;AACF,gBAAA,QAAQ,IAAI,CAAC,GAAG,CAAC,SAAS;AACtB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,KAAK,CAAC;AACjB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,SAAS,CAAC;AACrB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,SAAS,CAAC;AACrB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,YAAY,CAAC;AACxB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,cAAc,CAAC;AAC1B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,MAAM,CAAC;AAClB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,mBAAmB,CAAC;AAC/B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,kBAAkB,CAAC;AAC9B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,UAAU,CAAC;AACtB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,MAAM,CAAC;AAClB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,YAAY,CAAC;AACxB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,cAAc,CAAC;AAC1B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,YAAY,CAAC;AACxB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,UAAU,CAAC;AACtB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,KAAK,CAAC;AACjB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,eAAe,CAAC;AAC3B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,iBAAiB,CAAC;AAC7B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,eAAe,CAAC;AAC3B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,gBAAgB,CAAC;AAC5B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,WAAW,CAAC;AACvB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,SAAS,CAAC;AACrB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,iBAAiB,CAAC;AAC7B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,eAAe,CAAC;AAC3B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,eAAe,CAAC;AAC3B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,eAAe,CAAC;AAC3B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,iBAAiB,CAAC;AAC7B,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,WAAW,CAAC;AAC1B,iBAAA;gBACD,OAAO,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AACxD,YAAA,KAAK,CAAC;gBACF,OAAO,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC1D,YAAA,KAAK,CAAC;AACF,gBAAA,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;AACrD,YAAA,KAAK,CAAC;gBACF,OAAO,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AACzD,SAAA;KACJ;AAED,IAAA,OAAO,CAAC,SAAU,EAAA;AACd,QAAA,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS;AAAE,YAAA,OAAO,IAAI,CAAC;QACxC,IAAI,SAAS,KAAK,SAAS;YAAE,SAAS,GAAG,QAAQ,CAAC;AAClD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,EAC7B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE;AACzB,YAAA,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI;gBAAE,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/D,YAAA,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,GAAG,GAAG,EAAE,SAAS,CAAC,CAAC;AAC1E,SAAA;AACD,QAAA,QAAQ,IAAI,CAAC,GAAG,CAAC,SAAS;AACtB,YAAA,KAAK,IAAI;AACL,gBAAA,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG,MAAM,CAAC;AAC7D,YAAA,KAAK,IAAI;AACL,gBAAA,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC;AAC5D,YAAA,KAAK,IAAI;gBACL,OAAO,IAAI,CAAC,GAAG;sBACT,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,QAAQ;AAClC,sBAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,GAAG,GAAG,EAAE,SAAS,CAAC,CAAC;AACxE,YAAA,KAAK,IAAI;gBACL,OAAO,IAAI,CAAC,GAAG;sBACT,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,QAAQ;AAClC,sBAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,GAAG,GAAG,EAAE,SAAS,CAAC,CAAC;AAE1E,YAAA,KAAK,IAAI;AACL,gBAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,GAAG,GAAG,EAAE,SAAS,CAAC,CAAC;AAEnE,YAAA,KAAK,IAAI,CAAC;AACV,YAAA,KAAK,IAAI;AACL,gBAAA,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI;oBAAE,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;;AAC1D,oBAAA,OAAO,WAAW,CAAC;AAC5B,YAAA,KAAK,IAAI;AACL,gBAAA,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,GAAG,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;AACpF,YAAA,KAAK,IAAI,CAAC;AACV,YAAA,KAAK,IAAI,CAAC;AACV,YAAA,KAAK,IAAI,CAAC;AACV,YAAA,KAAK,IAAI,CAAC;AACV,YAAA,KAAK,IAAI,CAAC;AACV,YAAA,KAAK,IAAI;AACL,gBAAA,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,GAAG,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;AACpF,YAAA,KAAK,IAAI;AACL,gBAAA,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,GAAG,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;AACpF,YAAA,KAAK,IAAI,CAAC;AACV,YAAA,KAAK,IAAI;gBACL,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC;AACxF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACf;IAED,QAAQ,GAAA;AACJ,QAAA,QACI,IAAI,CAAC,QAAQ,EAAE;YACf,GAAG;YACH,IAAI,CAAC,MAAM,CAAC,GAAG;YACf,UAAU;AACV,YAAA,IAAI,CAAC,MAAM;YACX,UAAU;AACV,YAAA,IAAI,CAAC,MAAM;YACX,OAAO;AACP,aAAC,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;AAC9C,YAAA,GAAG,EACL;KACL;IAED,QAAQ,GAAA;AACJ,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;KAC1B;IAED,UAAU,GAAA;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;KACxC;IAED,MAAM,GAAA;AACF,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChE;IAED,WAAW,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;KACpE;IAED,MAAM,GAAA;AACF,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;KACtE;IAED,KAAK,CAAC,KAAK,GAAG,IAAI,EAAA;QACd,OAAO,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;KAC5E;IAED,OAAO,YAAY,CAAC,MAAM,EAAA;AACtB,QAAA,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AACvB,QAAA,MAAM,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;QACvB,IAAI,GAAG,IAAI,GAAG;AAAE,YAAA,OAAO,GAAG,CAAC;QAC3B,IAAI,GAAG,GAAG,CAAC;YAAE,MAAM,gDAAgD,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACvF,IAAI,GAAG,KAAK,CAAC;AAAE,YAAA,OAAO,IAAI,CAAC;QAC3B,GAAG,GAAG,CAAC,CAAC;QACR,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;YAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AAC7D,QAAA,OAAO,GAAG,CAAC;KACd;IAED,OAAO,MAAM,CAAC,MAAM,EAAA;AAChB,QAAA,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC;YAAE,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAChE,QAAA,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AACvC,QAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;AAChC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAC/B,GAAG,GAAQ,IAAI,CAAC;AACpB,QAAA,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC;AACvC,QAAA,MAAM,MAAM,GAAG,YAAA;YACX,GAAG,GAAG,EAAE,CAAC;YACT,IAAI,GAAG,KAAK,IAAI,EAAE;AACd,gBAAA,MAAM,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;AACxB,gBAAA,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG;AAAE,oBAAA,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC/D,gBAAA,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG;oBAAE,MAAM,+DAA+D,GAAG,KAAK,CAAC;AACxG,aAAA;AAAM,iBAAA;gBACH,IAAI;oBACA,SAAS;wBACL,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9B,wBAAA,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE;4BAAE,MAAM;AACzB,wBAAA,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACvB,qBAAA;AACD,oBAAA,GAAG,GAAG,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;AAC5B,iBAAA;AAAC,gBAAA,OAAO,CAAC,EAAE;oBACR,MAAM,qDAAqD,GAAG,CAAC,CAAC;AACnE,iBAAA;AACJ,aAAA;AACL,SAAC,CAAC;QACF,IAAI,GAAG,CAAC,cAAc,EAAE;AACpB,YAAA,MAAM,EAAE,CAAC;AACZ,SAAA;AAAM,aAAA,IAAI,GAAG,CAAC,WAAW,EAAE,KAAK,GAAG,CAAC,SAAS,IAAI,IAAI,IAAI,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,EAAE;YAC9E,IAAI;AACA,gBAAA,IAAI,GAAG,CAAC,SAAS,IAAI,IAAI;AACrB,oBAAA,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC;AAAE,wBAAA,MAAM,kDAAkD,CAAC;AACpF,gBAAA,MAAM,EAAE,CAAC;AACT,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;oBAC/B,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE;AAAE,wBAAA,MAAM,2CAA2C,CAAC;AACjF,aAAA;AAAC,YAAA,OAAO,CAAC,EAAE;gBACR,GAAG,GAAG,IAAI,CAAC;AACd,aAAA;AACJ,SAAA;QACD,IAAI,GAAG,KAAK,IAAI,EAAE;YACd,IAAI,GAAG,KAAK,IAAI;gBAAE,MAAM,oEAAoE,GAAG,KAAK,CAAC;YACrG,MAAM,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtC,SAAA;AACD,QAAA,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KACvD;AACJ,CAAA;AAED,MAAM,OAAO,CAAA;AAKT,IAAA,WAAA,CAAY,MAAM,EAAA;AACd,QAAA,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;AAC5B,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;AACxB,YAAA,MAAM,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC;YACtB,GAAG;AACC,gBAAA,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;gBACnB,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC;aAC7B,QAAQ,GAAG,GAAG,IAAI,EAAE;AACrB,YAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjC,SAAA;KACJ;IAED,WAAW,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC;KACjC;IAED,KAAK,GAAA;QACD,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;KAC5D;AACJ;;ACxbD;;;;;;;;;AASE;AACW,MAAA,SAAS,GAAG,OAAO,MAAM,KAAK,QAAQ,KAAK,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE;MAChF,eAAe,GAAG,SAAS,KAAK,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;AAEnH;;;;AAIG;MACU,QAAQ,CAAA;AAyBjB,IAAA,WAAA,CAAY,GAAW,EAAE,MAAM,GAAG,UAAU,EAAA;AAxB5C;;;;;AAKG;QACI,IAAM,CAAA,MAAA,GAAW,EAAE,CAAC;AAE3B;;;;;AAKG;QACI,IAAO,CAAA,OAAA,GAAW,EAAE,CAAC;AAE5B;;;;;AAKG;QACI,IAAS,CAAA,SAAA,GAAW,EAAE,CAAC;AAG1B,QAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACzB,YAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;AACpE,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KAChC;AAEM,IAAA,UAAU,CAAC,GAAW,EAAE,MAAM,GAAG,qBAAqB,EAAA;QACzD,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC9B,QAAA,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AACrB,YAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;AACpE,SAAA;QAED,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,GAAG,MAAM,CAAC;AAC5C,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;IAEM,QAAQ,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;KAClE;AACJ,CAAA;AAOD;;;;AAIG;MACU,SAAS,CAAA;AAyBlB,IAAA,WAAA,CAAY,GAAW,EAAE,MAAM,GAAG,WAAW,EAAA;AAxB7C;;;;;AAKG;QACI,IAAM,CAAA,MAAA,GAAY,EAAE,CAAC;AAE5B;;;;;AAKG;QACI,IAAO,CAAA,OAAA,GAAY,EAAE,CAAC;AAE7B;;;;;AAKG;QACI,IAAS,CAAA,SAAA,GAAW,EAAE,CAAC;AAG1B,QAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACzB,YAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;AACpE,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KAChC;IAEM,MAAM,GAAA;AACT,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9B;AAEM,IAAA,UAAU,CAAC,GAAG,EAAE,MAAM,GAAG,sBAAsB,EAAA;QAClD,MAAM,MAAM,GAAa,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC/C,QAAA,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;AAC5D,YAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;AACzB,kBAAE,IAAI,CAAC,MAAM,EAAE;sBACT,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;sBAC1B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;kBAC7B,EAAE,CAAC;YACT,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;AAC3C,SAAA;KACJ;IAEM,QAAQ,GAAA;QACX,QACI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACtB,GAAG;AACH,aAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACpE,GAAG;YACH,IAAI,CAAC,SAAS,EAChB;KACL;AACJ,CAAA;AAED;;;;;;AAMG;AACG,SAAU,UAAU,CAAC,EAAE,EAAA;IACzB,IAAI;AACA,QAAA,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;AAChC,KAAA;AAAC,IAAA,OAAO,CAAC,EAAE;AACR,QAAA,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5B,KAAA;AACL,CAAC;AAED;;;;;;AAMG;AACG,SAAU,GAAG,CAAC,GAAW,EAAA;AAC3B,IAAA,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC;AAED;;;;;;AAMG;AACG,SAAU,GAAG,CAAC,GAAQ,EAAA;AACxB,IAAA,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAC/B,CAAC;AAED;;;;;;AAMG;AACG,SAAU,GAAG,CAAC,GAAW,EAAA;AAC3B,IAAA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QAC/B,OAAO,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;AACjD,KAAA;AAAM,SAAA,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;AACpC,QAAA,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,KAAA;;AAAM,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC7C,CAAC;AAED;;;;;;AAMG;AACG,SAAU,IAAI,CAAC,GAAW,EAAA;AAC5B,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;AACjD,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,KAAA;IAED,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACzE,CAAC;AAED;;;;;;;AAOG;AACG,SAAU,IAAI,CAAC,GAAW,EAAA;AAC5B,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;AACjD,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,KAAA;AAED,IAAA,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,GAAI;QAC3B,GAAG,IAAI,GAAG,CAAC;AACd,KAAA;AACD,IAAA,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACrD,CAAC;AAED;;;;;;AAMG;AACG,SAAU,IAAI,CAAC,GAAW,EAAA;AAC5B,IAAA,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1B,CAAC;AAED;;;;;;AAMG;AACG,SAAU,MAAM,CAAC,MAAe,EAAA;IAClC,OAAO,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;AAC/G,CAAC;AAED;;;;;;AAMG;SACa,SAAS,CAAC,GAAW,EAAE,MAAM,GAAG,WAAW,EAAA;AACvD,IAAA,OAAO,IAAI,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACtC,CAAC;AAEM,MAAM,SAAS,GAAG,UAAU;AAC5B,MAAM,MAAM,GAAG,UAAU;AAEhC;;;;;;AAMG;SACa,QAAQ,CAAC,GAAW,EAAE,MAAM,GAAG,UAAU,EAAA;AACrD,IAAA,OAAO,IAAI,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACrC,CAAC;AAEM,MAAM,QAAQ,GAAG,SAAS;AAC1B,MAAM,KAAK,GAAG,SAAS;AAE9B;;;;;;AAMG;AACG,SAAU,GAAG,CAAC,GAAW,EAAA;AAC3B,IAAA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AAC/B,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC1D,KAAA;AAAM,SAAA,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtC,KAAA;;AAAM,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC7C,CAAC;AAED;;;;;;AAMG;AACG,SAAU,IAAI,CAAC,GAAW,EAAA;AAC5B,IAAA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1B,CAAC;AAED;;;;;;;AAOG;SACa,KAAK,CAAC,GAAW,EAAE,IAAI,GAAG,MAAM,EAAA;IAC5C,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AAChC,CAAC;AAED;;;;;;AAMG;AACG,SAAU,KAAK,CAAC,GAAW,EAAA;AAC7B,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACzB,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,KAAA;AAED,IAAA,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AACzC,QAAA,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1B,QAAA,IAAI,QAAQ,CAAC;QACb,IAAI;AACA,YAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AACnD,SAAA;QAAC,OAAM,EAAA,EAAA;YACJ,IAAI;AACA,gBAAA,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AAClD,aAAA;YAAC,OAAM,EAAA,EAAA;AACJ,gBAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;AACzC,aAAA;AACJ,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzB,KAAA;AAAM,SAAA;AACH,QAAA,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;AACnC,KAAA;AACL,CAAC;AAED;;;;;;AAMG;AACG,SAAU,KAAK,CAAC,GAAW,EAAA;IAC7B,OAAO,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC;AAED;;;;;;;AAOG;SACa,GAAG,CAAC,GAAW,EAAE,IAAI,GAAG,MAAM,EAAA;AAC1C,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACzB,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,KAAA;AAED,IAAA,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;AACvC,QAAA,IAAI,QAAQ,CAAC;QACb,IAAI,IAAI,KAAK,MAAM,EAAE;AACjB,YAAA,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;AACtB,gBAAA,GAAG,EAAE,KAAK;AACb,aAAA,CAAC,CAAC;AACN,SAAA;aAAM,IAAI,IAAI,KAAK,MAAM,EAAE;AACxB,YAAA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;AACzB,gBAAA,GAAG,EAAE,KAAK;AACb,aAAA,CAAC,CAAC;AACN,SAAA;;AAAM,YAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;AAC7C,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzB,KAAA;AAAM,SAAA;AACH,QAAA,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;AACnC,KAAA;AACL,CAAC;AAED;;;;;;AAMG;AACG,SAAU,IAAI,CAAC,GAAW,EAAA;IAC5B,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACzC,IAAA,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;AAClC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;QAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACjE,IAAA,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;;;;;AAMG;AACG,SAAU,KAAK,CAAC,GAAW,EAAA;IAC7B,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACzC,IAAA,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;AAClC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;QAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACjE,IAAA,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;;;;;AAMG;AACG,SAAU,IAAI,CAAC,IAA8B,EAAA;AAC/C,IAAA,IAAI,EAAE,IAAI,YAAY,UAAU,CAAC;AAAE,QAAA,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;AAC/D,IAAA,OAAO,MAAM,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAkB,CAAC,CAAC,CAAC;AAClE,CAAC;AAED;;;AAGG;AAEmB,SAAA,UAAU,CAAC,IAAY,EAAE,MAAc,EAAA;;AACzD,QAAA,IAAI,eAAe,EAAE;AACjB,YAAA,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;AAC9B,YAAA,OAAO,MAAM,eAAe;iBACvB,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC;AACjF,iBAAA,IAAI,CAAC,CAAC,GAAG,KAAI;gBACV,OAAO;oBACH,MAAM,EAAE,UAAgB,KAAK,EAAA;;AACzB,4BAAA,OAAO,MAAM,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;yBAChE,CAAA,CAAA;AAAA,qBAAA;iBACJ,CAAC;AACN,aAAC,CAAC,CAAC;AACV,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,MAAM,GAAG,MAAM,OAAO,QAAQ,CAAC,CAAC;AACtC,YAAA,OAAO,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU;kBAC9B,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;AACzE,kBAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACnC,SAAA;KACJ,CAAA,CAAA;AAAA,CAAA;AAED;;;AAGG;AACG,SAAU,SAAS,CAAC,IAAY,EAAA;AAClC;;;AAGG;AACH,IAAA,OAAO,SAAe,IAAI,CAAC,KAAa,EAAE,MAAc,EAAA;;YACpD,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,MAAM,GAAG,IAAI,EAAE,MAAM,CAAC,CAAC;AACrD,YAAA,IAAI,eAAe,EAAE;AACjB,gBAAA,IAAI,CAAC,IAAI;AAAE,oBAAA,OAAO,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACnD,gBAAA,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,aAAA;AACD,YAAA,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACrE,CAAA,CAAA;KAAA,CAAC;AACN,CAAC;AAED;;;AAGG;AACG,SAAU,WAAW,CAAC,IAAY,EAAA;AACpC;;;AAGG;AACH,IAAA,OAAO,SAAe,MAAM,CAAC,KAAa,EAAE,SAAiB,EAAE,MAAc,EAAA;;AACzE,YAAA,OAAO,CAAC,MAAM,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,SAAS,CAAC;SAC/D,CAAA,CAAA;KAAA,CAAC;AACN,CAAC;AAOK,SAAU,KAAK,CAAC,MAAc,EAAA;AAChC,IAAA,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,KAAA;IACD,IAAI,IAAI,GAAG,QAAQ,CAAC;IAEpB,SAAS,MAAM,CAAC,IAAY,EAAA;QACxB,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACrE,IAAI,GAAG,SAAS,CAAC;AACjB,YAAA,OAAO,KAAK,CAAC;AAChB,SAAA;QACD,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC9E;AAED,IAAA,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5B,eAAe,GAAG,CAAC,yBAAyB,EAAE,uBAAuB,CAAC,EACtE,cAAc,GAAG,CAAC,wBAAwB,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,sBAAsB,CAAC,EAC7G,IAAI,GAAG,KAAK;SACP,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;AAC1B,SAAA,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;SAC7C,IAAI,CAAC,EAAE,CAAC,CAAC;IAClB,IAAI,IAAI,CAAC,MAAM,EAAE;AACb,QAAA,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAwB,IAAI,EAAE,CAAC;AAC7E,KAAA;AAAM,SAAA;AACH,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,KAAA;AACL,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFE;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCE;MACW,OAAO,CAAA;AAKhB,IAAA,WAAA,CAAY,MAAM,EAAA;QAJlB,IAAQ,CAAA,QAAA,GAAW,CAAC,CAAC;QACrB,IAAc,CAAA,cAAA,GAAY,KAAK,CAAC;QAChC,IAAS,CAAA,SAAA,GAAW,CAAC,CAAC;AAGlB,QAAA,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;KAC/B;AACJ,CAAA;AAEK,SAAU,QAAQ,CAAC,IAA8B,EAAA;AACnD,IAAA,IAAI,CAAC,IAAI;AAAE,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAE7C,IAAI,IAAI,YAAY,WAAW;AAAE,QAAA,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IAC7D,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,MAAM,GAAG,GAAG,EAAE,CAAC;AAEf,IAAA,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;AACvB,QAAA,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7B,KAAA;AACD,IAAA,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;;AAEvB,QAAA,GAAG,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACrC,GAAG,CAAC,gBAAgB,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;AAC3D,QAAA,GAAG,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AAC7C,QAAA,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACpC,QAAA,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACpC,QAAA,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACvC,QAAA,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACvC,QAAA,GAAG,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AAC5C,KAAA;AAAM,SAAA,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;;AAE9B,QAAA,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAE1B,QAAA,GAAG,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACrC,GAAG,CAAC,gBAAgB,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;AAC9D,KAAA;AAED,IAAA,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAEzG,IAAA,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AACd,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,KAAA;AAED,IAAA,OAAO,GAAG,CAAC;AACf,CAAC;SAEe,QAAQ,CAAC,IAAS,EAAE,IAAa,EAAE,KAAW,EAAA;AAC1D,IAAA,MAAM,QAAQ,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACvC,IAAA,IAAI,CAAC,IAAI;AAAE,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAE7C,IAAA,IAAI,GAAG,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAEpG,IAAI,IAAI,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AAC7C,QAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,KAAA;AACD,IAAA,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;IAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,IAAA,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC;SAC9B,GAAG,CAAC,UAAU,EAAE,EAAA;AACb,QAAA,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;QACb,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AACxB,QAAA,OAAO,EAAE,CAAC;AACd,KAAC,CAAC;AACD,SAAA,OAAO,EAAE,CAAC;AAEf,IAAA,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE;QAC7C,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3B,QAAA,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,KAAA,CAAC,CAAC;IAEH,IAAI,IAAI,KAAK,SAAS,EAAE;AACpB,QAAA,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACnC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9B,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9B,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACnC,SAAA,CAAC,CAAC;AACN,KAAA;AACD,IAAA,OAAO,GAAG,CAAC;AACf,CAAC;SAEe,OAAO,CAAC,MAAc,EAAE,IAA2B,EAAE,KAAM,EAAA;IACvE,OAAO,UAAU,CAAC,MAAK;AACnB,QAAA,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;AAC1B,QAAA,OAAO,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACrD,KAAC,CAAC,CAAC;AACP,CAAC;AAED;;;;;;;;;AASE;AAEI,SAAgB,UAAU,CAAC,IAAY,EAAA;;AACzC,QAAA,IAAI,eAAe,EAAE;YACjB,OAAO;gBACH,MAAM,EAAE,UAAU,KAAa,EAAA;oBAC3B,OAAO;wBACH,IAAI,EAAE,UAAgB,MAAc,EAAA;;AAChC,gCAAA,OAAO,MAAM,OAAO,CAAC,MAAM,EAAE,SAAS,EAAE;oCACpC,OAAO,EAAE,CAAC,MAAM,CAAC;oCACjB,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;AAClC,iCAAA,CAAC,CAAC,IAAI,CAAC,CAAO,OAAO,KAAI,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACtB,oCAAA,OAAO,MAAM,eAAe;yCACvB,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;wCAClF,MAAM;qCACT,CAAC;AACD,yCAAA,IAAI,CAAC,CAAO,GAAG,KAAI,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,wCAAA,OAAO,MAAM,eAAe;6CACvB,IAAI,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;6CAC5E,IAAI,CAAC,IAAI,CAAC;6CACV,IAAI,CAAC,GAAG,CAAC,CAAC;qCAClB,CAAA,CAAC,CAAC;iCACV,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;AAgBE;6BACL,CAAA,CAAA;AAAA,yBAAA;qBACJ,CAAC;iBACL;aACJ,CAAC;AACL,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,MAAM,GAAG,MAAM,OAAO,QAAQ,CAAC,CAAC;AACtC,YAAA,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,EAAE;AAC/B,gBAAA,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AAC7D,aAAA;AAAM,iBAAA;AACH,gBAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,aAAA;AACJ,SAAA;KACJ,CAAA,CAAA;AAAA,CAAA;AAEK,SAAU,SAAS,CAAC,IAAY,EAAA;AAClC,IAAA,OAAO,SAAe,IAAI,CAAC,KAAa,EAAE,UAAkB,EAAA;;YACxD,IAAI;gBACA,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;AAC5C,gBAAA,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;AACnE,aAAA;AAAC,YAAA,OAAO,CAAC,EAAE;AACR,gBAAA,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5B,aAAA;SACJ,CAAA,CAAA;KAAA,CAAC;AACN,CAAC;AAEK,SAAgB,YAAY,CAAC,IAAY,EAAA;;AAC3C,QAAA,IAAI,eAAe,EAAE;YACjB,OAAO;gBACH,MAAM,EAAE,UAAU,KAAa,EAAA;oBAC3B,OAAO;AACH,wBAAA,MAAM,EAAE,UAAgB,MAAc,EAAE,SAAiB,EAAA;;AACrD,gCAAA,OAAO,MAAM,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE;oCACnC,OAAO,EAAE,CAAC,QAAQ,CAAC;oCACnB,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;AAClC,iCAAA,CAAC,CAAC,IAAI,CAAC,CAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,KAAI,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAC5B,oCAAA,OAAO,MAAM,eAAe;AACvB,yCAAA,SAAS,CACN,KAAK,EACL,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EACb,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EACnD,KAAK,EACL,CAAC,QAAQ,CAAC,CACb;AACA,yCAAA,IAAI,CAAC,CAAO,GAAG,KAAI,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;wCAChB,OAAO,MAAM,eAAe,CAAC,MAAM,CAC/B,mBAAmB,EACnB,GAAG,EACH,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EACtB,KAAK,CAAC,KAAK,CAAC,CACf,CAAC;qCACL,CAAA,CAAC,CAAC;iCACV,CAAA,CAAC,CAAC;AACH;;;;;;;;;;;;;;;;AAgBI;6BACP,CAAA,CAAA;AAAA,yBAAA;qBACJ,CAAC;iBACL;aACJ,CAAC;AACL,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,MAAM,GAAG,MAAM,OAAO,QAAQ,CAAC,CAAC;AACtC,YAAA,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,YAAY,EAAE;AACjC,gBAAA,OAAO,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AAC/D,aAAA;AAAM,iBAAA;AACH,gBAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACrC,aAAA;AACJ,SAAA;KACJ,CAAA,CAAA;AAAA,CAAA;AAEK,SAAU,WAAW,CAAC,IAAY,EAAA;AACpC,IAAA,OAAO,SAAe,MAAM,CAAC,KAAa,EAAE,SAAiB,EAAE,SAAiB,EAAA;;YAC5E,IAAI;AACA,gBAAA,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5B,MAAM,SAAS,GAAG,MAAM,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;AACpD,gBAAA,OAAO,MAAM,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC/E,aAAA;AAAC,YAAA,OAAO,CAAC,EAAE;AACR,gBAAA,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5B,aAAA;SACJ,CAAA,CAAA;KAAA,CAAC;AACN,CAAC;AAED;;;AAGG;AACG,SAAgB,SAAS,CAAC,SAAiB,EAAE,KAAa,EAAE,SAAiB,EAAE,MAAc,EAAA;;QAC/F,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACvD,YAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC1C,SAAA;AACD,QAAA,MAAM,IAAI,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QAErC,IAAI,IAAI,KAAK,MAAM,EAAE;YACjB,OAAO,SAAS,KAAK,EAAE,CAAC;AAC3B,SAAA;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EACzB,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,QAAA,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAClD,YAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC1C,SAAA;AAED,QAAA,QAAQ,IAAI;AACR,YAAA,KAAK,IAAI;AACL,gBAAA,OAAO,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;AAC7D,YAAA,KAAK,IAAI;AACL,gBAAA,OAAO,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;AAC7D,YAAA;AACI,gBAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC9C,SAAA;KACJ,CAAA,CAAA;AAAA,CAAA;AAED;;;AAGG;SACmB,OAAO,CAAC,SAAiB,EAAE,KAAa,EAAE,MAAc,EAAA;;QAC1E,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACvD,YAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC1C,SAAA;AACD,QAAA,MAAM,IAAI,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QAErC,IAAI,IAAI,KAAK,MAAM,EAAE;AACjB,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EACzB,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,QAAA,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAClD,YAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC1C,SAAA;AAED,QAAA,QAAQ,IAAI;AACR,YAAA,KAAK,IAAI;gBACL,OAAO,MAAM,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAChD,YAAA,KAAK,IAAI;gBACL,OAAO,MAAM,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAChD,YAAA;AACI,gBAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC9C,SAAA;KACJ,CAAA,CAAA;AAAA,CAAA;AAEqB,SAAA,SAAS,CAAC,MAAc,EAAE,MAAc,EAAA;;AAC1D,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,EACrC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAC9B,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;QAC3C,OAAO,UAAU,CAAC,MAAM,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;KAChF,CAAA,CAAA;AAAA,CAAA;AAEM,MAAM,SAAS,GAAG,UAAU;AAC5B,MAAM,MAAM,GAAG,UAAU;AAEhB,SAAA,OAAO,CAAC,MAAc,EAAE,MAAc,EAAA;AAClD,IAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,EACnC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAC9B,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;IAC3C,OAAO,UAAU,CAAC,qDAAY,OAAA,MAAM,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA,EAAA,CAAA,CAAC,CAAC;AAC5E,CAAC;AAEM,MAAM,OAAO,GAAG,QAAQ;AACxB,MAAM,IAAI,GAAG,QAAQ;SAEN,SAAS,CAAC,MAAc,EAAE,MAAc,EAAE,GAAY,EAAA;;QACxE,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC3C,IAAI,CAAC,CAAC,GAAG;AAAE,YAAA,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AAChC,QAAA,GAAG,CAAC,SAAS,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;AACtD,QAAA,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;KACzB,CAAA,CAAA;AAAA,CAAA;AAEM,MAAM,SAAS,GAAG,UAAU;AAC5B,MAAM,MAAM,GAAG,UAAU;AAEhC;;;;AAIG;SACmB,UAAU,GAAA;;QAC5B,MAAM,MAAM,GAAG,SAAS,KAAK,MAAM,OAAO,QAAQ,CAAC,CAAC,CAAC;AACrD,QAAA,OAAO,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,aAAa,GAAG,WAAW,CAAC;KACjE,CAAA,CAAA;AAAA,CAAA;AAEK,SAAU,eAAe,CAAC,GAAG,EAAA;IAC/B,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAC/E,CAAC;AAEK,SAAU,UAAU,CAAC,KAAa,EAAA;AACpC,IAAA,IAAI,eAAe,CAAC,KAAK,CAAC,EAAE;AACxB,QAAA,MAAM,OAAO,GAAG,cAAc,EAAE,CAAC;QACjC,IAAI,CAAC,CAAC,OAAO,EAAE;AACX,YAAA,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAChC,SAAA;AACJ,KAAA;AACD,IAAA,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC;AACxB,CAAC;AAEK,SAAU,UAAU,CAAC,KAAsB,EAAA;AAC7C,IAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC3B,IAAI;AACA,YAAA,MAAM,OAAO,GAAG,cAAc,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,CAAC,OAAO,EAAE;gBACX,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AACvC,aAAA;AACJ,SAAA;QAAC,OAAM,EAAA,EAAA;;AAEP,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;AAChB,KAAA;IACD,IAAI;AACA,QAAA,MAAM,OAAO,GAAG,cAAc,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,CAAC,OAAO,EAAE;AACX,YAAA,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAChC,SAAA;AACJ,KAAA;IAAC,OAAM,EAAA,EAAA;;AAEP,KAAA;AACD,IAAA,OAAO,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACpC,CAAC;SAEe,cAAc,GAAA;AAC1B,IAAA,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;QACpC,OAAO,IAAI,WAAW,EAAE,CAAC;AAC5B,KAAA;AACD,IAAA,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;AAChC,QAAA,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAChC,QAAA,IAAI,QAAO,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,WAAW,CAAA,KAAK,WAAW,EAAE;AAC7C,YAAA,OAAO,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC;AACpC,SAAA;AACJ,KAAA;AACD,IAAA,OAAO,KAAK,CAAC;AACjB,CAAC;AAEe,SAAA,cAAc,CAAC,GAAG,IAAI,EAAA;AAClC,IAAA,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;AACpC,QAAA,OAAO,IAAI,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;AACnC,KAAA;AACD,IAAA,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;AAChC,QAAA,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAChC,QAAA,IAAI,QAAO,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,WAAW,CAAA,KAAK,WAAW,EAAE;YAC7C,OAAO,IAAI,OAAO,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3C,SAAA;AACJ,KAAA;AACD,IAAA,OAAO,KAAK,CAAC;AACjB;;;;"}